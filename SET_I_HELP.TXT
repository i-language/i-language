JA	ZZZZ000000	100		Ｉ言語の世界へようこそ。
JA	ZZZZ000000	200		★★パスワード入力後の注意★★
JA	ZZZZ000000	300		パスワード入力後、左上に名前が表示され本人専用となります。
JA	ZZZZ000000	400		  他人に使われないように、使用後は必ず画面を閉じて下さい。
JA	ZZZZ000000	500		★Ｉ言語は基幹システムまでを想定した情報処理システムを、
JA	ZZZZ000000	600		  【誰でも】しかも【早く】開発し運用出来る道具(ツール)です。
JA	ZZZZ000000	700		1)Ｉ言語のIはインスタントの略です、
JA	ZZZZ000000	800		  情報処理システムを、即座に作れる事を意味しています。
JA	ZZZZ000000	900		1.1)情報(データ)はリレーショナルデータベースに
JA	ZZZZ000000	1000		    二次元の表(テーブル)として持ちます。
JA	ZZZZ000000	1100		1.2)処理(プログラム)はSQLとＩ言語で作ります。
JA	ZZZZ000000	1200		    SQLを補完する機能をＩ言語で提供しています。
JA	ZZZZ000000	1300		2)当画面「ヘルプ 検索」での操作方法を説明します。
JA	ZZZZ000000	1400		2.1)↓と↑キーは表示内容をページ単位に上下に移動します。
JA	ZZZZ000000	1500		((入力の最初の位置である当画面では「操作」上でのみ可能です))
JA	ZZZZ000000	1600		<<<<<ここまで読んだら、↓キーで次のページを表示します>>>>>
JA	ZZZZ000000	1700		  Shift+↓及びShift+↑キーは行単位に上下に移動します。
JA	ZZZZ000000	1800		  Ctrl+↓,↑,←,→は画面全体を１０文字分移動します。
JA	ZZZZ000000	1900		  Ctrl+Shift+↓,↑,←,→は画面全体を１文字分移動します。
JA	ZZZZ000000	2000		  (Ｉ言語はプログラムがOUTPUTとINTPUTとNOTの３種類あります。
JA	ZZZZ000000	2100		   OUTPUTはデータを検索し表示する場合に使用します。
JA	ZZZZ000000	2200		   INPUTはデータを検索し削除､作成､修正する場合に使用します。
JA	ZZZZ000000	2300		   NOTはOUTPUTでもINPUTでもない場合に使用します。
JA	ZZZZ000000	2400		   当画面はOUTPUTとして作られているので、
JA	ZZZZ000000	2500		   OUTPUTの操作方法の説明となります）
JA	ZZZZ000000	2600		2.2)←キーは選択処理が有効な場合、選択処理が出来ます。
JA	ZZZZ000000	2700		    ↑↓のキーで移動し'0'を押して選択します。
JA	ZZZZ000000	2800	ZZZZ000000	   （当画面では「呼び出し」のヘルプを表示します）
JA	ZZZZ000000	2900		    選択処理が無い場合は行送りの変更をします。(当画面は有り)
JA	ZZZZ000000	3000		   （3行目の左に(PAGE)頁か(LINE)行が表示されます）
JA	ZZZZ000000	3100		2.3)Escキーは終了します。
JA	ZZZZ000000	3200		    (最上位行をクリックした場合もEscします）
JA	ZZZZ000000	3300		2.4)スクロールバーが表示された場合は以下が可能です。
JA	ZZZZ000000	3400		    F5は頁単位で上にスクロール(移動)します。
JA	ZZZZ000000	3500		    F6は頁単位で下にスクロール(移動)します。
JA	ZZZZ000000	3600		    Shift+F5は行単位で上にスクロールします。
JA	ZZZZ000000	3700		    Shift+F6は行単位で下にスクロールします。
JA	ZZZZ000000	3800		    F7は表示幅単位で左にスクロールします。(当画面は無いです）
JA	ZZZZ000000	3900		    F8は表示幅単位で右にスクロールします。(当画面は無いです）
JA	ZZZZ000000	4000		    Shift+F7は文字単位で左にスクロールします。(当画面無し）
JA	ZZZZ000000	4100		    Shift+F8は文字単位で右にスクロールします。(当画面無し）
JA	ZZZZ000000	4200		2.5)ジョブに10桁を入力しENTERで別のヘルプを表示します。
JA	ZZZZ000000	4300		    （これは当画面のみの説明です,Tabでジョブに移動します）
JA	ZZZZ000000	4400		3)Ｉ言語はクライアント／サーバー方式でメニューもプログラムも
JA	ZZZZ000000	4500		  その都度サーバーから受信して実行されます。
JA	ZZZZ000000	4600		4)Ｉ言語には以下の機能が有ります。
JA	ZZZZ000000	4700		4.1)－－メニュー機能が有ります。
JA	ZZZZ000000	4800		    ３つのメニューを表示しジョブ(プログラム)に到達します。
JA	ZZZZ000000	4900		4.2)－－パスワードチェック機能が有ります。４種類です。
JA	ZZZZ000000	5000		    （１）ジョブを指定しパスワードチェックをする［J］(JOB)
JA	ZZZZ000000	5100		    （２）パスワードチェックをしない   [ ］
JA	ZZZZ000000	5200		    （３）パスワードチェックのみでＯＫ［P］(PASSWORD)
JA	ZZZZ000000	5300		    （４）管理者のみＯＫ              ［A］(ADMINISTRATOR)
JA	ZZZZ000000	5400		4.3)－－プログラム開発支援機能が有ります。
JA	ZZZZ000000	5500		4.4)－－基幹システムまで想定したシステム運用機能が有ります。
JA	ZZZZ000000	5600		(基幹システムまで構築出来る全機能を網羅しています）
JA	ZZZZ000000	5700		5)プログラム開発の注意事項。
JA	ZZZZ000000	5800		  共通部はツール側で対応しますが,個別の部分はSQLを使用します,
JA	ZZZZ000000	5900		  従って、SQLの知識が必要です。
JA	ZZZZ000000	6000		6)プログラム使用の注意事項。
JA	ZZZZ000000	6100		  実行時毎回サーバーよりプログラムを受信し、更に、
JA	ZZZZ000000	6200		  インタープリタ方式(都度プログラムを解析しながら動く)のため
JA	ZZZZ000000	6300		  超高速で実行しなければならないプログラムには向きません。
JA	ZZZZ000000	6400		7)別画面でのメニュー表示方法。
JA	ZZZZ000000	6500		  (1)F2を押す。
JA	ZZZZ000000	6600		  (2)メニューボックス(マウスの右ボタンを押す)でMenuを選ぶ。
JA	ZZZZ000000	6700		8)メニュー操作の説明
JA	ZZZZ000000	6800		8.1)メニュー選択方法
JA	ZZZZ000000	6900		   (1)２桁の番号をキーボードから入力する。
JA	ZZZZ000000	7000		   (2)該当メニューにマウスを移動しクリックする。
JA	ZZZZ000000	7100		8.2)上位メニューへ戻る方法
JA	ZZZZ000000	7200		   (1)'00'をキーボードから入力する。
JA	ZZZZ000000	7300		   (2)Escキーを押す。
JA	ZZZZ000000	7400		   (3)最上部１行目にマウスを移動しクリックする。
JA	ZZZZ000000	7500		8.3)メニューの終了方法
JA	ZZZZ000000	7600		   (1)'99'をキーボードから入力する。
JA	ZZZZ000000	7700		   (2)右上の[×]ボタンを押す。（メニュー以外でも終了します）
JA	ZZZZ000000	7800		   (3)Alt+F4を押す。          （メニュー以外でも終了します）
JA	ZZZZ000000	7900		9)画面の印刷の方法
JA	ZZZZ000000	8000		   (1)Ctrl+Pを押す。
JA	ZZZZ000000	8100		   (2)メニューボックスでPrintを選ぶ。
JA	ZZZZ000000	8200		10)ジョブ実行中のヘルプの表示方法
JA	ZZZZ000000	8300		  (1)F1を押す。
JA	ZZZZ000000	8400		  (2)メニューボックスでHelpを選ぶ。
JA	ZZZZ000000	8500		11)クリップボードへの文字列コピーの方法
JA	ZZZZ000000	8600		  (1)入力位置の一部はCtrl+Cを押す。(その位置から最後まで）
JA	ZZZZ000000	8700		  (2)入力位置の一部はシフトを押しながら→矢印で移動する。
JA	ZZZZ000000	8800		   (注意:右端まで全表示の場合は最後の文字はコピー出来ません、
JA	ZZZZ000000	8900		         右端までコピーする場合はEndキーを押すと出来ます）
JA	ZZZZ000000	9000		  (3)１項目はマウスを右にドラッグ(左ボタンを押したまま移動)
JA	ZZZZ000000	9100		  (4)１画面分はCtrl+Aを押す。
JA	ZZZZ000000	9200		  (5)１画面分はメニューボックスでAll Copyを選ぶ。
JA	ZZZZ000000	9300		12)クリップボードから貼り付けの方法。
JA	ZZZZ000000	9400		  (1)Ctrl+Vを押す。
JA	ZZZZ000000	9500		  (2)入力位置上(反転表示位置)でクリックする。
JA	ZZZZ000000	9600		13)入力位置での動き。
JA	ZZZZ000000	9700		  (1)Ins(Insert)でその位置に挿入出来ます。(反転背景が灰色化)
JA	ZZZZ000000	9800		     （再度のInsキーで上書きに戻ります、反転背景が黒に戻る)
JA	ZZZZ000000	9900		  (2)Del(Delete)でその位置の文字が消えます。
JA	ZZZZ000000	10000		    (Ctrl+Delではその位置から最後まで全て消えます）
JA	ZZZZ000000	10100		  (3)Back Spaceでその位置の前の文字が消えます。
JA	ZZZZ000000	10200		    (Ctrl+BackSpaceでは先頭からその位置の前まで全て消えます）
JA	ZZZZ000000	10300		  (4)→キーで右に進みます。 (最後の次では次の項目に進みます）
JA	ZZZZ000000	10400		  (5)←キーで左に戻ります。（先頭では前の項目に戻ります）
JA	ZZZZ000000	10500		  (6)Homeで先頭位置に戻ります。
JA	ZZZZ000000	10600		  (7)Endで最後の次の位置に進みます。
JA	ZZZZ000000	10700		  (8)TabまたはEnterで次の項目に進みます。
JA	ZZZZ000000	10800		  (9)Shift+Tabで前の項目に戻ります。
JA	ZZZZ000000	10900		  (10)↓キー、↑キー、Escで入力中の項目から抜けます。
JA	ZZZZ000000	11000		  (11)別の入力項目をクリックしても抜けます。
JA	ZZZZ000000	11100		14)検索文字を入力する場合SQLのLIKEが基本です。
JA	ZZZZ000000	11200		   (以下LIKEの説明)
JA	ZZZZ000000	11300		  '%'は０文字以上どんな文字でもＯＫです。
JA	ZZZZ000000	11400		  '_'は１文字でどんな文字でもＯＫです。
JA	ZZZZ000000	11500	ZZZZ010000	15)システム関連プログラムがシステム支援に有ります。
JA	ZZZZ000000	11600	ZZZZ010200	16)システム開発の説明が左記ヘルプに有ります。
JA	ZZZZ000000	11700	ZZZZ010212	17)ＳＱＬの文法が左記ヘルプに有ります。
JA	ZZZZ000000	11800	ZZZZ010241	18)Ｉ言語の文法が左記ヘルプに有ります。
JA	ZZZZ000000	11900		19)INPUTプログラムの操作方法。
JA	ZZZZ000000	12000		  (ZZZZ010321の「更新　サンプル」がINPUTで作られてます）
JA	ZZZZ000000	12100		19.1)基本的にはOUTPUTプログラムと同じです。
JA	ZZZZ000000	12200		19.2)←キーで更新と検索の切り替えが出来ます。
JA	ZZZZ000000	12300		  注意：←キーが動かない場合は、Enterで検索すると動きます。
JA	ZZZZ000000	12400		19.3)更新では'1'が削除で'2'が作成で'3'が修正ですが
JA	ZZZZ000000	12500		     抑止されている場合もあります。
JA	ZZZZ000000	12600		19.4)更新プログラムが'0'で選択処理する物もあります。
JA	ZZZZ000000	12700		19.5)削除処理では削除確認入力が来ます。
JA	ZZZZ000000	12800		     削除する場合は更に'1'を入力しEnterして下さい。
JA	ZZZZ000000	12900		     正常に表示されているもののみ削除できます。
JA	ZZZZ000000	13000		     削除をキャンセルする場合はEscキーを押して下さい。
JA	ZZZZ000000	13100		19.6)作成処理は全ての入力項目に入力後作成します。
JA	ZZZZ000000	13200		     Enter又はTabキーは次の入力項目に移ります。
JA	ZZZZ000000	13300		     間違えた場合は←キー又はShift+Tabで戻ります。
JA	ZZZZ000000	13400		     処理を中止したい場合はEscキーを押します。
JA	ZZZZ000000	13500		     ↓キーで入力項目の最後に移動します。
JA	ZZZZ000000	13600		     ↑キーで入力項目の最初に移動します。
JA	ZZZZ000000	13700		     クリックで入力位置を移動できます。
JA	ZZZZ000000	13800		19.7)修正処理ではキー項目の入力は出来ません。
JA	ZZZZ000000	13900		     正常に表示されているもののみ修正できます。
JA	ZZZZ000000	14000		19.8)リストボックスが表示された場合は
JA	ZZZZ000000	14100		     PgUp(PageUp),PgDn(PageDown)で該当文字を撰ぶか、
JA	ZZZZ000000	14200		     手動で入力するか、リストボックス上でクリックします。
JA	ZZZZ000000	14300		 ***** IIDA NAGANO JAPAN Author NOBUMICHI HARASAWA. *****
JA	ZZZZ000000	14400		                                                       以上。
JA	ZZZZ010000	100	ZZZZ010000	?MENU?
JA	ZZZZ010000	200		ツールが提供するシステムを支援する為のメニューです。
JA	ZZZZ010000	300	ZZZZ010100	?MENU?
JA	ZZZZ010000	400		システム提供分の各種処理のメニューです。
JA	ZZZZ010000	500	ZZZZ010200	?MENU?
JA	ZZZZ010000	600		データ辞書,テーブル,プログラム等を作るシステム開発用です。
JA	ZZZZ010000	700	ZZZZ010300	?MENU?
JA	ZZZZ010000	800		基本的な使用方法の分かるサンプルプログラムのメニューです。
JA	ZZZZ010000	900	ZZZZ010400	?MENU?
JA	ZZZZ010000	1000		開発したテーブル,プログラム等を本番で使用できるようにします。
JA	ZZZZ010000	1100	ZZZZ010500	?MENU?
JA	ZZZZ010000	1200		時間起動,許可や許可区分等の更新のシステム運用メニューです。
JA	ZZZZ010000	1300	ZZZZ010600	?MENU?
JA	ZZZZ010000	1400		その他のシステム運用メニューです。
JA	ZZZZ010000	1500	ZZZZ010700	?MENU?
JA	ZZZZ010000	1600		どの組織でも共通に使うと思われるシステムの雛型です。
JA	ZZZZ010100	100		システムが提供した各種処理をするメニューです
JA	ZZZZ010100	200		(1)ヘルプを検索します。
JA	ZZZZ010100	300		(2)使用者を更新します。
JA	ZZZZ010100	400		   使用者には許可と認証区分で条件を設定します。
JA	ZZZZ010100	500		(3)使用者に対し認証処理をします。
JA	ZZZZ010100	600		   認証方法は２種類存在し、１個目はジョブ単位に認証します。
JA	ZZZZ010100	700		   もう1個は複数ジョブをグループ単位で指定し認証します.
JA	ZZZZ010100	800		(4)ジョブをメニューを介さないで直接実行します。
JA	ZZZZ010100	900		(5)カレンダーは時間起動のスケジュールで使用します。
JA	ZZZZ010100	1000		   既定休日を初期値として事前に設定できます。
JA	ZZZZ010100	1100		   稼働日の朝立ち上げの時間起動処理でカレンダーが作られます.
JA	ZZZZ010100	1200		(6)混在テーブルはシステムの細かな情報を１個にまとめた物です。
JA	ZZZZ010100	1300		(7)保管テーブルはプログラムで"!データ名"で設定した物です。
JA	ZZZZ010100	1400		(8)クライアントで発生したエラー履歴を見ます。
JA	ZZZZ010101	1000		                                                      ZZZZ010
JA	ZZZZ010114	100	ZZZZ010134	左記に内容説明が有ります。
JA	ZZZZ010134	100		(1)曜日の表現方法。
JA	ZZZZ010134	200		   01=日曜日,02=月曜日,03=火曜日,04=水曜日,05=木曜日
JA	ZZZZ010134	300		   06=金曜日,07=土曜日
JA	ZZZZ010134	400		(2)曜日単位の休日指定。
JA	ZZZZ010134	500		   月に00,マークに0,日に曜日を入れます。
JA	ZZZZ010134	600		(3)その月の第何 何曜日の指定。
JA	ZZZZ010134	700		   月に月,マークに第何週,日に曜日を入れます。
JA	ZZZZ010134	800		(4)何月何日の指定。
JA	ZZZZ010134	900		   月に月,マークに'D',日に日を入れます。
JA	ZZZZ010137	100		◎混在テーブルは各種のデータを混在記憶する物です。
JA	ZZZZ010137	200		注意：混在テーブルは非公開情報は登録しないで下さい。
JA	ZZZZ010137	300		注意：混在テーブルはテスト用も同時に更新します。
JA	ZZZZ010137	400		◎I言語提供分の情報は以下のようになっています。
JA	ZZZZ010137	500		(1)キー１='ZZZZZZ_%'はプログラムスイッチの初期値です。
JA	ZZZZ010137	600		   最初は何もありませんが、複数のプログラムの動きをスイッチで
JA	ZZZZ010137	700		   一気に変えたい場合に使用します。
JA	ZZZZ010137	800		   ○キー２がスイッチ名です。(先頭%は無し）
JA	ZZZZ010137	900		   ○ETCデータに'-'または'+'を設定します。(無指定時は'+'）
JA	ZZZZ010137	1000		(2)キー１='ZZZZZZ_@'は外部から与える固定値です。
JA	ZZZZ010137	1100		   ○キー２が変数名です。(大文字）
JA	ZZZZ010137	1200		   ○ETCデータが内容です。
JA	ZZZZ010137	1300		(3)キー１='ZZZZZZ_COPY'はCOPY=@...でコピーするプログラムです
JA	ZZZZ010137	1400		   ○キー２の先頭25文字がコピー名で,(先頭@は無し）
JA	ZZZZ010137	1500		     26文字目から番号になります。
JA	ZZZZ010137	1600		   ○ETCデータがコピーされるプログラムです。
JA	ZZZZ010137	1700		(4)キー１='ZZZZZZ_INSTALL'はクライアントインストール用です。
JA	ZZZZ010137	1800		   ZZZZ010538の「ENU0 & インストール　設定」で作成されます。
JA	ZZZZ010137	1900		(5)キー１='ZZZZZZ_MENU0'はクライアントメニュー用です。
JA	ZZZZ010137	2000		   ZZZZ010538の「ENU0 & インストール　設定」で作成されます。
JA	ZZZZ010137	2100		(6)キー１='ZZZZZZ_PART:部分名'は部分名用です。
JA	ZZZZ010137	2200		   ZZZZ010525の「部分の更新」で作成されます。
JA	ZZZZ010137	2300		(7)キー１='ZZZZZZ_PERMISSION 'は許可名用です。
JA	ZZZZ010137	2400		   ZZZZ010540の「許可の更新,パスワードの確認」で作成されます
JA	ZZZZ010137	2500		(8)キー１='ZZZZZZ_PROGRAM 'はプログラムの雛形です。
JA	ZZZZ010137	2600		(9)キー１='ZZZZZZ_SYSTEM'システム用データです。
JA	ZZZZ010137	2700		●'ZZZZZZ_CALENDAR_ADD'はカレンダーの追加日です。
JA	ZZZZ010137	2800		  ○デフォルトは２年先です（365*2)
JA	ZZZZ010137	2900		●'ZZZZZZ_CALENDAR_CANCEL'はカレンダーの削除日です。
JA	ZZZZ010137	3000		  ○デフォルトは１年前です（365*1)
JA	ZZZZ010137	3100		●'ZZZZZZ_COUNTRY'はシステムの国コードです。
JA	ZZZZ010137	3200		●'ZZZZZZ_DATE'は今日の日付けです。
JA	ZZZZ010137	3300		  ○時間起動JOBZZZZ999950で変更されます。
JA	ZZZZ010137	3400		●'ZZZZZZ_DATE_OLD'は今日の日付けの前回分です。
JA	ZZZZ010137	3500		  ○時間起動JOBZZZZ999950で変更されます。
JA	ZZZZ010137	3600		●'ZZZZZZ_DB_M'はSQLSERVERRのインストールパスです。
JA	ZZZZ010137	3700		●'DBBACKUP_COUNT_SAVE_R'は本番DBの保管ファイル数です。
JA	ZZZZ010137	3800		●'DBBACKUP_COUNT_SAVE_T'はテストDBの保管ファイル数です。
JA	ZZZZ010137	3900		●'DBBACKUP_REAL_MAST'は本番マスタDBのバックアップ指示です。
JA	ZZZZ010137	4000		●'DBBACKUP_REAL_WORK'は本番ワークDBのバックアップ指示です。
JA	ZZZZ010137	4100		●'DBBACKUP_TEST_MAST'はテストマスタDBのバックアップ指示です
JA	ZZZZ010137	4200		●'DBBACKUP_TEST_WORK'はテストワークDBのバックアップ指示です
JA	ZZZZ010137	4300		●'ZZZZZZ_FIREBIRD_WEEK1',2,3はFireBirdの曜日判定用です。
JA	ZZZZ010137	4400		●'ZZZZZZ_I_ERROR_TABLE_CANCEL'はERROR_TABLEのCANCEL日です。
JA	ZZZZ010137	4500		●'ZZZZZZ_I_TIME_LOG_TABLE_CANCEL'はTIME_LOGのCANCEL日です。
JA	ZZZZ010137	4600		●'ZZZZZZ_I_USE_TABLE_CANCEL'はUSE_TABLEのCANCEL日です。
JA	ZZZZ010137	4700		●'ZZZZZZ_INSTALL_CFG'インストールで設定された内容です。
JA	ZZZZ010137	4800		●'ZZZZZZ_PASSWORD_LIMIT_DATE'はパスワード有効期限です。
JA	ZZZZ010137	4900		  無期限にしたい場合は「0」にして下さい。
JA	ZZZZ010137	5000		●'ZZZZZZ_PASSWORD_MIN_ALPHABET'はパスワード最少英字数です。
JA	ZZZZ010137	5100		●'ZZZZZZ_PASSWORD_MIN_LENGTH'はパスワード最少文字数です。
JA	ZZZZ010137	5200		●'ZZZZZZ_PASSWORD_MIN_NUMBER'はパスワード最少数字数です。
JA	ZZZZ010137	5300		●'ZZZZZZ_CHECK_LANG'は言語チェック用です。
JA	ZZZZ010137	5400		●'ZZZZZZ_TIME_LIMIT'は時間起動予約できる最大時間です。
JA	ZZZZ010137	5500		●'ZZZZZZ_TIME_START'は朝の立ち上げ処理の起動する時間です。
JA	ZZZZ010137	5600		●'ZZZZZZ_Z_CANCEL_DELETE'は全テーブルのZ_CANCELが
JA	ZZZZ010137	5700		  ETCデータ日にち以前のものをDELETEします。
JA	ZZZZ010200	100		システム開発のためのメニューです。
JA	ZZZZ010200	200		システム開発の手順を説明します。
JA	ZZZZ010200	300		(0)許可と許可区分について。
JA	ZZZZ010200	400		許可は使用者に与えられ, 英字４文字で表します。
JA	ZZZZ010200	500		使用者の許可をデータ辞書,テーブル,プログラムで使えます。
JA	ZZZZ010200	600		インストール時,許可'ZZZY'と'ZZZZ'が出来ます。
JA	ZZZZ010200	700		(ZAAAからZZZXまでの許可を作る事が出来ます）
JA	ZZZZ010200	800		(AAAAからVZZZまではパッケージソフト用です）
JA	ZZZZ010200	900		許可'ZZZZ'以外は個々の部署を単位としたシステム用です。
JA	ZZZZ010200	1000		許可'ZZZZ'は全員を対象としたシステム用です。
JA	ZZZZ010200	1100		使用者の認証区分を'ADMIN'とすると許可の管理権限を持ちます。
JA	ZZZZ010200	1200		(許可'ZZZZ'の'ADMIN'は全ての許可に対する管理権限を持ちます）
JA	ZZZZ010200	1300		許可区分は英数字２文字で表します。
JA	ZZZZ010200	1400		許可区分は許可を更に細分化する為に使用します。
JA	ZZZZ010200	1500		インストール時許可'ZZZY'は'ZZ','ZY','AA'の許可区分が出来ます.
JA	ZZZZ010200	1600		インストール時許可'ZZZZ'は'ZZ','ZY'の許可区分が出来ます。
JA	ZZZZ010200	1700		(許可'ZZZZ',許可区分'ZZ'はツール専用です)
JA	ZZZZ010200	1800		データ名は許可単位に設定出来ます。
JA	ZZZZ010200	1900		(許可区分は使わないので、許可区分単位の先頭文字を推奨します）
JA	ZZZZ010200	2000		テーブル名の先頭は許可と同じにする必要が有ります。
JA	ZZZZ010200	2100		(許可の次は許可区分とする事を推奨します）
JA	ZZZZ010200	2200		ジョブ(プログラムの単位)は許可と許可区分が設定されます。
JA	ZZZZ010200	2300		(1)データ辞書を作る。(事前にデータ名を設定します）
JA	ZZZZ010200	2400	ZZZZ010225	?MENU?で作ります。
JA	ZZZZ010200	2500		テーブルに定義するデータ名は必ず指定する必要があります。
JA	ZZZZ010200	2600		データ名は許可を単位として設定します。
JA	ZZZZ010200	2700		データ名の先頭は許可区分単位で同じとする事を推奨します。
JA	ZZZZ010200	2800		既に本番へ移行済みのデータ辞書は更新出来ません。
JA	ZZZZ010200	2900		(使用テーブルが本番移行されるとデータ辞書も本番移行されます）
JA	ZZZZ010200	3000		(2)テーブルを作る。(テーブルは情報(データ)を記憶する器です）
JA	ZZZZ010200	3100	ZZZZ010226	?MENU?で作ります。
JA	ZZZZ010200	3200		テーブル名先頭４文字は許可と同じにする必要があります。
JA	ZZZZ010200	3300		テーブル名の許可の次は許可区分とする事を推奨します。
JA	ZZZZ010200	3400		テスト専用として作られるので本番業務には影響はありません。
JA	ZZZZ010200	3500		既に本番へ移行済みのテーブルは更新できません。
JA	ZZZZ010200	3600		(3)プログラムを作る。(プログラムは処理手順を書きます）
JA	ZZZZ010200	3700		プログラムはメニューから起動するメニュー起動ジョブと
JA	ZZZZ010200	3800		  時間で起動する時間起動ジョブがあります。
JA	ZZZZ010200	3900		既に本番へ移行済みのジョブは更新出来ません。
JA	ZZZZ010200	4000		(3.1)メニュー起動ジョブは
JA	ZZZZ010200	4100	ZZZZ010221	  ?MENU?で作ります。
JA	ZZZZ010200	4200		操作でTABLE[ENTER]はテーブルを元にプログラムを組み立てます。
JA	ZZZZ010200	4300		操作でTEST[ENTER]とするとテスト実行します。
JA	ZZZZ010200	4400		操作でB[ENTER]とすると実行結果の履歴が見られます。
JA	ZZZZ010200	4500		(3.2)時間起動ジョブは
JA	ZZZZ010200	4600	ZZZZ010222	  ?MENU?で作ります。
JA	ZZZZ010200	4700		画面を表示しない画面表示関連等、使えない命令があります。
JA	ZZZZ010200	4800	ZZZZ010400	(4)本番移行は?MENU?
JA	ZZZZ010200	4900		   で行ないます。
JA	ZZZZ010212	100		1.1)利用者の説明
JA	ZZZZ010212	200		  OUT:OUTユーザで動くのでSELECT権限のみ有ります。
JA	ZZZZ010212	300		  INP:INPユーザで動くのでINSERT,UPDATE,SELECT権限が有ります。
JA	ZZZZ010212	400		  DBO:DELETE,INSERT,UPDATE,SELECT権限が有ります。
JA	ZZZZ010212	500		  LOGIN:ログインIDを指定出来ます。（RDBMSの管理者で使用の時）
JA	ZZZZ010212	600		1.2)SQLの種類の説明
JA	ZZZZ010212	700		  SQL=:「SQL=SQL文」  を実行で検索のSELECTが有効です。
JA	ZZZZ010212	800		  =SQL:「=SQL{SQL文}」を実行で更新のINSERT,UPDATE,DELETE
JA	ZZZZ010212	900		         が有効です。
JA	ZZZZ010212	1000		2.1)開始番号の説明。
JA	ZZZZ010212	1100		  SQL実行は開始番号以降"0"の選択行までを実行します。
JA	ZZZZ010212	1200		2.2)記号の説明。
JA	ZZZZ010212	1300		  " ":全RDBMSで実行されます。
JA	ZZZZ010212	1400		  "*":コメント行でSQL実行時無視されます。
JA	ZZZZ010212	1500		  以外:該当RDBMSでのみ実行します。
JA	ZZZZ010212	1600		2.3)SQL文の説明。
JA	ZZZZ010212	1700		  行が変わっても改行が付かないので区切は空白を入れて下さい。
JA	ZZZZ010212	1800		  メニューからの許可+部分の設定は出来ないので
JA	ZZZZ010212	1900		     "?_MM?"は"?_MP_許可?部分"として下さい。
JA	ZZZZ010212	2000		*************************************************************
JA	ZZZZ010212	2100		SQLの文法。
JA	ZZZZ010212	2200		●文法の記入で[]で囲まれは部分は省略可能の意味です。
JA	ZZZZ010212	2300		●当文法は必要と思われる基本部分のみを掲載しています。
JA	ZZZZ010212	2400		●当文法はMS SQL SERVER 2005,2008を基本とした説明です。
JA	ZZZZ010212	2500		  (MSSQL固有の物は{MSSQL}を右に付けて有ります）
JA	ZZZZ010212	2600		==================================================
JA	ZZZZ010212	2700		１）行を取得する方法。
JA	ZZZZ010212	2800		  SELECT [DISTINCT] 式,...
JA	ZZZZ010212	2900		    [FROM  テーブル名 [別名]
JA	ZZZZ010212	3000		         [結合 テーブル名 [別名][ON 条件]],...]
JA	ZZZZ010212	3100		    [WHERE 条件]
JA	ZZZZ010212	3200		    [GROUP BY 式,...]
JA	ZZZZ010212	3300		    [HAVING 条件]
JA	ZZZZ010212	3400		    [ORDER BY 式 [DESC],...]
JA	ZZZZ010212	3500		◎DISTINCTは一意な行のみ取得されます。
JA	ZZZZ010212	3600		◎式はCASE式も記入できます。（式,CASE式は下記）
JA	ZZZZ010212	3700		◎FROMは使用するテーブル名やビユー名を指定します。
JA	ZZZZ010212	3800		  又テーブル同士の結合もできます。（結合は下記）
JA	ZZZZ010212	3900		◎別名を指定すると別名.列名で列を一意にできます。
JA	ZZZZ010212	4000		◎WHEREは取得行の条件を指定します。(条件は下記)
JA	ZZZZ010212	4100		◎GROUP BYは分割されるグループを指定します。
JA	ZZZZ010212	4200		  又集計関数が含まれている場合は集計値も返します。
JA	ZZZZ010212	4300		◎HAVINGは集計関数に対する条件を指定します。
JA	ZZZZ010212	4400		◎ORDER BYは行の取得の順番を指定します。
JA	ZZZZ010212	4500		◎DESCは大きい順を指定します。
JA	ZZZZ010212	4600		==================================================
JA	ZZZZ010212	4700		２）式
JA	ZZZZ010212	4800		◎数値や文字列を指定できます。(文字列は'で囲む）
JA	ZZZZ010212	4900		◎列名を指定できます。
JA	ZZZZ010212	5000		◎関数を指定できます。（関数は下記）
JA	ZZZZ010212	5100		◎数値は算術演算子(+,-,*=乗算,/=除算)が使えます。
JA	ZZZZ010212	5200		◎文字列は+記号で結合できます。{MSSQL}
JA	ZZZZ010212	5300		  (I言語では?_C?を使用します）
JA	ZZZZ010212	5400		◎１つの値を返すサブクエリを指定できます。(サブクエリは下記)
JA	ZZZZ010212	5500		==================================================
JA	ZZZZ010212	5600		３）ＣＡＳＥ式
JA	ZZZZ010212	5700		●単純ＣＡＳＥ式。
JA	ZZZZ010212	5800		  CASE 式  WHEN 式 THEN 式  ... [ELSE 式] END
JA	ZZZZ010212	5900		◎CASEの式にWHENの式が一致した時THENの式を返す。
JA	ZZZZ010212	6000		●検索ＣＡＳＥ式。
JA	ZZZZ010212	6100		  CASE WHEN 条件 THEN 式 ...  [ELSE 式] END
JA	ZZZZ010212	6200		◎WHENの条件が一致した時THENの式を返します。
JA	ZZZZ010212	6300		●CASE関連の関数。{MSSQL}
JA	ZZZZ010212	6400		  COALESCE(式,式,...)最初のNULL以外の式を返す。
JA	ZZZZ010212	6500		  NULLIF(式1,式2)等しい時NULLを以外は式1を返す。
JA	ZZZZ010212	6600		==================================================
JA	ZZZZ010212	6700		４）結合
JA	ZZZZ010212	6800		  CROSS JOIN  ２つのﾃｰﾌﾞﾙのクロス結合です。
JA	ZZZZ010212	6900		        （注意：ON以下の条件は指定できません）
JA	ZZZZ010212	7000		  INNER       全ての内部行を返す、不一致行は破棄。
JA	ZZZZ010212	7100		  LEFT [OUTER] 左外部行を返す,無い列はNULLを返す。
JA	ZZZZ010212	7200		  RIGHT [OUTER]右外部行を返す,無い列はNULLを返す。
JA	ZZZZ010212	7300		  FULL [OUTER]  条件に合わない行も返す。
JA	ZZZZ010212	7400		==================================================
JA	ZZZZ010212	7500		５）条件
JA	ZZZZ010212	7600		  式 比較演算子 式              （比較演算子,=,>,<,>=,<=,<>)
JA	ZZZZ010212	7700		  式 IS [NOT] NULL              （ヌル値の判定）
JA	ZZZZ010212	7800		  [NOT] EXISTS サブクエリ       （存在するかの判定）
JA	ZZZZ010212	7900		  式 [NOT] IN(定数又は列名,..)   (一致するかの判定)
JA	ZZZZ010212	8000		  式 [NOT] IN(サブクエリ)    (注:遅いのでEXISTSを推奨します)
JA	ZZZZ010212	8100		  式 [NOT] LIKE '文字列'      (ワイルドカードのパターン照合)
JA	ZZZZ010212	8200		◎ANDで２つの条件の論理積を指定できます。
JA	ZZZZ010212	8300		◎ORで２つの条件の論理和を指定できます。
JA	ZZZZ010212	8400		◎NOTで条件を否定できます。
JA	ZZZZ010212	8500		◎(,)でグループ分けできます。
JA	ZZZZ010212	8600		==================================================
JA	ZZZZ010212	8700		６）関数（集計関数含む）
JA	ZZZZ010212	8800		６．１ 集計関数
JA	ZZZZ010212	8900		   AVG(列）  平均値を返します。
JA	ZZZZ010212	9000		   COUNT(列) NULLでない値の行数を返します。
JA	ZZZZ010212	9100		   COUNT(*)  NULL値も含むすべての行数を返します。
JA	ZZZZ010212	9200		   MAX(列)   最大値を返します。
JA	ZZZZ010212	9300		   MIN(列)   最小値を返します。
JA	ZZZZ010212	9400		   SUM(列)   合計値を返します。
JA	ZZZZ010212	9500		６．２ CONVERT関数 {MSSQL}
JA	ZZZZ010212	9600		   CONVERT(データ型，列[,スタイル])  {MSSQL}
JA	ZZZZ010212	9700		●データ型
JA	ZZZZ010212	9800		   CHAR(文字数) [DEFAULT ' ' NOT NULL]     文字を指定します。
JA	ZZZZ010212	9900		   DATETIME [NULL]                         日時を指定します。
JA	ZZZZ010212	10000		   DECIMAL(桁数,少数) [DEFAULT 0 NOT NULL] 真数を指定します。
JA	ZZZZ010212	10100		   FLOAT [DEFAULT 0 NOT NULL]              概数を指定します。
JA	ZZZZ010212	10200		   INT [DEFAULT 0 NOT NULL]                整数を指定します。
JA	ZZZZ010212	10300		●スタイル（一部,日付け時刻の変換方法を指定します)
JA	ZZZZ010212	10400		   112    YYYYMMDD  の出力になります。（ＩＳＯ）
JA	ZZZZ010212	10500		   114    HH:MI:SS:MMMM の出力になります。
JA	ZZZZ010212	10600		６．３ 値付け関数 {MSSQL}
JA	ZZZZ010212	10700		   DATEADD(パラメータ,数値,日付け） 日付けの計算。{MSSQL}
JA	ZZZZ010212	10800		   (I言語では?_MP_ZZZZ?_DAY_DATE_FUNC関数または
JA	ZZZZ010212	10900		             ?_MP_ZZZZ?_DAY_CHAR_FUNC関数を使用します）
JA	ZZZZ010212	11000		   DATEPART(パラメータ,日付け） 要素を整数で返す。{MSSQL}
JA	ZZZZ010212	11100		   (I言語では日付けデータは通常はCHARを使用するので
JA	ZZZZ010212	11200		    ?_SUBSTR?で代用します）
JA	ZZZZ010212	11300		   GETDATE()            現在日付け時刻を返します。{MSSQL}
JA	ZZZZ010212	11400		   (I言語では?_NOW_DATE?または？_NOW0?を使用します）
JA	ZZZZ010212	11500		●パラメータ
JA	ZZZZ010212	11600		   YY       年     1753-999
JA	ZZZZ010212	11700		   MM       月     1-12
JA	ZZZZ010212	11800		   DD       日     1-31
JA	ZZZZ010212	11900		   DW       曜日   1-7（日-土）
JA	ZZZZ010212	12000		   HH       時     0-23
JA	ZZZZ010212	12100		   MI       分     0-59
JA	ZZZZ010212	12200		   SS       秒     0-59
JA	ZZZZ010212	12300		   MS       ミリ秒 0-999
JA	ZZZZ010212	12400		６．４ 数学関数（一部分掲載）
JA	ZZZZ010212	12500		   PI()                    3.14...を返します。
JA	ZZZZ010212	12600		   POWER(数値A, 数値B）    数値Aの数値B乗を返す。
JA	ZZZZ010212	12700		   ROUND(数値，少数桁位置）四捨五入します。
JA	ZZZZ010212	12800		   SQRT(数値)              平方根を返します。
JA	ZZZZ010212	12900		６．５ 文字列関数（一部分掲載）
JA	ZZZZ010212	13000		   DATALENGTH(文字）  文字の実際の長さを返します。{MSSQL}
JA	ZZZZ010212	13100		             注意：CHAR()の列の長さは常に同じなのでRTRIM()で
JA	ZZZZ010212	13200		                    で右空白を取らないと長さがわかりません。
JA	ZZZZ010212	13300		   LOWER(文字）             小文字変換します。
JA	ZZZZ010212	13400		   LTRIM(文字)              先行空白を削除します。
JA	ZZZZ010212	13500		   RTRIM(文字）             後続空白を削除します。
JA	ZZZZ010212	13600		   SUBSTRING(文字，開始,長さ) 文字列の一部を返す。{MSSQL}
JA	ZZZZ010212	13700		    (I言語では?_SUBSTR?を使用します）
JA	ZZZZ010212	13800		   UPPER(文字）               大文字変換します。
JA	ZZZZ010212	13900		==================================================
JA	ZZZZ010212	14000		７）サブクエリ
JA	ZZZZ010212	14100		◎通常のSELECTと同じですが外の列名も使用できます。
JA	ZZZZ010212	14200		◎全ての機能が可能なわけではありません。
JA	ZZZZ010212	14300		==================================================
JA	ZZZZ010212	14400		８）ワイルドカード文字
JA	ZZZZ010212	14500		   %       ０個以上の任意の文字列。
JA	ZZZZ010212	14600		   _        任意の１文字。
JA	ZZZZ010212	14700		   []       指定した範囲内の１文字（[A-C]はA,B,C）{MSSQL}
JA	ZZZZ010212	14800		   [^]      指定した範囲以外の１文字。            {MSSQL}
JA	ZZZZ010212	14900		==================================================
JA	ZZZZ010212	15000		９）行を追加する方法。
JA	ZZZZ010212	15100		   INSERT INTO テーブル名 [(列名,...)] VALUES(式,...)
JA	ZZZZ010212	15200		   (I言語ではINSERT命令を用意しました）
JA	ZZZZ010212	15300		又は
JA	ZZZZ010212	15400		   INSERT INTO テーブル名 [(列名,...)] SELECT ....
JA	ZZZZ010212	15500		==================================================
JA	ZZZZ010212	15600		１０）行を変更する方法。
JA	ZZZZ010212	15700		   UPDATE テーブル名 SET 列名=式,...{MSSQLでFROM使用時は別名}
JA	ZZZZ010212	15800		     [FROM テーブル名 [別名],...]            {MSSQL}
JA	ZZZZ010212	15900		     [WHERE 条件]
JA	ZZZZ010212	16000		  (I言語では複数テーブル更新用のUPDATE命令を用意したので
JA	ZZZZ010212	16100		   それを使う事でデータベース毎の違いに対応出来ます）
JA	ZZZZ010212	16200		◎FROMにより別のﾃｰﾌﾞﾙの列名を式で使用できます。{MSSQL}
JA	ZZZZ010212	16300		◎条件を記入しないとすべての行が処理されます。
JA	ZZZZ010212	16400		==================================================
JA	ZZZZ010212	16500		１１）行を削除する方法。
JA	ZZZZ010212	16600		   DELETE FROM テーブル名 [WHERE 条件]
JA	ZZZZ010212	16700		◎条件を記入しないとすべての行が処理されます。
JA	ZZZZ010212	16800		  (I言語では通常はマスタテーブルにはDELETE権限が無いので
JA	ZZZZ010212	16900		   ワークテーブルのみ可能です）
JA	ZZZZ010212	17000		==================================================
JA	ZZZZ010212	17100		１２）テーブルを作る方法。
JA	ZZZZ010212	17200		 CREATE TABLE テーブル名(列名 データ型 DEFAULT 0 NOT NULL,..)
JA	ZZZZ010212	17300		  (I言語ではCREATE_TABLE[2]命令 を使用します）
JA	ZZZZ010212	17400		  (I言語では通常はマスタテーブルにはCREATE権限が無いので
JA	ZZZZ010212	17500		   ワークテーブルのみ可能です）
JA	ZZZZ010212	17600		==================================================
JA	ZZZZ010212	17700		１３）テーブルを消す方法。
JA	ZZZZ010212	17800		  DROP TABLE テーブル名
JA	ZZZZ010212	17900		  (I言語ではDROP_TABLE命令を使用します）
JA	ZZZZ010212	18000		  (I言語では通常はマスタテーブルにはDROP権限が無いので
JA	ZZZZ010212	18100		   ワークテーブルのみ可能です）
JA	ZZZZ010212	18200		==================================================
JA	ZZZZ010212	18300		                以上。
JA	ZZZZ010221	100	ZZZZ010241	I言語文法書が左記HELPにあります。
JA	ZZZZ010221	200	ZZZZ010212	SQLの文法書が左記HELPにあります。
JA	ZZZZ010221	300		(1)処理概要
JA	ZZZZ010221	400		メニュー起動のプログラム開発をします。
JA	ZZZZ010221	500		時間起動のプログラムはZZZZ010222で作ります。
JA	ZZZZ010221	600		本番移行済みプログラムは更新出来ません。
JA	ZZZZ010221	700		コマンドの[...]は省略可能の意味です。
JA	ZZZZ010221	800		見出し部の補足説明。
JA	ZZZZ010221	900		ジョブ---プログラム更新中のジョブ名です。
JA	ZZZZ010221	1000		ジョブ(RUN)---実行テスト中のプログラムです。
JA	ZZZZ010221	1100		  (更新中のプログラム以外を実行する事が出来ます）
JA	ZZZZ010221	1200		許可～認証---メニューで定義された内容です。
JA	ZZZZ010221	1300		操作---ここにコマンドを入力して色々の操作をします。
JA	ZZZZ010221	1400		F数---FIND(検索）された行数が表示されます。
JA	ZZZZ010221	1500		F文字--FIND(検索）中の文字列です。
JA	ZZZZ010221	1600		削除---ここが空の場合削除行は最後にまとめて表示されます。
JA	ZZZZ010221	1700		       YESとすると順序の順番の位置に表示します。
JA	ZZZZ010221	1800		色指定---ここが空の場合命令の種類を色分けした表示します。
JA	ZZZZ010221	1900		         NOとすると削除済みを除いて色を付けません。
JA	ZZZZ010221	2000		次の(1)～(5)---メニューで定義されたCOPYジョブです。
JA	ZZZZ010221	2100		頭出番号---表示する先頭の順序番号です。
JA	ZZZZ010221	2200		 (これより前を表示したい場合は「L 番号」等の操作が必要です）
JA	ZZZZ010221	2300		現在番号---現在表示中の先頭番号です。
JA	ZZZZ010221	2400		************************************************************
JA	ZZZZ010221	2500		(2)コマンドの説明(最後に0が有るものは先頭から処理します）
JA	ZZZZ010221	2600		A[DD] [/又は番号　[=命令又定義命令]]---雛型命令を作成します。
JA	ZZZZ010221	2700		 (命令が一致しない時は別の画面が表示され選択出来ます）
JA	ZZZZ010221	2800		 (/は先頭の次に挿入されます）
JA	ZZZZ010221	2900		B ---   メニュー又は時間起動用のテスト処理履歴を表示します。
JA	ZZZZ010221	3000		BM --- メニュー起動用の処理履歴を表示します。
JA	ZZZZ010221	3100		BT --- 時間起動用のテスト処理履歴を表示します。
JA	ZZZZ010221	3200		C[HANGE]['OLD' 'NEW' [開始番号 終了番号]]文字列を変更します。
JA	ZZZZ010221	3300		  (開始番号 終了番号無しは全行変更します）
JA	ZZZZ010221	3400		  (C[HANGE]のみは前回分を再表示します）
JA	ZZZZ010221	3500		C[HANGE]S[ELECT]--- 文字列変更を記憶データから選びます。
JA	ZZZZ010221	3600		CANCEL 開始番号 終了番号 --- 複数行を削除します。
JA	ZZZZ010221	3700		COPY [JOB [開始位置 [開始番号 終了番号]]] ---行を複写します。
JA	ZZZZ010221	3800		   (JOB以下を省略すると次の画面で必要情報を入力します)
JA	ZZZZ010221	3900		DATE --- 更新日(時間)の大きい順に表示します。
JA	ZZZZ010221	4000		DISCARD --- 削除済み行を物理的に削除します。
JA	ZZZZ010221	4100		  (注意：本番プログラムでは使用者"ZZZZZZZZ"以外は出来ません)
JA	ZZZZ010221	4200		D[OWN] [番号] --- 番号分行をダウンします。(番号略時は1000)
JA	ZZZZ010221	4300		E[END] --- 最後の検索文字位置を最上位行に表示します。
JA	ZZZZ010221	4400		FF[0] [文字列] --- 検索した発見行のみを表示します。
JA	ZZZZ010221	4500		 (FFは頭出番号から,FF0は最初から検索を開始します）
JA	ZZZZ010221	4600		 (文字列省略時は[F文字]の内容で検索します）
JA	ZZZZ010221	4700		FIF[0] --- IF関連の行を表示します。
JA	ZZZZ010221	4800		F[IND]C[LEAR] --- 検索文字列をクリアー（空白化）します。
JA	ZZZZ010221	4900		F[IND][0] [文字列] --- 次の文字発見行を最上位行に表示します。
JA	ZZZZ010221	5000		  (PROGRAM=%,COPY=%,NAME=%等も表示します）
JA	ZZZZ010221	5100		  (F[IND]のみは次の発見行を表示します）
JA	ZZZZ010221	5200		F[IND]S[ELECT] --- 検索文字列の記憶分から選びます。
JA	ZZZZ010221	5201		FF[IND]W[ORD] --- 単語として検索された行のみを表示します。
JA	ZZZZ010221	5202		FF[IND]W[ORD]0-- 単語として検索された行を最初から表示します。
JA	ZZZZ010221	5210		F[IND]W[ORD] --- 単語として検索します。
JA	ZZZZ010221	5300		FTAG[0] --- 名札とJUMP{..},BACK{..}の有る行のみを表示します。
JA	ZZZZ010221	5400		LL[OCATE] --- 前回表示位置で再表示します。
JA	ZZZZ010221	5500		L[OCATE] 番号 --- 番号以降を表示します。(以前は表示しません)
JA	ZZZZ010221	5600		MAX---------- 最後のみ表示します。
JA	ZZZZ010221	5700		MIN---------- 先頭から表示します。
JA	ZZZZ010221	5800		MOVE 先頭位置 開始番号 終了番号 --- 行を移動します。
JA	ZZZZ010221	5900		P[RIOR] --- 一つ前の検索文字位置にアップします。
JA	ZZZZ010221	6000		R[EAL] [JOB名] --- 処理履歴を取りながら本番環境で実行します。
JA	ZZZZ010221	6100		RENUMBER --- 番号をふりなおします。(900件以上は10単位以外100)
JA	ZZZZ010221	6110		SQL [ファイル名]　--- ファイルを編集しSQLを実行します。
JA	ZZZZ010221	6200		T[EST] [JOB] --- 処理履歴を取りながらテスト環境で実行します。
JA	ZZZZ010221	6300		TABLE [数]-- テーブル定義情報を元にプログラムを作ります。
JA	ZZZZ010221	6400		U[P] [番号] --- 番号分行をアップします。。(番号略時は1000)
JA	ZZZZ010221	6500		(3) _STARTで0を入力した場合以下の作業ができます。
JA	ZZZZ010221	6600		COPY --- 他のジョブから0で選択した行の下にコピーします。
JA	ZZZZ010221	6700		CANCEL --- 0で選択した行から行を削除します。
JA	ZZZZ010221	6800		MOVE --- -0で選択した行の下に移動します。
JA	ZZZZ010222	100		TIMEジョブの説明
JA	ZZZZ010222	200		◎TIMEジョブ作成時の注意事項。(絶対に守って下さい)
JA	ZZZZ010222	300		(1)可能な限りDAILY処理で実行して下さい、また、
JA	ZZZZ010222	400		   多数のデータを一度に更新しないで下さい。
JA	ZZZZ010222	500		   理由：長時間のLOCKは運用上問題が起きる。
JA	ZZZZ010222	600		   例：カレンダーは２年先の前日までを毎日追加。
JA	ZZZZ010222	700		   例：実績データは１年前の前日以前を毎日削除。
JA	ZZZZ010222	800		(2)何時,何回実行でも問題が出ないようにして下さい。
JA	ZZZZ010222	900		   理由：再処理のシステムが無いため。
JA	ZZZZ010222	1000		(3)マシーンの連携では一方の停止を考慮して下さい。
JA	ZZZZ010222	1100		   理由：一方が停止していることは,常に起こりうる。
JA	ZZZZ010222	1200		   例：実績データは常に10日前までを転送。
JA	ZZZZ010222	1300		   例：更新データは常に10日前までの変更分を転送。
JA	ZZZZ010222	1400		◎TIMEジョブはHH:MMの時間にシステム提供カレンダーの
JA	ZZZZ010222	1500		  稼働日等を使用しスケジュールを作りシステムを運用
JA	ZZZZ010222	1600		  するためのシステムです。
JA	ZZZZ010222	1700		◎TIMINGの説明。
JA	ZZZZ010222	1800		  D(DAILY)は稼働日に必ず起動します。
JA	ZZZZ010222	1900		  W(WEEKLY)は週の稼動SHIFT日後(+)または週末から
JA	ZZZZ010222	2000		  稼動SHIFT日前(-)に起動します。
JA	ZZZZ010222	2100		  M(MONTHLY)は月の稼働日により起動します。
JA	ZZZZ010222	2200		  01-12の時はその月の稼働日により起動します。
JA	ZZZZ010222	2300		◎１２：００はバックアップを実行します。
JA	ZZZZ010222	2400		（１）Z999854(BACKUP DB SAVE  (MSSQL ONLY))
JA	ZZZZ010222	2500		      前回バックアップファイル別ファイルで保管します。
JA	ZZZZ010222	2600		（２）Z999855（BACKUP DATABASE (MSSQL ONLY))
JA	ZZZZ010222	2700		     データベースをバックアップします。
JA	ZZZZ010222	2800		◎９９：９９は特別な処理で毎朝一番に起動します
JA	ZZZZ010222	2900		  内容は次のものです。
JA	ZZZZ010222	3000		（１）ZZZZ999950 (AT JOB (TODAY))
JA	ZZZZ010222	3100		      本日分のスケジュールジョブを時間起動します。
JA	ZZZZ010222	3200		（２）ZZZZ999951 (SET DATE,DATE_OLD)
JA	ZZZZ010222	3300		      混在テールのZZZZZZ_SYSTEMのDATEとDATE_OLDを設定。
JA	ZZZZ010222	3400		（３）ZZZZ999952 (MAINTENANCE CALENDAR)
JA	ZZZZ010222	3500		      カレンダーを更新します。
JA	ZZZZ010222	3600		（４）ZZZZ999954 (ERASE REAL,TEST LOG) [運用停止」
JA	ZZZZ010222	3700		      不要ファイルを消します。
JA	ZZZZ010222	3800		（５）ZZZZ999955 (DELETE ALL TABLES(Z_CANCEL<?)
JA	ZZZZ010222	3900		      本番用テーブルのZ_CANCELが指定ヶ月以前の
JA	ZZZZ010222	4000		      レコードを全て物理削除(DELETE)します。
JA	ZZZZ010222	4100		（６）ZZZZ999956 (SAVE ZZZZZZ_... TABLES (ZZZ...)
JA	ZZZZ010222	4200		      I言語関連テーブルをセーブします。
JA	ZZZZ010222	4300		（７）ZZZZ999957 (CANCEL USE,ERROR,TIME_LOG)
JA	ZZZZ010222	4400		      TIMEのログファイルの次月の日付分を消します。
JA	ZZZZ010222	4500		（８）ZZZZ999958 (ZZZZZZ_I_COLUMN_TABLE,TABLE_TABLE)
JA	ZZZZ010222	4600		      テーブル情報を最新の状態にします。
JA	ZZZZ010222	4700		（９）ZZZZ999959 (AT JOB (NEXT DATE))
JA	ZZZZ010222	4800		      次の稼働日の朝起動ジョブを時間起動します。
JA	ZZZZ010222	4900		      ZZZZZZ_I_USE_TABLEの古いデータを消します。
JA	ZZZZ010222	5000		    以上。
JA	ZZZZ010225	100		データ辞書を更新します。
JA	ZZZZ010225	110		(0)許可
JA	ZZZZ010225	120		データ名は許可単位に設定できます。(VER23.1)
JA	ZZZZ010225	200		(1)データ名
JA	ZZZZ010225	300		テーブルで使用するデータ名を設定します。
JA	ZZZZ010225	310		データ名の先頭は許可区分単位に同じとする事を推奨します。
JA	ZZZZ010225	400		[廃止]データ名先頭４文字は許可と同じにする必要があります。
JA	ZZZZ010225	500		[廃止]'ZZZZ'以外の人はその許可のデータ名のみ更新出来ます
JA	ZZZZ010225	600		[廃止]データ名の許可の次は可能な限り部分と同じにして下さい
JA	ZZZZ010225	700		データ名に下記の文字を含める事は出来ません。
JA	ZZZZ010225	800		  実表,仮表,手続,引金,関数,_TABLE,_VIEW,_PROC,_TRIG,_FUNC
JA	ZZZZ010225	1000		(2)言語
JA	ZZZZ010225	1100		新規ではシステム既定の言語になります。
JA	ZZZZ010225	1200		JAは日本語で、ENは英語です。
JA	ZZZZ010225	1300		タイトルとメッセージ以外システム既定言語の値が設定されます。
JA	ZZZZ010225	1400		(3)基本データ名
JA	ZZZZ010225	1500		既に設定済みのデータと同じにする場合に記入します。
JA	ZZZZ010225	1600		タイトルとメッセージ以外は既に設定済の値が設定されます。
JA	ZZZZ010225	1700		(4)テスト
JA	ZZZZ010225	1800		TESTが無条件で設定されます。
JA	ZZZZ010225	1900		修正、削除はTESTの場合のみ可能です。
JA	ZZZZ010225	2000		(5)タイトル（言語別）。
JA	ZZZZ010225	2100		画面に表示するタイトルを指定します。
JA	ZZZZ010225	2200		省略時はデータ名５文字目以降をタイトル名と判断します。
JA	ZZZZ010225	2300		(6)初期タイプ
JA	ZZZZ010225	2400		数値で10桁以上,又は,小数点以下ありはDECIMALとします。(10進数)
JA	ZZZZ010225	2500		数値で9桁以下、かつ、小数点以下なしはINTとします。（２進数）
JA	ZZZZ010225	2600		数値以外で半角文字のみはCHARとします。(ACSIIコード）
JA	ZZZZ010225	2700		数値以外で全角文字を含む場合NCHARとします。(UNICODE)
JA	ZZZZ010225	2800		上記を基本としますが、一応以下も登録は可能です。
JA	ZZZZ010225	2900		FLOAT---浮動小数点で近似値計算します,事務処理には向きません。
JA	ZZZZ010225	3000		DATETIME---データベース毎に動が異るのでCHAR(17)を推奨します。
JA	ZZZZ010225	3100		DATE-------データベース毎に動が異るのでCHAR(8)を推奨します。
JA	ZZZZ010225	3200		VCHAR,NVCHAR---テーブル長が可変になるので、推奨しません。
JA	ZZZZ010225	3300		(7)型1
JA	ZZZZ010225	3400		数値の場合負の数値無しの時'+'で有りは'-'とします。
JA	ZZZZ010225	3500		数値以外は入力出来る文字種を指定します、下記に示します。
JA	ZZZZ010225	3600		年月日(CHAR(8))の日付け情報はDで指定してください。
JA	ZZZZ010225	3700		年月日時分秒ミリ秒(CHAR(17))の情報はTで指定してください。
JA	ZZZZ010225	3800		(注意：型１が"!"以外は半角仮名と英小文字は入力出来ません）
JA	ZZZZ010225	3900		CHARの場合。
JA	ZZZZ010225	4000		 空白=EBCDIC非互換文字"^`~{}]"を除いたASCII半角文字全てです。
JA	ZZZZ010225	4100		 9=0から9までの数字です。
JA	ZZZZ010225	4200		 A=0から9までとAからZです。
JA	ZZZZ010225	4300		 B=バーコードのコード39で扱える文字です。
JA	ZZZZ010225	4400		 C=ハイフン(-)と0から9までとAからZまです。
JA	ZZZZ010225	4500		 D=年月日です。文字数は8文字固定になります。
JA	ZZZZ010225	4600		 H=半角文字全てです。
JA	ZZZZ010225	4700		 I=ファイル名として使用できる半角文字全てです。
JA	ZZZZ010225	4800		 M=アンダーバー(_)と0から9までとAからZまでです。
JA	ZZZZ010225	4900		 S=空白と同じでEBCDIC非互換文字を除いたASCII半角文字全てです.
JA	ZZZZ010225	5000		 T=日付と時間です。文字数は17文字固定になります。
JA	ZZZZ010225	5100		 U=空白を除く、EBCDIC非互換文字を除いたASCII半角文字全てです.
JA	ZZZZ010225	5200		 V=空白を除く、半角文字全てです。
JA	ZZZZ010225	5300		 Z=AからZです。
JA	ZZZZ010225	5400		NCHARの場合。
JA	ZZZZ010225	5500		 /=全ての文字です。(半角仮名、英小文字は当然不可です）
JA	ZZZZ010225	5600		 *=全ての文字で、IME（日本語入力）が起動します。
JA	ZZZZ010225	5700		 !=半角仮名、英小文字を含む全ての文字です。(無条件に全て可)
JA	ZZZZ010225	5800		 N=全角文字とアンダーバー(_)と0から9までとAからZまでです。
JA	ZZZZ010225	5900		 :=全角文字とファイル名として使用できる半角文字全てです。
JA	ZZZZ010225	6000		 J=全角文字のみです。IMEが起動します。
JA	ZZZZ010225	6100		(8)型２
JA	ZZZZ010225	6200		文字の場合以下です
JA	ZZZZ010225	6300		  空白=何も指定しません。
JA	ZZZZ010225	6400		  I='I'と'O'を入力不可にします。
JA	ZZZZ010225	6500		  L=英文字を可能にします。
JA	ZZZZ010225	6600		  K=半角片仮名を可能にします。(NCHARの場合)
JA	ZZZZ010225	6700		  *=画面上非表示（*表示）にします。
JA	ZZZZ010225	6800		  X='{'と'｝'を入力不可にします。
JA	ZZZZ010225	6900		数値の場合以下です。
JA	ZZZZ010225	7000		  空白=何も指定しません。
JA	ZZZZ010225	7100		  C=カンマを表示しません。(通常は3桁置きにカンマを表示します)
JA	ZZZZ010225	7200		  Z=0も表示します。       (通常は0は表示しません）
JA	ZZZZ010225	7300		  E=CとZの両方を指定した意味になります。
JA	ZZZZ010225	7400		(9)初期長さ1
JA	ZZZZ010225	7500		DECIMALは少数部整数部を合わせた桁数です。(有効桁数）
JA	ZZZZ010225	7600		CHAR,NCHAR,VARCHAR,NCARCHARは文字数です。
JA	ZZZZ010225	7700		(10)初期長さ2
JA	ZZZZ010225	7800		DECIMALは小数部桁数です。
JA	ZZZZ010225	7900		DECIMAL以外は小数部は無いので常に0になります。
JA	ZZZZ010225	8000		(9)長さ1
JA	ZZZZ010225	8100		INTとFLOAT以外は通常は指定しません。
JA	ZZZZ010225	8200		陽に指定した場合はFLOATは指定の長さ以外は「初期長さ１」と比較
JA	ZZZZ010225	8300		 して値の小さいほうを採用します。
JA	ZZZZ010225	8400		(10)長さ2
JA	ZZZZ010225	8500		CHAR,NCHAR,VARCHAR,NVARCHARの場合最小文字数です。
JA	ZZZZ010225	8600		(最小文字以下の入力は出来ません）
JA	ZZZZ010225	8700		DECIMALの場合通常は指定しません、陽に指定した場合は
JA	ZZZZ010225	8800		  「初期長さ２」と比較して値の小さいほうを採用します。
JA	ZZZZ010225	8900		(11)チェック
JA	ZZZZ010225	9000		空白の場合はチェック部分が作られません。
JA	ZZZZ010225	9100		CHECK1の場合はCHECK61からCHECK66までをCHECK1=で指定します。
JA	ZZZZ010225	9200		CHECK2の場合はCHECK61からCHECK66までをCHECK2=で指定します。
JA	ZZZZ010225	9300		LISTBOX1? の時CHECK2=にSELECT文のコメント無しを設定します。
JA	ZZZZ010225	9400		(値のみのを受け取るSELECT文です)
JA	ZZZZ010225	9500		(LISTBOX1  は "ORDER BY 1"      となります）
JA	ZZZZ010225	9600		(LISTBOX1D は "ORDER BY 1 DESC" となります）
JA	ZZZZ010225	9700		LISTBOX2??の時CHECK2=にSELECT文のコメント有りを設定します。
JA	ZZZZ010225	9800		(値とコメントを受け取るSELECT文です)
JA	ZZZZ010225	9900		(LISTBOX21  は "ORDER BY 1"      となります）
JA	ZZZZ010225	10000		(LISTBOX21D は "ORDER BY 1 DESC" となります）
JA	ZZZZ010225	10100		(LISTBOX22  は "ORDER BY 2"      となります）
JA	ZZZZ010225	10200		(LISTBOX22D は "ORDER BY 2 DESC" となります）
JA	ZZZZ010225	10300		SECTION1の時プログラムにコメント無しSELECT文を組み込みます。
JA	ZZZZ010225	10400		SECTION2の時プログラムにコメント有りSELECT文を組み込みます。
JA	ZZZZ010225	10500		(12)チェック61
JA	ZZZZ010225	10600		LISTBOX1,LISTBOX2?,SECTION1,SECTION2はテーブル名を指定します.
JA	ZZZZ010225	10700		CHECK1,CHECK2の時内容がそのまま設定されます。
JA	ZZZZ010225	10800		(13)チェック62
JA	ZZZZ010225	10900		LISTBOX1,LISTBOX2?,SECTION1,SECTION2の時キー名を指定します。
JA	ZZZZ010225	11000		CHECK1,CHECK2の時内容がそのまま設定されます。
JA	ZZZZ010225	11100		(14)チェック62
JA	ZZZZ010225	11200		LISTBOX2?,SECTION2の時コメント用データ名を指定します。
JA	ZZZZ010225	11300		LISTBOX1,SECTION1の時WHERE文付加条件を指定します。
JA	ZZZZ010225	11400		(チェック61指定のテーブルのデータ名を使う場合は別名"?_X?."を
JA	ZZZZ010225	11500		 先頭に必ず付加して下さい）
JA	ZZZZ010225	11600		CHECK1,CHECK2の時内容がそのまま設定されます。
JA	ZZZZ010225	11700		(15)チェック63,64,65,66
JA	ZZZZ010225	11800		LISTBOX1,LISTBOX2?,SECTION1,SECTION2の時WHERE文付加条件です。
JA	ZZZZ010225	11900		(チェック61指定のテーブルのデータ名を使う場合は別名"?_X?."を
JA	ZZZZ010225	12000		 先頭に必ず付加して下さい）
JA	ZZZZ010225	12100		CHECK1,CHECK2の時内容がそのまま設定されます。
JA	ZZZZ010225	12200		(16)メッセージ(言語別）
JA	ZZZZ010225	12300		データ入力時メッセージ(２行目)を表示したい時記入します。
JA	ZZZZ010225	12400		(17)概要説明
JA	ZZZZ010225	12500		大まかな説明を書きます。
JA	ZZZZ010225	12600		(19)詳細説明
JA	ZZZZ010225	12700		詳細な説明を書きます。
JA	ZZZZ010225	12800		以上
JA	ZZZZ010226	100		テストテーブルを更新します
JA	ZZZZ010226	200		(1)テーブル情報を設定します。
JA	ZZZZ010226	300		(1-1)名前
JA	ZZZZ010226	400		     先頭４文字は許可と同じにする必要があります。
JA	ZZZZ010226	500		     許可の次は可能な限り許可区分２文字と同じにして下さい。
JA	ZZZZ010226	600		     最後は'実表'か'_TABLE'にする必要があります。
JA	ZZZZ010226	700		(1-2)主キー項目数
JA	ZZZZ010226	800		     主キーとして行を区別する項目の個数を指定します。
JA	ZZZZ010226	900		     必ず指定する必要が有ります。
JA	ZZZZ010226	1000		     次の画面で先頭から該当数までが主キーとなります。
JA	ZZZZ010226	1100		     ユニークインデックスで内容の同じ情報は登録出来ません。
JA	ZZZZ010226	1200		(1-3)公開
JA	ZZZZ010226	1300		     他の許可に公開(検索可能に)しない場合は空白とします。
JA	ZZZZ010226	1400		     他の全許可に公開する場合'PUBLIC'とします。
JA	ZZZZ010226	1500		     リンクサーバーで公開する場合'LINK'とします。
JA	ZZZZ010226	1600		(1-4)概要説明(言語別）
JA	ZZZZ010226	1700		     テーブルの概要説明を入れます。
JA	ZZZZ010226	1800		(2)データ名を設定します。
JA	ZZZZ010226	1900		(2-1)データ名
JA	ZZZZ010226	2000		[廃止]先頭４文字は許可と同じにする必要があります。
JA	ZZZZ010226	2100		[廃止]許可の次は可能な限り部分２文字と同じにして下さい。
JA	ZZZZ010226	2200		    データ辞書から選びます,従ってデータ辞書に登録が必須です。
JA	ZZZZ010226	2210		    許可が同じ物のみ設定できます。(VER23.1)
JA	ZZZZ010226	2300		(2-2)1から9まで
JA	ZZZZ010226	2400		  付加するインデックスを指定します。
JA	ZZZZ010226	2500		  0から指定するとユニークインデックス（重複不可）となります。
JA	ZZZZ010226	2600		  1から指定するとノーマルインデックス（重複可能）となります。
JA	ZZZZ010228	100		テストテーブル同士で複写します。
JA	ZZZZ010228	200		リンクサーバー:リンクサーバーを使用する場合は指定します。
JA	ZZZZ010228	300		★注意：SQL　Serverのみ対応しています。
JA	ZZZZ010228	400		★注意：相手がOracleの場合DATE型が有るとコピー出来ません。
JA	ZZZZ010228	500		  (DATE列の呼び出しでエラーとなってしまうため）
JA	ZZZZ010228	600		★注意：相手がPostgreSQLかIBM　DB2の場合NCHARとNVARCHARは
JA	ZZZZ010228	700		  無いのでCHAR,VARCHARとなってしまうので注意下さい。
JA	ZZZZ010228	800		名前:テーブル名の先頭文字で絞り込みます。
JA	ZZZZ010228	900		許可:許可されている文字です、名前の先頭の２文字です。
JA	ZZZZ010228	1000		ワーク(IN):MASTがマスターデータベースでWORKがワークです。
JA	ZZZZ010228	1100		名前(IN)：複写元のテーブル名です。
JA	ZZZZ010228	1200		◎複写したいテーブルの先頭で0（選択）をして下さい。
JA	ZZZZ010229	100		データ名の説明
JA	ZZZZ010229	200		許可---オブジェクトの許可を示します。
JA	ZZZZ010229	300		種類---FUNC,PROC,TRIG,VIEWの種類をしまします。
JA	ZZZZ010229	400		       注意:FirbirdはFUNCTIONは使えません。
JA	ZZZZ010229	500		公開---PUBLICかLINKで許可以外に公開できます。
JA	ZZZZ010229	600		名前---オブジェクト名です。
JA	ZZZZ010229	610		       28文字以内にする必要が有ります。（VER12.1以降）
JA	ZZZZ010229	700		       注意:先頭は許可と同じにする必要が有りす.
JA	ZZZZ010229	800		　     FUNCは最後を'_FUNC'または'関数'にする必要が有ります。
JA	ZZZZ010229	810		                  注意:DにはFUNCの機能は有りません。
JA	ZZZZ010229	900		　     PROCは最後を'_PROC'または'手続'にする必要が有ります。
JA	ZZZZ010229	1000		　     VIEWは最後を'_VIEW'または'仮表'にする必要が有ります。
JA	ZZZZ010229	1100		　     TRIGは最後を'_TRIG','_TRIGU','_TRIGI','_TRIGD'
JA	ZZZZ010229	1200		　               , '_引金','_引金U','_引金I','_引金D'
JA	ZZZZ010229	1300		　               とする必要があります。
JA	ZZZZ010229	1400		　               最後がUはUPDATE時,IはINSERT時,DはDELETE時
JA	ZZZZ010229	1500		                    無しは全ての更新が対象になります。
JA	ZZZZ010229	1600		                 注意:HとDは全ての更新は出来ません。
JA	ZZZZ010229	1610		             トリガー対象テーブルは'_TRIG?'を'_TABLE'に
JA	ZZZZ010229	1620		                 '引金?'を'実表'に置き換えた物となります。
JA	ZZZZ010229	1700		テスト---テスト中はTESTで本番使用で空白になります。
JA	ZZZZ010229	1800		創成---創成の状態を表します。
JA	ZZZZ010229	1900		              '*'=開発中,' '=完成,'?'=オブジェクト無
JA	ZZZZ010229	2200		記号---’'は全てのDBで使用します。
JA	ZZZZ010229	2300		       '*'はコメントで使用しません。
JA	ZZZZ010229	2400		       英字１字でそのDBを対象にするかしないかを決めます。
JA	ZZZZ010229	2500		符号---'+'の時,記号のDBで使用し,'-'は該当DBのみ使用しません。
JA	ZZZZ010229	2600		オブジェクト---実際の内容を記入します。
JA	ZZZZ010229	2700		操作の説明
JA	ZZZZ010229	2800		B--------出来たCREATE文の内容を見ます。
JA	ZZZZ010229	2810		C '旧文字列' '新文字列'---旧文字列を新文字列に変更します。
JA	ZZZZ010229	2900		CREATE---データベースにCREATEします。
JA	ZZZZ010229	3000		F 文字列---文字列を探します。
JA	ZZZZ010229	3100		L 番号---番号データを先頭に表示します。
JA	ZZZZ010229	3300		SAMPLE---サンプルをコピーします。（ただし,VIEWは有りません）
JA	ZZZZ010229	3400		TABLE [テーブル名]----テーブル名を元にVIEWを作ります。
JA	ZZZZ010235	100		グラフのデータを更新します。
JA	ZZZZ010235	200		チャート番号が0は全体の設定せす。
JA	ZZZZ010235	300		チャート番号が1は１つ目のチャートの設定になります。
JA	ZZZZ010235	400		操作のコマンド
JA	ZZZZ010235	500		H---グラフのヘルプを表示します。
JA	ZZZZ010235	600		T---グラフをテスト表示します。
JA	ZZZZ010238	200		BBBB
JA	ZZZZ010238	300		bbb
JA	ZZZZ010238	400		BBBB
JA	ZZZZ010238	500		ZZZ
JA	ZZZZ010239	100		オブジェクトに対し別の許可にSELECT権限を与えます。
JA	ZZZZ010239	200		ユーザが空白の時はO(OUTPUT),I(INPUT),D(DB_OWNER)にSELECT権限
JA	ZZZZ010239	210		   与えます。
JA	ZZZZ010239	300		ユーザがLの時はL(LINK)ユーザにSELECT権限を与えます。
JA	ZZZZ010239	400		自身の許可はテーブル作成時に設定されます。
JA	ZZZZ010239	500		許可ZZZZに対してはテーブル作成時に自身と同じに設定されます。
JA	ZZZZ010241	10		I言語VER37 の文法書      2022年06月29日修正版
JA	ZZZZ010241	20		 　　　　　    　　 　　 2002年04月19日作成 (作者:原沢信道)
JA	ZZZZ010241	30		<旧仕様は削除、旧仕様付はZZZZZ010242に保管>
JA	ZZZZ010241	40		=============================================================
JA	ZZZZ010241	50		 　操作で「FF *-[Enter]」とすると,目次として表示できます。
JA	ZZZZ010241	60		 　操作で「FF **[Enter]」とすると,目次と命令が表示できます。
JA	ZZZZ010241	70		 　操作で「FF ***[Enter]」とすると,命令が表示できます。
JA	ZZZZ010241	80		=============================================================
JA	ZZZZ010241	90		1)**-はじめに
JA	ZZZZ010241	100		1.1)I言語のIはInstantのIです,コンピュータのプログラムを
JA	ZZZZ010241	110		  　誰でも早く作る事ができる簡易言語付きのツール(道具)です。
JA	ZZZZ010241	120		1.2)データ(情報)はリレーショナルデータベースの
JA	ZZZZ010241	130		    テーブル(２次元の表)上に持ちます。
JA	ZZZZ010241	140		1.3)プログラム(処理)はSQLとI言語で作ります。
JA	ZZZZ010241	150		1.4)SQLに不足の機能をI言語で対応しています。
JA	ZZZZ010241	160		1.5)プログラム群の単位を10文字で表し,それをジョブと呼びます。
JA	ZZZZ010241	170		1.6)PROGRAM=の間が１つのプログラム(画面)となります。
JA	ZZZZ010241	180		1.7)'='で開始する命令の連続をセクションと呼びます。
JA	ZZZZ010241	190		1.8)メニュー起動するジョブを"メニュー起動ジョブ"と呼びます。
JA	ZZZZ010241	200		 （メニューもプログラムもデータベースから読み込みます,ただし
JA	ZZZZ010241	210		  ,メニュー表示のプログラムは\I\BINI?_IV?\I_MENU.TXTです)
JA	ZZZZ010241	220		  ジョブ名の5文字目が4以下がメニュー起動ジョブ用です。
JA	ZZZZ010241	230		  通常はジョブ名の先頭が'ZZZZ'の物を使用します。
JA	ZZZZ010241	240		　=EXE_I{ジョブ名,パラメータ};又は
JA	ZZZZ010241	250		　=EXE{?_EXE_NAME?,言語 ?_EXE_OPTION?
JA	ZZZZ010241	260		　　[ジョブ名　付加属性　メニュー内共通データ名=値 ...]};
JA	ZZZZ010241	270		  ◆?_EXE_OPTION?
JA	ZZZZ010241	280		    DB接続秒/SQL実行秒[/TRACE][/拡大] サーバー名_システム名.I
JA	ZZZZ010241	290		      (拡大で百分率を指定し一時的に画面を拡大出来ます)VER24.1
JA	ZZZZ010241	300		  ◆付加属性
JA	ZZZZ010241	310		　　　REAL--本番環境で実行します。
JA	ZZZZ010241	320		　　　REAL_TRACE--本番環境で実行履歴を取ります。
JA	ZZZZ010241	330		　　　TEST--テスト環境で実行します。
JA	ZZZZ010241	340		　　　TEST_TRACE--テスト環境で実行履歴を取ります。
JA	ZZZZ010241	350		  ◆値が次の文字の場合は'#'+英字で与えます。(_ARGで変換可能)
JA	ZZZZ010241	360		    "=#Q,%=#P,!=#E,`=#A,\=#Y,$=#D,空白=#S,#=#C
JA	ZZZZ010241	370		  ◆ツールが使用するメニュー内共通データ名を下記に示します。
JA	ZZZZ010241	380		    (#ZZZZZZで始まるものはツール専用です）
JA	ZZZZ010241	390		　　#ZZZZZZ_ARG_PASS--受け渡すパス文字。
JA	ZZZZ010241	400		 　（ツール以外は扱えません）
JA	ZZZZ010241	410		　　#ZZZZZZ_ARG_PERSON--使用者。（ツールが受け取る)
JA	ZZZZ010241	420		　　#ZZZZZZ_ARG_PERSON_NAME--使用者名称。(ツールが受け取る)
JA	ZZZZ010241	430		　　#ZZZZZZ_ARG_PERMISSIN--使用者許可。(ツールが受け取る)
JA	ZZZZ010241	440		　　#ZZZZZZ_ARG_BEGIN_ENTER--CONTROL=BEGIN_ENTER設定用です。
JA	ZZZZ010241	450		　　#ZZZZZZ_ARG_JOB--ジョブ名受け渡し用です。
JA	ZZZZ010241	460		　　#ZZZZZZ_ARG_RETRY--エラー時回数分再起動します。(v7.25)
JA	ZZZZ010241	470		　　(サービス立ち上げ待ちでスタートアップでのエラー回避用)
JA	ZZZZ010241	480		　　#ZZZZZZ_ARG_SLEEP--再起動時間を秒数分遅らせます。(v7.25)
JA	ZZZZ010241	490		　　(サービス立ち上げ待ちでスタートアップでのエラー回避用)
JA	ZZZZ010241	500		　◆言語の指定で言語関連の情報をファイルから読み込みます。
JA	ZZZZ010241	510		　  ファイル名が?_IV?LANG?言語??_OS?.TXTです。
JA	ZZZZ010241	520		[廃]先頭はFONT=Font名,C#FontSize,C#Offest,JavaSize,JavaOffest
JA	ZZZZ010241	530		[廃],C#横幅補正,C#縦幅補正,Java横幅補正,Java縦幅補正
JA	ZZZZ010241	540		[廃],横幅文字初期値,縦幅文字初期値,拡大百分率
JA	ZZZZ010241	550		[廃]でクライアント単位でフォント,フォントサイズ,
JA	ZZZZ010241	560		[廃]文字の表示の上下位置, 画面の縦横の幅補正,
JA	ZZZZ010241	570		[廃]縦横の文字の初期値,拡大百分率が設定できます。
JA	ZZZZ010241	580		    先頭３行は言語(CS,JA,CP)=Font名,FontSize
JA	ZZZZ010241	590		    ,横文字幅,縦文字幅
JA	ZZZZ010241	600		    ,横文字位置調整,縦文字位置調整,
JA	ZZZZ010241	610		    ,横枠位置補正,縦枠位置補正
JA	ZZZZ010241	620		    ,横画面幅補正,縦画面幅補正
JA	ZZZZ010241	630		    ,横クリック位置補正,縦クリック位置補正,拡大百分率
JA	ZZZZ010241	640		    (CS=C#,JA=Java,CP=C++) VER31.1
JA	ZZZZ010241	650		[廃]２行目以降は言語別のメッセージです。
JA	ZZZZ010241	660		    4行目以降は言語別のメッセージです。
JA	ZZZZ010241	670		1.9)時間で起動するジョブを"時間起動ジョブ"と呼びます。
JA	ZZZZ010241	680		  ジョブ名の5文字目が5以上が時間起動ジョブ用です。
JA	ZZZZ010241	690		  ジョブ名の先頭8文字が同じジョブを連続で実行します。
JA	ZZZZ010241	700		　ジョブ名の先頭8文字をジョブグループと呼びます。
JA	ZZZZ010241	710		  ★特別に5,6文字目が8,0(ZZZZZZ_MENU1が80）の場合は
JA	ZZZZ010241	720		　　インターネットのCGI起動用ジョブと成ります。
JA	ZZZZ010241	730		  =SERVER_BAT{ZZZZZZTIME,処理};
JA	ZZZZ010241	740		  ◆処理
JA	ZZZZ010241	750		　時 分 TODAY / LINUXキュー--時間起動予約します。
JA	ZZZZ010241	760		  時 分 NEXT 日 LINUXキュー-該当日にZZZZ9999を起動予約します。
JA	ZZZZ010241	770		  時 分 ジョブ　オプション [起動コンピュータ名]
JA	ZZZZ010241	780		　　　　　　　　　　　　　　　　　　--ジョブを即実行します。
JA	ZZZZ010241	790		　◆オプション
JA	ZZZZ010241	800		　　　ALL--全ジョブ（先頭８文字が同じ）を実行します。
JA	ZZZZ010241	810		　　　ONE--1ジョブのみ実行します。
JA	ZZZZ010241	820		　　　TRACE--実行履歴付で1ジョブのみ実行します。
JA	ZZZZ010241	830		　　　上記以外 "エラー内容"--エラーとなります。
JA	ZZZZ010241	840		1.10)ファイルから読むジョブを"ファイル起動ジョブ"と呼びます。
JA	ZZZZ010241	850		 　　ジョブ名は'ZZZZ000000'の固定です。
JA	ZZZZ010241	860		     ?_OS_DRIVE?\I\BIN?_IV?\IMENUWD.EXE データ
JA	ZZZZ010241	870		    データ=言語 DB接続秒/SQL実行秒[/TRACE] プログラム1.TXT ..
JA	ZZZZ010241	880		     (ファイルの拡張子がI以外およびデータの個数が1と0の時も
JA	ZZZZ010241	890		　　　ファイル起動ジョブと見なします、
JA	ZZZZ010241	900		　　　0の時はI.TXTの固定ファイル名です
JA	ZZZZ010241	910		　　　1個の時で拡張子を除くファイル名の最後から3文字目が
JA	ZZZZ010241	920		　　　アンダーバーの場合は最後の2文字で言語を表します）
JA	ZZZZ010241	930		1.11)文字列は「'」で囲みます。(数値は「'」で囲む必要はなし）
JA	ZZZZ010241	940		　☆誤動作防止のため文字列は次の行に継続しないようにします。
JA	ZZZZ010241	950		　　（一行で「'」を偶数個にして下さい）
JA	ZZZZ010241	960		  ☆文字列の中の「'」は2個連続して記入します。
JA	ZZZZ010241	970		1.12)16進数値は「0X数」(数は1から4桁の[0-9A-F])です。
JA	ZZZZ010241	980		1.13)データの部分指定は
JA	ZZZZ010241	990		    「データ名[先頭UNICODE位置;UNICODE文字数]」です。
JA	ZZZZ010241	1000		     「;UNICODE文字数」を省略した場合は最後までです。
JA	ZZZZ010241	1010		    先頭UNICODE位置の省略は最後からの文字数と成ります。(V35)
JA	ZZZZ010241	1020		    先頭UNICODE位置が負は最後からの文字位置と成ります。(V36)
JA	ZZZZ010241	1030		    文字数が0以下は0とみなし空文字を送ります。(V36)
JA	ZZZZ010241	1040		    注意:位置と文字数が無い場所を指すと空文字を送ります。V36
JA	ZZZZ010241	1050		　　UNICODEはサロゲートペアと結合文字も１文字と成ります。
JA	ZZZZ010241	1070		　　物理的な文字数はUNICODE数より多い場合があります。
JA	ZZZZ010241	1090		　　物理的な文字数以下としたい場合は
JA	ZZZZ010241	1100		    「データ名[先頭UNICODE位置;;物理文字数]」とします。
JA	ZZZZ010241	1110		       (画面表示上の長さではありません）
JA	ZZZZ010241	1120		    位置と文字数は引き算(-)を1個使用できます。(VER15.1)
JA	ZZZZ010241	1140		1.14.1) 「データ名@COLOR」は色を設定。(読む事は出来ません)
JA	ZZZZ010241	1150		1.14.2) 「データ名@COUNT」はUNICODEでの実際の文字数です。
JA	ZZZZ010241	1160		　　　　(サロゲートペアと結合文字も１文字とします）
JA	ZZZZ010241	1170		1.14.3) 「データ名@FORM_LENGTH」は画面表示の長さです。(BYTE)
JA	ZZZZ010241	1180		1.14.4) 「データ名@LENGTH」は実際の物理文字数です。(UNICODE)
JA	ZZZZ010241	1190		1.14.5) 「データ名@LENGTH1」は長さ１、作業データのみ変更可。
JA	ZZZZ010241	1200		1.14.6) 「データ名@LENGTH2」は長さ２、数値以外変更出来ます。
JA	ZZZZ010241	1210		1.14.7) 「データ名@MARK1」は属性1、変更はできません。
JA	ZZZZ010241	1220		1.14.8) 「データ名@MARK2」は属性2,'N'以外の変更が出来ます。
JA	ZZZZ010241	1230		1.14.9) 「データ名@MARK3」は属性3,変更も出来ます。
JA	ZZZZ010241	1240		1.14.10)「データ名@MARK4」は属性4,変更も出来ます。
JA	ZZZZ010241	1250		1.14.11)「データ名@OLD」は初期のデータの値です。
JA	ZZZZ010241	1260		       (SET=は最初のSET=の開始時に、
JA	ZZZZ010241	1270		        DATA=はSTART（操作）開始時に値が設定されます）
JA	ZZZZ010241	1280		1.14.12)「データ名@SELECT」はSELECT=の内容です。変更不可。
JA	ZZZZ010241	1290		1.14.13)「データ名@TITLE」はタイトルです。変更不可。(VER7.30)
JA	ZZZZ010241	1300		1.14.14)「データ名@TYPE1」は型1、変更も出来ます。
JA	ZZZZ010241	1310		1.14.15)「データ名@TYPE2」は型2、変更も出来ます。
JA	ZZZZ010241	1320		1.14.16)「データ名@WHERE」は_WHERE数で使用します。 (VER5.11)
JA	ZZZZ010241	1330		1.14.17)「データ名@名前」で"_名前"と同じ動きをします (VER8.4)
JA	ZZZZ010241	1340		1.14.17.01)「データ名@ARG」
JA	ZZZZ010241	1350		1.14.17.02)「データ名@CODE」
JA	ZZZZ010241	1360		1.14.17.03)「データ名@CODE39」
JA	ZZZZ010241	1370		1.14.17.04)「データ名@DATE_GOOD」
JA	ZZZZ010241	1380		1.14.17.05)「データ名@DATETIME」
JA	ZZZZ010241	1390		1.14.17.06)「データ名@DATETIME_GOOD」
JA	ZZZZ010241	1400		1.14.17.07)「データ名@DIGIT11」
JA	ZZZZ010241	1410		1.14.17.08)「データ名@EDIT_ERROR」
JA	ZZZZ010241	1420		1.14.17.09)「データ名@FULL_SIZE」
JA	ZZZZ010241	1430		1.14.17.10)「データ名@LOWER」
JA	ZZZZ010241	1440		1.14.17.11)「データ名@NEXT」
JA	ZZZZ010241	1450		1.14.17.12)「データ名@SPACE」
JA	ZZZZ010241	1460		1.14.17.13)「データ名@SPACE_ERASE」   (VER15.1)
JA	ZZZZ010241	1470		1.14.17.14)「データ名@TRIM」
JA	ZZZZ010241	1480		1.14.17.15)「データ名@UPPER」
JA	ZZZZ010241	1490		1.14.17.16)「データ名@URL_DECODE」 (VER24.1)
JA	ZZZZ010241	1500		1.14.17.17)「データ名@URL_ENCODE」 (VER24.1)
JA	ZZZZ010241	1510		1.15)「?データ名?」はデータ名の内容で置き換えます。
JA	ZZZZ010241	1520		      (☆一行で？は偶数個となります)
JA	ZZZZ010241	1530		1.16)「$データ名」は前のプログラムのデータ名です。
JA	ZZZZ010241	1540		       (この内容を直接変更することは出きません)
JA	ZZZZ010241	1550		       (尚、#,!,@,_,^で始まるデータ名は使用出来ません）
JA	ZZZZ010241	1560		       最初のプログラムで使用した場合は値が空白で動きます。
JA	ZZZZ010241	1570		       $無しのデータ名が無い場合$を付けて更に探します。VER18
JA	ZZZZ010241	1580		1.17)記憶用データベースをマスタデータベースと呼びます。
JA	ZZZZ010241	1590		1.18)作業用データベースをワークデータベースと呼びます。
JA	ZZZZ010241	1600		  ワークデータベース上のテーブルを作業テーブルと呼びます。
JA	ZZZZ010241	1610		（ただし、SQL Server以外は１個のデータベースとします）
JA	ZZZZ010241	1620		（DB2とPostgreSQLはスキーマ単位に分けます）
JA	ZZZZ010241	1630		(Oracleはユーザ単位に分けます,結果ユーザ２個分になります)
JA	ZZZZ010241	1640		1.19)テーブルの行の削除は一般的にはDELETEで物理削除しますが
JA	ZZZZ010241	1650		　　　、当ツールはZ_CANCELに削除時間を入れ論理削除とします。
JA	ZZZZ010241	1660		1.20)テーブルのデータ名を説明上は列名と呼びます。
JA	ZZZZ010241	1670		     I言語のデータ名から別名と列名の変換方法は以下です。
JA	ZZZZ010241	1680		     データ名を"."で区切り判定します。（VER8.6)
JA	ZZZZ010241	1690		     最後の名前が列名となります。（VER8.6)
JA	ZZZZ010241	1700		     先頭が別名と成りますが、以下の判定もします。
JA	ZZZZ010241	1710		       "."が無い場合はPROGRAM=の別名です。  (VER8.6)
JA	ZZZZ010241	1720		       "."が先頭の場合はPROGRAM=の別名です。(VER18.1)
JA	ZZZZ010241	1730		       3文字以上で先頭がS,E,Tの物は取った物が別名です。36.6
JA	ZZZZ010241	1740		1.21)許可の扱いについて。
JA	ZZZZ010241	1750		◆許可は英字４文字で表しジョブで指定された許可のテーブル
JA	ZZZZ010241	1760		（先頭が許可と同じ）以外はそのジョブでは更新出来ません、
JA	ZZZZ010241	1770		なお、PUBLIC指定した場合はSELECTのみ出来ます。
JA	ZZZZ010241	1780		  テーブル名は許可の次に許可区分(英数字２文字)を設定します。
JA	ZZZZ010241	1790		   (VER22で列名の先頭を許可＋区分にする必要が無く成りました)
JA	ZZZZ010241	1810		◆許可は通常はZAAAからZZZZZ（先頭がZ）までを使用します。
JA	ZZZZ010241	1820		  WAAAからYZZZZまでは使用できません。
JA	ZZZZ010241	1830		  AAAAからVZZZZまではジョブ名の先頭文字も同じとし
JA	ZZZZ010241	1840		　パッケージソフト開発専用とし、
JA	ZZZZ010241	1850		　更に列名も「許可+'_'」のみ可能とします。(VER27.1)
JA	ZZZZ010241	1860		◆許可はインストール時点では２個登録されます。
JA	ZZZZ010241	1870		①ZZZY--一般用の許可で使用者ZZZZZZZYがこの許可の管理者です。
JA	ZZZZ010241	1880		        ZZZZ以外は個々の部署のシステム用です。
JA	ZZZZ010241	1890		②ZZZZ--共通用の許可で使用者ZZZZZZZZがこの許可の管理者です。
JA	ZZZZ010241	1900		        ZZZZは全社共通のシステム用です。
JA	ZZZZ010241	1910		【廃止】1.22)プログラム内の"~~" は許可で最初に置き換えます。
JA	ZZZZ010241	1920		【廃止】    "~+" は許可+区分で最初に置き換えます。[廃止予定]
JA	ZZZZ010241	1930		【廃止】    "~-" は区分のみで最初に置き換えます。[廃止予定]
JA	ZZZZ010241	1940		1.22)データべースへの接続ユーザ。
JA	ZZZZ010241	1950		◆メニューの処理種類がINPUTのときI(INPUT,INP)ユーザを、
JA	ZZZZ010241	1960		　OUTPUTの時はO(OUTPUT,OUT)ユーザを使用します。
JA	ZZZZ010241	1970		　（ユーザは許可単位に設定されています）
JA	ZZZZ010241	1980		　IはマスタデータベースにSELECT,INSERT,UPDATE出来ます。
JA	ZZZZ010241	1990		　（SELECTとは検索の権限です）
JA	ZZZZ010241	2000		　（INSERTとはデータの挿入（新規追加）の権限です）
JA	ZZZZ010241	2010		　（UPDATEとはデータの変更の権限です）
JA	ZZZZ010241	2020		　（尚、DELETEは削除の権限ですが設定されません）
JA	ZZZZ010241	2030		　Iはワークデータベースには全権限があります。
JA	ZZZZ010241	2040		　OはマスタデータベースにSELECT権限があります。
JA	ZZZZ010241	2050		　Oはワークデータベースには全権限があります。
JA	ZZZZ010241	2060		◆ツールの処理はD(DB_OWNER,DBO)ユーザで許可ZZZZで接続します。
JA	ZZZZ010241	2070		◆リンクサーバー用としてL(LINK)ユーザがあります。
JA	ZZZZ010241	2080		1.23)先頭がZZZZ010,ZZZZ99985,ZZZZ99995,ZZZZ999996のジョブは
JA	ZZZZ010241	2090		    ツール用で使用者が'ZZZZZZZZ'のみ更新出来ます。(VER17)
JA	ZZZZ010241	2100		    (注意：ツールを再インストールすると、書き換わります)
JA	ZZZZ010241	2110		    尚,先頭が"ZZZZ01"と"ZZZZ99"は管理者専用で
JA	ZZZZ010241	2120		    許可ZZZZのみ更新可能です。
JA	ZZZZ010241	2130		  上記と別に"ZZZZ40"をサンプルシステム提供用とします。
JA	ZZZZ010241	2140		    （注意：ツールを再インストールすると、書き換わります)
JA	ZZZZ010241	2150		1.24)使用者とパスワードで利用可能なジョブが決まります。
JA	ZZZZ010241	2160		◆４種類の認証方法があります。(★VER7でルール変更）
JA	ZZZZ010241	2170		①X--全く認証が不要のジョブです。
JA	ZZZZ010241	2180		②P--使用者とパスワードをGUEST以外で登録すれば使えます。
JA	ZZZZ010241	2190		　　（メニューの許可がZZZZか使用者の許可と同じ場合有効です）
JA	ZZZZ010241	2200		　　（有効でない時でもジョブを指定すれば使えます）
JA	ZZZZ010241	2210		③J--使用者にジョブを指定して使えます。
JA	ZZZZ010241	2220		      (テスト実行はPと同じ動きをします）　(VER5.3)
JA	ZZZZ010241	2230		④A--管理者は使えます。
JA	ZZZZ010241	2240		     （メニューの許可がZZZZか使用者の許可と同じ場合有効です）
JA	ZZZZ010241	2250		 　　（有効でない時でもジョブを指定すれば使えます）
JA	ZZZZ010241	2260		 　　（処理の都度使用者とパスワードを要求されます）
JA	ZZZZ010241	2270		  ===( ジョブ指定無し認証の一覧 )==========================
JA	ZZZZ010241	2280		                         ○は本番とテストで可能。(-で表示）
JA	ZZZZ010241	2290		                         ▽はテストのみで可能。  (+で表示）
JA	ZZZZ010241	2300		                         ×は不可。　　　　　　  (*で表示）
JA	ZZZZ010241	2310		                  　許可  -ZZZZ- -ZZZY- -ZZZX-
JA	ZZZZ010241	2320		                  　認証  A P J  A P J  A P J
JA	ZZZZ010241	2330		  許可ZZZZのADMIN         ○○○ ▽▽▽ ▽▽▽
JA	ZZZZ010241	2340		  許可ZZZZのPERSON        ×○▽ ×▽▽ ×▽▽
JA	ZZZZ010241	2350		  許可ZZZZのGUEST         ××× ××× ×××
JA	ZZZZ010241	2360		  許可ZZZYのADMIN         ○○○ ○○○ ×××
JA	ZZZZ010241	2370		  許可ZZZYのPERSON        ×○▽ ×○▽ ×××
JA	ZZZZ010241	2380		  許可ZZZYのGUEST         ××× ××× ×××
JA	ZZZZ010241	2390		  ===========================================================
JA	ZZZZ010241	2400		1.25)サロゲートペアと結合文字は以下の制約条件があります。
JA	ZZZZ010241	2410		　　★DB2とMySQLはデータベースに登録出来ません。
JA	ZZZZ010241	2420		　　★結合文字を入力すると１つ前の文字に結合します。
JA	ZZZZ010241	2430		　　　従って、右端の文字に結合文字を付加する事はできません。
JA	ZZZZ010241	2440		　　★半角の結合文字は表示より実際の長さが長くなります、
JA	ZZZZ010241	2450		　　　入力項目一杯には入力出来ないので注意下さい。
JA	ZZZZ010241	2460		1.26)データベースのトランザクションについて。
JA	ZZZZ010241	2470		　　通常はSTOP_BEFOREの前でトランザクションが開始し,
JA	ZZZZ010241	2480		　　      STOP_AFTER後でトランザクションが終了します。
JA	ZZZZ010241	2490		　　自ら実行する場合はSQL{BEGIN TRANSACTION};を単独で実行し
JA	ZZZZ010241	2500		　　てトランザクションを開始し、（余分なSQL文はつけない）
JA	ZZZZ010241	2510		　　更新したい時はSQL{COMMIT TRANSACTION};を単独で実行,
JA	ZZZZ010241	2520		　　更新取りやめはSQL{ROLLBACK TRANSACTION};を単独で実行
JA	ZZZZ010241	2530		　　します。
JA	ZZZZ010241	2540		　　BEGINからCOMMITまたはROLLBACKまでは処理結果は
JA	ZZZZ010241	2550		　　データベースに反映されません。ただし、BEGIN中にユーザ
JA	ZZZZ010241	2560		　　を変更した場合はツール側でCOMMITを実行しトランザクション
JA	ZZZZ010241	2570		　　を無条件で終了します。（VER12.0)
JA	ZZZZ010241	2580		1.27)メニューでコピー１からコピー５にジョブ指定した場合は
JA	ZZZZ010241	2590		     該当ジョブを最後に順番にコピーします。
JA	ZZZZ010241	2600		     ただし、コピー2に'ZZZZZZZZZZ'を指定した場合は
JA	ZZZZ010241	2610		 コピー1のジョブのコピー１からコピー５を使用します。(VER5.10)
JA	ZZZZ010241	2620		     ('ZZZZZZZZZZ'の繰り返しは５回までしか有効になりません)
JA	ZZZZ010241	2630		1.28)作業ディレクトリを下記としますが,１日以上古い日付の物は
JA	ZZZZ010241	2640		     メニュー立ち上げ時削除するので注意して下さい。
JA	ZZZZ010241	2650		     Windowsは%SystemDreive%\I\TMPでLINUXは/home/I/TMPです。
JA	ZZZZ010241	2660		     時間起動は%SystemDreive%\I\I.システム名\TMP_?_REAL_TEST?
JA	ZZZZ010241	2670		         か/home/I/I.システム名/TMP_?_REAL_TEST?です。
JA	ZZZZ010241	2680		     (時間起動用は古い日付けも消しません）
JA	ZZZZ010241	2690		1.29)以後の説明中の「[」と「]」の間は省略可能の意味です。
JA	ZZZZ010241	2700		===========================================================
JA	ZZZZ010241	2710		2)**-テーブルの定義
JA	ZZZZ010241	2720		テーブルの定義は本来は自由ですが、プログラムを簡単にし、
JA	ZZZZ010241	2730		誤動作を防ぐため以下のように定義を規定します。
JA	ZZZZ010241	2740		2.1)テーブル名は２８文字以内です。
JA	ZZZZ010241	2750		    ★注意★Oracleは日本語が入ると設定出来る文字数が減り
JA	ZZZZ010241	2760		            エラーと成るので、注意して下さい。
JA	ZZZZ010241	2770		            尚、Firebirdは日本語が使えないので本格的なシステ
JA	ZZZZ010241	2780		            ムを作る場合は日本語は避ける事を推奨します。
JA	ZZZZ010241	2790		    テーブル名の先頭は許可名（英字４文字）です。
JA	ZZZZ010241	2800		    許可名に続いて許可区分(英数字２文字)を設定します。
JA	ZZZZ010241	2810		    テーブル名の最後は"実表"または"_TABLE"とします。
JA	ZZZZ010241	2820		    "ZZZZZZ"で始まるテーブル名はツール専用です。
JA	ZZZZ010241	2830		    "ZZZZZY","ZZZYZZ","ZZZYZY"で始まるテーブル名は雛型用です.
JA	ZZZZ010241	2840		2.2)列名は３０文字以内です。
JA	ZZZZ010241	2850		    ★注意★Oracleは日本語が入ると設定出来る文字数が減り
JA	ZZZZ010241	2860		            エラーと成るので、注意して下さい。
JA	ZZZZ010241	2870		            尚、Firebirdは日本語が使えないので本格的なシステ
JA	ZZZZ010241	2880		            ムを作る場合は日本語は避ける事を推奨します。
JA	ZZZZ010241	2890		            "Z_"で始まるツールが使用している名前は使えません.
JA	ZZZZ010241	2900		            RDBMSの予約語は使えません。 (VER22.1)
JA	ZZZZ010241	2910		            データ辞書は許可単位に設定されます。 (VER22.1)
JA	ZZZZ010241	2920		          (★許可区分が異なる場合も許可単位で共通に使えます）
JA	ZZZZ010241	2930		2.10)先頭にツールで使用する列を８項目設定します。(★VER7変更)
JA	ZZZZ010241	2940		　①Z_CANCEL        CHAR(17) NOT NULL DEFAULT ' '--削除時間。
JA	ZZZZ010241	2950		　②Z_CANCEL_PERSON CHAR(8)  NOT NULL DEFAULT ' '--削除者。
JA	ZZZZ010241	2960		　③Z_CHANGE        CHAR(17) NOT NULL DEFAULT ' '--修正時間。
JA	ZZZZ010241	2970		　④Z_CHANGE_PERSON CHAR(8)  NOT NULL DEFAULT ' '--修正者。
JA	ZZZZ010241	2980		　⑤Z_ADD           CHAR(17) NOT NULL DEFAULT ' '--作成時間。
JA	ZZZZ010241	2990		　⑥Z_ADD_PERSON    CHAR(8)  NOT NULL DEFAULT ' '--作成者。
JA	ZZZZ010241	3000		　⑦Z_LAST_COMPUTER CHAR(15) NOT NULL DEFAULT ' '
JA	ZZZZ010241	3010		                    　　　　   -最後の更新コンピュータ。
JA	ZZZZ010241	3020		　⑧Z_LAST_JOB      CHAR(10) NOT NULL DEFAULT ' '
JA	ZZZZ010241	3030		　　　　　　　　　　　　　　　　　　　　-最後の更新ジョブ。
JA	ZZZZ010241	3040		2.11)ツール使用データの次から主キー
JA	ZZZZ010241	3050		 　(個々のデータを識別するためのデータ)を連続して設定します。
JA	ZZZZ010241	3060		2.12)数値は初期値を0としNULLを認めないものとします。
JA	ZZZZ010241	3070		　NULLは特別なデータ値でその値が存在していない事を意味します
JA	ZZZZ010241	3080		　、プログラムミスの原因になるので基本的には認めません。
JA	ZZZZ010241	3090		2.13)文字は初期値を' '（空白）としNULLを認めません。
JA	ZZZZ010241	3100		2.14)日付（年月日）は文字（CHAR(8))で設定するものとします。
JA	ZZZZ010241	3110		　　データベースでの日付設定はデータベース毎に動作が異なり
JA	ZZZZ010241	3120		　　プログラムミスの原因になるので基本的には使用しません。
JA	ZZZZ010241	3130		2.15)日付時間は文字（CHAR(17))で設定するものとします。
JA	ZZZZ010241	3140		 　データベースでの日付時間設定はデータベース毎に動作が異なり
JA	ZZZZ010241	3150		 　 プログラムミスの原因になるので基本的には使用しません。
JA	ZZZZ010241	3160		2.16)日付時間をDATETIMEで指定することも可能ですが、
JA	ZZZZ010241	3170		　　　思わぬ動きをする可能性があるので注意ください。
JA	ZZZZ010241	3180		     初期値を現在日付時間としNULLを認めません。
JA	ZZZZ010241	3190		2.17)型はSQL　Server(M)の型を基本とします。（VER4以降）
JA	ZZZZ010241	3200		　　　◆文字（表示は1から80文字までです）
JA	ZZZZ010241	3210		　　　[半角,固定長]--CHAR
JA	ZZZZ010241	3220		　　　[半角,可変長]--VARCHAR=M,D,I,L,P VARCHAR2=O
JA	ZZZZ010241	3230		　　　[UNICODE,固定長]--NCHAR=M,O CHAR=D,I,L,P
JA	ZZZZ010241	3240		　　　  (IはI言語で長さを３倍にします。)　VER8.3
JA	ZZZZ010241	3250		 　(Dは_SQL_CHAR_SETを付加し、RDBMSが長さを４倍にします)VER13
JA	ZZZZ010241	3260		       ★注意:全角文字は本来は１文字ですがI言語では都合により
JA	ZZZZ010241	3270		 　          ２文字で計算して下さい。
JA	ZZZZ010241	3280		　　　[UNICODE,可変長]-NVARCHAR=M NVARCHAR2=O VARCHAR=D,I,L,P
JA	ZZZZ010241	3290		　　　  (IはI言語で長さを３倍にします。)　VER8.3
JA	ZZZZ010241	3300		 　(Dは_SQL_CHAR_SETを付加し、RDBMSが長さを４倍にします)VER13
JA	ZZZZ010241	3310		  　   ★注意:全角文字は本来は１文字ですがI言語では都合により
JA	ZZZZ010241	3320		 　          ２文字で計算して下さい。
JA	ZZZZ010241	3330		　　　◆数値
JA	ZZZZ010241	3340		　　　[１０進数]--DECIMAL(少数点以下設定可能）
JA	ZZZZ010241	3350		　　　[整数,２進数]--INT (９桁以下、少数点以下設定不可)
JA	ZZZZ010241	3360		　　　[浮動小数,２進数]-FLOAT（近似値計算されます）
JA	ZZZZ010241	3370		　　　　　　　　　　（注意：事務処理用としては不向きです）
JA	ZZZZ010241	3380		　　　◆その他(思わぬ動きをする可能性あり、十分注意下さい）
JA	ZZZZ010241	3390		　　　[日付と時間]--DATETIME=M TIMESTAMP=D,I,L,O,P
JA	ZZZZ010241	3400		　　　                 (初期値は現在の時間です）
JA	ZZZZ010241	3410		　　　[日付]---DATETIME=M DATE=D,I,L,O,P
JA	ZZZZ010241	3420		　　　                 (初期値は今日の日付です）
JA	ZZZZ010241	3430		===========================================================
JA	ZZZZ010241	3440		3)**-特殊データ名
JA	ZZZZ010241	3450		注意：W以外はDATA=,SET=でデータ名としての使用はできません。
JA	ZZZZ010241	3460		3.1)W[属性]データ名
JA	ZZZZ010241	3470		　　　作業用データです。
JA	ZZZZ010241	3480		　　　宣言しないで即使用できます。
JA	ZZZZ010241	3490		　　　2文字目が数値の時は小数点以下が数値桁(1桁以上,VER7.31)
JA	ZZZZ010241	3500		　　　の数値情報になります、また、
JA	ZZZZ010241	3510		　　　2文字目がEはDATETIME,FはFLOAT,CはCHAR,以外はNCHARと
JA	ZZZZ010241	3520		      想定します。（CHAR,NCHARはVER7.5以上）
JA	ZZZZ010241	3530		3.2)#データ名--メニュー内共通データ名。
JA	ZZZZ010241	3540		 　 メニュー内ジョブ間で共通に使用するテータ名です。
JA	ZZZZ010241	3550		　　（別のメニューを起動すると値を引き継ぎません）
JA	ZZZZ010241	3560		　　いきなり使った場合は空白とみなします。
JA	ZZZZ010241	3570		　　初期値をコマンド行から"データ名=データ"で与えられます。
JA	ZZZZ010241	3580		    ★データ型は全て文字列となります。
JA	ZZZZ010241	3590		    ☆時間起動ジョブでは使えません。
JA	ZZZZ010241	3600		3.3)!データ名--コンピュータ内共通データ名。
JA	ZZZZ010241	3610		 　 コンピュータ内でジョブ間共通に使用するテータ名です。
JA	ZZZZ010241	3620		　　（別のメニューを起動しても値を引き継ぎます）
JA	ZZZZ010241	3630		　　いきなり使った場合は空白とみなします。
JA	ZZZZ010241	3640		　　データ名の長さが30(全角は２文字)以上はエラーとなります。
JA	ZZZZ010241	3650		　　データの長さが80(全角は２文字)以上はエラーとなります。
JA	ZZZZ010241	3660		  　STOP_...内では使用できません。
JA	ZZZZ010241	3670		    ★データ型は全て文字列となります。
JA	ZZZZ010241	3680		    ☆時間起動ジョブでは使えません。
JA	ZZZZ010241	3690		3.4)@データ名--共通固定値用データ名。
JA	ZZZZ010241	3700		　　決まっていて変化しないデータ用です。
JA	ZZZZ010241	3710		    ZZZZZZ_ETC_TABLEのZZZZZZ_KEY1='ZZZZZZ_@'で設定します。
JA	ZZZZ010241	3720		    ★データ型は全て文字列となります。
JA	ZZZZ010241	3730		  　☆ファイル起動ジョブでは使えません。
JA	ZZZZ010241	3740		3.5)&[テーブル別名]...--テーブル設定データ名。
JA	ZZZZ010241	3750		　　テーブルの設定情報です。
JA	ZZZZ010241	3760		　　★テーブル別名は&を含み4文字の時は、先頭がS,E,Tは
JA	ZZZZ010241	3770		    指定出来ません。(VER28.1)
JA	ZZZZ010241	3780		　　 (X+連番を推奨します）
JA	ZZZZ010241	3790		　　PROGRAM=...,[&]テーブル別名,テーブル名または
JA	ZZZZ010241	3800		    TABLE=[&]テーブル別名,テーブル名または
JA	ZZZZ010241	3810		    =SET_TABLE{[&]テーブル別名}{テーブル名};で設定できます。
JA	ZZZZ010241	3820		  テーブル別名を省略はPROGRAM=のテーブル別名と見なします。
JA	ZZZZ010241	3830		  &[テーブル別名].TABLE--テーブル名
JA	ZZZZ010241	3840		　　(内容に?データ名？が有ると再度内容に置き換えます）
JA	ZZZZ010241	3850		  &[テーブル別名].ALL--全列名。(","区切)
JA	ZZZZ010241	3860		  &[テーブル別名].ALL_数字--全列名。
JA	ZZZZ010241	3870		　　(数は1から列数まで）
JA	ZZZZ010241	3880		  &[テーブル別名].ALL_COUNT--全列数。
JA	ZZZZ010241	3890		  &[テーブル別名].WORK--全作業列名。(","区切)
JA	ZZZZ010241	3900		  &[テーブル別名].WORK_DATA-データ作業列名。(","区切)(VER5.2)
JA	ZZZZ010241	3910		  &[テーブル別名].WORK_KEY--キー作業列名。(","区切)(VER5.2)
JA	ZZZZ010241	3920		  &[テーブル別名].WORK_数字--全作業列名。
JA	ZZZZ010241	3930		    ('W'+(属性)+'.'を先頭に付加する）
JA	ZZZZ010241	3940		    (属性はVER7.10で以下のように変更★非互換です
JA	ZZZZ010241	3950		     CHAR,VARCHRは'C'(旧はX)、NCHAR,NVARCHARは'N'(旧はX)
JA	ZZZZ010241	3960		     ,DECIMALは少数点以下の数値ただし10以上は'F'
JA	ZZZZ010241	3970		     ,INTは'0'、FLOATは'F',DATETIMEは'E')
JA	ZZZZ010241	3980		　　(数は1から列数まで）
JA	ZZZZ010241	3990		  &[テーブル別名].DATA--データ列名。(","区切)
JA	ZZZZ010241	4000		  &[テーブル別名].DATA_数字--データ列名。
JA	ZZZZ010241	4010		    (数は1からデータ列数まで）
JA	ZZZZ010241	4020		  &[テーブル別名].DATA_COUNT--データ列数。
JA	ZZZZ010241	4030		  &[テーブル別名].DATA_CREATE-データ列定義。(","区切)
JA	ZZZZ010241	4040		  &[テーブル別名].DATA_CREATE_数-主キー列定義。
JA	ZZZZ010241	4050		  &[テーブル別名].INDEX_数字--インデックス列名(","区切)
JA	ZZZZ010241	4060		　　(数は1からインデックス数まで）
JA	ZZZZ010241	4070		  &[テーブル別名].INDEX_UNIQUE_数字--ユニークのとき'UNIQUE'
JA	ZZZZ010241	4080		　　(数は1からインデックス数まで）
JA	ZZZZ010241	4090		  &[テーブル別名].INDEX_COUNT-インデックス数。
JA	ZZZZ010241	4100		  &[テーブル別名].KEY_COUNT--主キー数。
JA	ZZZZ010241	4110		  &[テーブル別名].KEY--主キー列名。(","区切)
JA	ZZZZ010241	4120		  &[テーブル別名].KEY_数字--主キー列名。
JA	ZZZZ010241	4130		  &[テーブル別名].KEY_CREATE--主キー列定義。(","区切)
JA	ZZZZ010241	4140		  &[テーブル別名].KEY_CREATE_数-主キー列定義。
JA	ZZZZ010241	4150		    (数は1から主キー数まで）
JA	ZZZZ010241	4160		  以下はデータ名毎の設定値
JA	ZZZZ010241	4170		  &[テーブル別名].DATA&列名--DATA=用のデータ名定義情報。
JA	ZZZZ010241	4180		  &[テーブル別名].DATA2&列名--.DATA&列名に対し列名のみなし。
JA	ZZZZ010241	4190		        (名前なし)
JA	ZZZZ010241	4200		  &[テーブル別名].SET&列名--SET=用のデータ名定義情報。
JA	ZZZZ010241	4210		   (型１変更,長さ指定有り,CHECK[1],2,命令群無し）
JA	ZZZZ010241	4220		  &[テーブル別名].SET2&列名--SET=用のデータ名定義情報。
JA	ZZZZ010241	4230		   (型１変更,長さ指定無し,CHECK[1],2,命令群無し）
JA	ZZZZ010241	4240		  &[テーブル別名].KEY&列名--プライムキーの場合'K'。
JA	ZZZZ010241	4250		  &[テーブル別名].DEFINE&列名--定義情報。
JA	ZZZZ010241	4260		  &[テーブル別名].NANE&列名--列名。
JA	ZZZZ010241	4270		  &[テーブル別名].LENGTH1&列名--LENGTH1。
JA	ZZZZ010241	4280		  &[テーブル別名].LENGTH2&列名--LENGTH2。
JA	ZZZZ010241	4290		  &[テーブル別名].TYPE1&列名--TYPE1。
JA	ZZZZ010241	4300		  &[テーブル別名].TYPE2&列名--TYPE2。
JA	ZZZZ010241	4310		  &[テーブル別名].CHECK1&列名--CHECK1。
JA	ZZZZ010241	4320		  &[テーブル別名].CHECK2&列名--CHECK2。
JA	ZZZZ010241	4330		   データディクショナリ上同じテーブル（最後の？以降が同じ）
JA	ZZZZ010241	4340		    のCHECK2は空白に変換します。
JA	ZZZZ010241	4350		  &[テーブル別名].SECTION&列名--SECTION。
JA	ZZZZ010241	4360		  &[テーブル別名].MESSAGE&列名--MESSAGE。
JA	ZZZZ010241	4370		  &[テーブル別名].TITLE&列名--TITLE。
JA	ZZZZ010241	4380		  &[テーブル別名].TABLE_TYPE&列名--テーブルのTYPE。
JA	ZZZZ010241	4390		  &[テーブル別名].TABLE_LENGTH1&列名--テーブルのLENGTH1。
JA	ZZZZ010241	4400		  &[テーブル別名].TABLE_LENGTH2&列名--テーブルのLENGTH2。
JA	ZZZZ010241	4410		  &[テーブル別名].NULL&列名--テーブルのNULL(0=NO,1=YES)。
JA	ZZZZ010241	4420		  &[テーブル別名].DEFAULT&列名--テーブルのDEFAULT値。
JA	ZZZZ010241	4430		  &[テーブル別名].CHECK&列名--ZZZZZZ_CHECKの値。
JA	ZZZZ010241	4440		  &[テーブル別名].CHECK61&列名--ZZZZZZ_CHECK61の値。
JA	ZZZZ010241	4450		  &[テーブル別名].CHECK62&列名--ZZZZZZ_CHECK62の値。
JA	ZZZZ010241	4460		  &[テーブル別名].CHECK63&列名--ZZZZZZ_CHECK63の値。
JA	ZZZZ010241	4470		  &[テーブル別名].CHECK64&列名--ZZZZZZ_CHECK64の値。
JA	ZZZZ010241	4480		  &[テーブル別名].CHECK65&列名--ZZZZZZ_CHECK65の値。
JA	ZZZZ010241	4490		  &[テーブル別名].CHECK66&列名--ZZZZZZ_CHECK66の値。
JA	ZZZZ010241	4500		  &[テーブル別名].C&列名--CREATE_TABLE値。（省略値）
JA	ZZZZ010241	4510		  &[テーブル別名].C2&列名--列名除くCREATE_TABLE値。
JA	ZZZZ010241	4520		  &[テーブル別名].C3&列名--列名除くCREATE_TABLE値。(生値）
JA	ZZZZ010241	4530		　　　　　　　　　　　　　（VER5)
JA	ZZZZ010241	4540		  &[テーブル別名].Z_CANCEL--ツール列名,有='1',無='0'(VER6.6)
JA	ZZZZ010241	4550		  &[テーブル別名].Z_CANCEL_PERSON--有='1',無='0'(VER6.6）
JA	ZZZZ010241	4560		  &[テーブル別名].Z_CHANGE--ツール列名,有='1',無='0'(VER6.6）
JA	ZZZZ010241	4570		  &[テーブル別名].Z_CHANGE_PERSON--有='1',無='0'(VER6.6）
JA	ZZZZ010241	4580		  &[テーブル別名].Z_ADD--ツール列名,有='1',無='0'(VER6.6）
JA	ZZZZ010241	4590		  &[テーブル別名].Z_ADD_PERSON--有='1',無='0'(VER6.6）
JA	ZZZZ010241	4600		  &[テーブル別名].Z_LAST_COMPUTER--有='1',無='0'(VER6.6）
JA	ZZZZ010241	4610		  &[テーブル別名].Z_LAST_JOB---有='1',無='0'(VER6.6）
JA	ZZZZ010241	4620		3.6)&予約語&...--列名設定データ名。
JA	ZZZZ010241	4630		　　データの設定情報です。
JA	ZZZZ010241	4640		    DICTIONARYE=列名,...
JA	ZZZZ010241	4650		    =SET_DICTIONARY{列名,...};で設定できます。
JA	ZZZZ010241	4660		　(VER3以降複数指定可能）
JA	ZZZZ010241	4670		  &DATA_CREATE-列データ定義。(","区切)
JA	ZZZZ010241	4680		  &DATA&列名--DATA=用の列名定義情報。
JA	ZZZZ010241	4690		  &DATA2&列名--&DATA&列名に対し列名のみなし。
JA	ZZZZ010241	4700		  &SET&列名--SET=用の列名定義情報。
JA	ZZZZ010241	4710		     (長さ指定有り,長さが1の時は2とする）
JA	ZZZZ010241	4720		     (CHECK[1],CHECK2,命令群は設定されません）
JA	ZZZZ010241	4730		　&SET2&列名--SET=用の列名定義情報。
JA	ZZZZ010241	4740		     (長さ指定無し）
JA	ZZZZ010241	4750		     (CHECK[1],CHECK2,命令群は設定されません）
JA	ZZZZ010241	4760		　&DEFINE&列名--定義情報。
JA	ZZZZ010241	4770		　&NAME&列名--列名。
JA	ZZZZ010241	4780		　&LENGTH1&列名--LENGTH1。
JA	ZZZZ010241	4790		　&LENGTH2&列名--LENGTH2。
JA	ZZZZ010241	4800		　&TYPE1&列名--TYPE1。
JA	ZZZZ010241	4810		　&TYPE2&列名--TYPE2。
JA	ZZZZ010241	4820		　&CHECK1&列名--CHECK1。
JA	ZZZZ010241	4830		　&CHECK2&列名--CHECK2。
JA	ZZZZ010241	4840		　&SECTION&列名--SECTION。
JA	ZZZZ010241	4850		　&MESSAGE&列名--MESSAGE。
JA	ZZZZ010241	4860		　&TITLE&列名--TITLE。
JA	ZZZZ010241	4870		　&TABLE_TYPE&列名--テーブルのTYPE。
JA	ZZZZ010241	4880		　&TABLE_LENGTH1&列名--テーブルのLENGTH1。
JA	ZZZZ010241	4890		　&TABLE_LENGTH2&列名--テーブルのLENGTH2。
JA	ZZZZ010241	4900		　&NULL&列名--テーブルのNULL(0=NO,1=YES)。
JA	ZZZZ010241	4910		　&DEFAULT&列名--テーブルのDEFAULT値。
JA	ZZZZ010241	4920		　&CHECK&列名--ZZZZZZ_CHECKの値。
JA	ZZZZ010241	4930		　&CHECK61&列名--ZZZZZZ_CHECK61の値。
JA	ZZZZ010241	4940		　&CHECK62&列名--ZZZZZZ_CHECK62の値。
JA	ZZZZ010241	4950		　&CHECK63&列名--ZZZZZZ_CHECK63の値。
JA	ZZZZ010241	4960		　&CHECK64&列名--ZZZZZZ_CHECK64の値。
JA	ZZZZ010241	4970		　&CHECK65&列名--ZZZZZZ_CHECK65の値。
JA	ZZZZ010241	4980		　&CHECK66&列名--ZZZZZZ_CHECK66の値。
JA	ZZZZ010241	4990		　&C&列名--CREATE_TABLE値。（省略値）
JA	ZZZZ010241	5000		　&C2&列名--列名除くCREATE_TABLE値。
JA	ZZZZ010241	5010		　&C3&列名--列名除くCREATE_TABLE値。（生値）（VER5)
JA	ZZZZ010241	5020		3.7)_名前--システム提供データ名。
JA	ZZZZ010241	5030		  _構成&データ名--途中に'&'が有る時は,データ名を構成します。
JA	ZZZZ010241	5040		     ("左辺データ名"＋"比較"＋"データ名または編集した値"）
JA	ZZZZ010241	5050		     ①1文字目
JA	ZZZZ010241	5060		       _=予約語指定
JA	ZZZZ010241	5070		     ②次の文字
JA	ZZZZ010241	5080		       L=LIKEその1 　 　 （値のLIKE比較で最後に%）
JA	ZZZZ010241	5090		       I=LIKEその2　 　　（値のLIKE比較で先頭と最後に%）
JA	ZZZZ010241	5100		       E=LIKEその3　　 　（値のLIKE比較で先頭に%）
JA	ZZZZ010241	5110		       V=VALUE　　　　　　(値の比較で④で比較条件を設定）
JA	ZZZZ010241	5120		       N=NAME(REMOVE込み) (名前比較で④で比較条件を設定）
JA	ZZZZ010241	5130		     ③次の文字
JA	ZZZZ010241	5140		　　　　R=REMOVE　(左辺のデータ名最後の'.'まで先頭を削除）
JA	ZZZZ010241	5150		        C=CUT     (左辺データ名無し）
JA	ZZZZ010241	5160		 　　④次の文字(③がV,Nの場合のみ)
JA	ZZZZ010241	5170		        E=EQUAL                (E :=)
JA	ZZZZ010241	5180		        G=GREATER THAN         (G :>)
JA	ZZZZ010241	5190		      　(次の文字E可能）       (GE:>=)
JA	ZZZZ010241	5200		        L=LES THAN             (l :<)
JA	ZZZZ010241	5210		      　(次の文字EまたはG可能）(LE:<=)
JA	ZZZZ010241	5220		      　                       (LG:<>)
JA	ZZZZ010241	5230		     ⑤次の文字
JA	ZZZZ010241	5240		        &=ここで構成終了
JA	ZZZZ010241	5250		     ⑥データ名が"."で始まっている場合や"."が無い場合は
JA	ZZZZ010241	5260		       PROGRAM=の別名があると想定して処理します。
JA	ZZZZ010241	5270		     (例　_L&X1.ABC--X1.ABC LIKE N'?X1.ABC?%')
JA	ZZZZ010241	5280		          (Nと引用符は型1で判断)
JA	ZZZZ010241	5290		     (例　_VRLG&X1.ABC--ABC<>N'?X1.ABC?')
JA	ZZZZ010241	5300		          (Nと引用符は型1で判断)
JA	ZZZZ010241	5310		     (例　_NGE&X1.ABC--ABC>=X1.ABC)
JA	ZZZZ010241	5320		
JA	ZZZZ010241	5330		  _関数(列名1[;列名2])--途中に'('が有る時は関数を構成します。
JA	ZZZZ010241	5340		                                         (VER18.1)
JA	ZZZZ010241	5350		      列名の代わりに「"データ名"」とするとデータ名の内容を
JA	ZZZZ010241	5360		      文字列とし前後に「'」を付加します。
JA	ZZZZ010241	5370		      列名の代わりに「(データ名)」とするとデータ名の内容を
JA	ZZZZ010241	5380		         列名とします。
JA	ZZZZ010241	5390		      列名の先頭が"."の場合はPROGRAM=の別名を付加します。
JA	ZZZZ010241	5400		     ";"の無い関数は内容をそのまま文字列として扱います。
JA	ZZZZ010241	5410		      _関数((データ名))とすると最初に内容で置き換えます。
JA	ZZZZ010241	5420		      関数目的では無い使い方をする場合も有ります。_L(,_P(,_R(
JA	ZZZZ010241	5430		      SQL関数に変換する物は先頭を"_(関数"とすると関数の左を
JA	ZZZZ010241	5440		         "_)関数"とすると関数の右を設定します。
JA	ZZZZ010241	5450		      _関数は１行内で書く必要が有ります、１行にならない場合は
JA	ZZZZ010241	5460		         _CONTINUE()で対応出来ます。
JA	ZZZZ010241	5470		  _--' 'が内容です。（VER5で追加）
JA	ZZZZ010241	5480		  _$--'$'が内容です。（VER26.1で追加）
JA	ZZZZ010241	5490		  _#--'#'が内容です。（VER26.1で追加）
JA	ZZZZ010241	5500		  _数字--DATA=の数字番目の別名.列名。(VER18.1)
JA	ZZZZ010241	5510		  _A--'@'が内容です。（VER5で追加）
JA	ZZZZ010241	5520		  _A数字--1から26までで英字の'A'から'Z'までが値。
JA	ZZZZ010241	5530		  _A_英字--'A'から'Z'までで数字の1から26までが値。
JA	ZZZZ010241	5540		  _ACOS--逆余弦のSQL関数。　VER22.1
JA	ZZZZ010241	5550		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010241	5560		  _AND_SPACE--データ辞書の条件設定で？_AND_SPACE?のみを
JA	ZZZZ010241	5570		         設定した場合は,空白は空白を,
JA	ZZZZ010241	5580		         空白以外は'AND(?_AND_SPACE?)'を設定します。(VER19.1)
JA	ZZZZ010241	5590		  _ARG--SET{_ARG=でコマンドライン用データに変換。 VER11.1
JA	ZZZZ010241	5600		  _ASIN(数値式)--逆正弦のSQL関数。　VER22.1
JA	ZZZZ010241	5610		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010241	5620		  _ATAN(数値式)--逆正接のSQL関数。　VER22.1
JA	ZZZZ010241	5630		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010241	5640		  _ATAN2(Y数値式;X数値式)--2個の数の逆正接のSQL関数。VER22.1
JA	ZZZZ010241	5650		       (注意：DB2の場合はYとXをI言語側で入れ替えます）
JA	ZZZZ010241	5660		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010241	5670		  _AVG(数値式)--平均を求めるSQL関数(集計)。　VER22.1
JA	ZZZZ010241	5680		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010241	5690		  _BIN--I言語プログラムの有るディレクトリです。(VER35)
JA	ZZZZ010241	5700		  _C-- SQLの文字結合記号。(DB確定時設定）
JA	ZZZZ010241	5710		  _C(--SQLの文字結合の左。(MySQLは'CONCAT('以外空白)(VER18.1)
JA	ZZZZ010241	5720		       ("_(C"も同じ)VER22.1
JA	ZZZZ010241	5730		  _C)--SQLの文字結合の右。(MySQLは')'以外空白)(VER18.1)
JA	ZZZZ010241	5740		       ("_)C"も同じ)VER22.1
JA	ZZZZ010241	5750		  _CEIL(数値式)--最小整数のSQL関数。(VER22.1)
JA	ZZZZ010241	5760		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010241	5770		  _CHART--チャートプログラムのフルパス名です。(VER15.1)
JA	ZZZZ010241	5780		           (Javaでは動きません）
JA	ZZZZ010241	5790		  _CHECK_TYPE--テーブル列型CHECK用。(DB確定時設定）
JA	ZZZZ010241	5800		  _CHECK2--CHECK2の右側表示の選択値。（旧_LIST_BOX_COMMENT)
JA	ZZZZ010241	5810		  _CHECK2_TYPE1--型1(全部)CHECK用。
JA	ZZZZ010241	5820		  _CHECK2_TYPE1_CHAR--型1(半角文字)CHECK用。(VER4変更)
JA	ZZZZ010241	5830		  _CHECK2_TYPE1_DATETIME--型1(時間)CHECK用。
JA	ZZZZ010241	5840		  _CHECK2_TYPE1_DECIMAL--型1(数値)CHECK用。
JA	ZZZZ010241	5850		  _CHECK2_TYPE1_FLOAT--型1(FLOAT)CHECK用。
JA	ZZZZ010241	5860		  _CHECK2_TYPE1_INT--型1(INT)CHECK用。
JA	ZZZZ010241	5870		  _CHECK2_TYPE1_NCHAR--型1(UNICODE)CHECK用。(VER4追加)
JA	ZZZZ010241	5880		  _CHECK2_TYPE2_CHAR--型2(半角文字)CHECK用。(VER4変更)
JA	ZZZZ010241	5890		  _CHECK2_TYPE2_DECIMAL--型2(数値)CHECK用。
JA	ZZZZ010241	5900		  _CHECK2_TYPE2_NCHAR--型2(UNICODE)CHECK用。(VER4追加)
JA	ZZZZ010241	5910		  _CL--[旧]文字結合の左。（MySQLは'CONCAT('以外は空白）(VER8)
JA	ZZZZ010241	5920		  _CLICK--CLICK=で文字をSETするとキーボード入力となります。
JA	ZZZZ010241	5930		          (読み出し不可）
JA	ZZZZ010241	5940		  _CODE--SET{_で先頭が全角文字は2,半角カナは3,以外は1を返す。
JA	ZZZZ010241	5950		  _CODE39--SET{_CODE39=..}でCODE39のチェックディジット設定。
JA	ZZZZ010241	5960		  _COMPUTER--コンピュータ。
JA	ZZZZ010241	5970		      (_COMPUTER_NAMEの'-'を'_'としSQLで扱える名前）
JA	ZZZZ010241	5980		  _COMPUTER_NAME--コンピュータ名。
JA	ZZZZ010241	5990		  _CONCAT(列名1;列名2[;...])--列を結合します。(VER18.1)
JA	ZZZZ010241	6000		  _CONTINUE(内容)--_関数(内容)の内容が１行で収まらない時
JA	ZZZZ010241	6010		           事前に内容を設定出来ます。(VER24.1)
JA	ZZZZ010241	6020		           これ自身は空白値となります。
JA	ZZZZ010241	6030		  _COS(数値式)--コサインのSQL関数。(VER22.1)
JA	ZZZZ010241	6040		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010241	6050		  _COT(数値式)--コタンジェントのSQL関数。(VER22.1)
JA	ZZZZ010241	6060		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010241	6070		  _COUNTER--セクション実行時$$,$-,$+を置き換えます,初期は1。
JA	ZZZZ010241	6080		              (最後のセミコロンは付けません）
JA	ZZZZ010241	6090		      (0から999までです）
JA	ZZZZ010241	6100		  _CR--[旧]文字結合の右。（MySQLは')'以外は空白）(VER8)
JA	ZZZZ010241	6110		  _CUBE(式...)--CUBEのSQL関数。　(VER22.1)
JA	ZZZZ010241	6120		       (注意:MariaDBでは動きません）
JA	ZZZZ010241	6130		【廃止】_CURSOR_...は全て廃止 (VER28.1)
JA	ZZZZ010241	6140		  _D--DECLAREの接頭文字(VER5以降）（M='@',M以外='D’）
JA	ZZZZ010241	6150		      (DB確定時設定）【廃止予定】新は_O_DATA
JA	ZZZZ010241	6160		  _DATA--当セクションの該当データ。
JA	ZZZZ010241	6170		  _DATA_ALL--DATA=のデータ名をカンマで区切ったもの。
JA	ZZZZ010241	6180		  _DATA_ALL_SQL--DATA=_DATA_ALLをSQLに対応した物。(VER18.1)
JA	ZZZZ010241	6190		                           (データ名を別名.列名に変換した物）
JA	ZZZZ010241	6200		  _DATA_COUNT--DATA=の数。(プログラム解析中は今までのDATA=数)
JA	ZZZZ010241	6210		  _DATE--SET{_DATE=..}で近くの正しい日付を返す。(_DATE_GOODへ
JA	ZZZZ010241	6220		　_DATE(CHAR型日)--DATE型の値を返す、SQL文を構成します。
JA	ZZZZ010241	6230		                                                   (VER18.1)
JA	ZZZZ010241	6240		  _DATE_GOOD--SET{_DATE_GOOD=..}で近くの正しい日付を返す。
JA	ZZZZ010241	6250		 　　　 0001-01-01から9999-12-31までの範囲。（VER7.11)
JA	ZZZZ010241	6260		  _DATEDIFF_CHAR(開始日;終了日)---日計算のSQL関数。VER36.1
JA	ZZZZ010241	6270		     (ただし、DB2は値が異なり,年月日単位で値を返します）
JA	ZZZZ010241	6280		  _DATETIME--SET{_DATETIME=..}で17桁の時間を23文字で表現。
JA	ZZZZ010241	6290		  _DATETIME_GOOD-SET{_で近くの正しい日付時間を返す。(VER7.11)
JA	ZZZZ010241	6300		 　　　 日付は1753-01-01から9999-12-31までの範囲。
JA	ZZZZ010241	6310		 　　　 時間は00:00:00.000から23:59:59:998までの範囲。
JA	ZZZZ010241	6320		  (DB確定時設定）
JA	ZZZZ010241	6330		　_DAY_CHAR(CHAR型日付;日数)--日数分の日付を加算するSQL文を
JA	ZZZZ010241	6340		　                                      構成します。(VER18.1)
JA	ZZZZ010241	6350		　_DAY_DATE(DATE型日付;日数)--日数分の日付を加算するSQL文を
JA	ZZZZ010241	6360		　                                      構成します。(VER18.1)
JA	ZZZZ010241	6370		  _DB--データベース名１文字。（DB確定時設定）
JA	ZZZZ010241	6380		    (D=Firebird,I=IBM-DB2,L=MriaDB(MySQL)
JA	ZZZZ010241	6390		     ,M=MicrosoftSQLSrver,O=Oracle,P=PosegreSQL)
JA	ZZZZ010241	6400		  _DB_ERROR--データベースのエラー番号。(?_DB?+エラー番号)
JA	ZZZZ010241	6410		  _DB_HEADER--データベースの先頭部分文字           (VER8.10)
JA	ZZZZ010241	6420		             (上記以外='I_?_SYSTEM?_?_REAL_TEST[1;1]?)
JA	ZZZZ010241	6430		  _DB_I_ERROR--EXIST,NOT_EXIST,DUPLICATE_KEY,ERRORの
JA	ZZZZ010241	6440		               4種類のエラーを返します。(VER8.2）
JA	ZZZZ010241	6450		  _DB_SOFT--データベースのソフト名。
JA	ZZZZ010241	6460		  _DEGREES(数値式)--ラジアンを度に変換するSQL関数。VER22.1
JA	ZZZZ010241	6470		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010241	6480		  _DIGIT11--SET{_DIGIT11=..でモジュラス11デジット1文字設定。
JA	ZZZZ010241	6490		      (1桁目から2倍、3倍とし7倍までで3倍に戻る計算値を
JA	ZZZZ010241	6500		     　11で割った余りを１１から引いた値です、ただし、
JA	ZZZZ010241	6510		   　　余りが0と１は０とします）
JA	ZZZZ010241	6520		  _DIV(数値式1;数値式2)---商を求めるSQL文。　VER22.1
JA	ZZZZ010241	6530		  _DRIVES--パソコンに設定されているドライブ文字の一覧。
JA	ZZZZ010241	6540		      (注意:Java版はCDROMを認識出来ません)
JA	ZZZZ010241	6550		  _DRIVE_FREE--SET{_DRIVE_FREE=..}でWINDOWSのドライブの空容量
JA	ZZZZ010241	6560		       を返します。(VER31.1)
JA	ZZZZ010241	6570		  _DRIVE_TYPE--SET{_DRIVE_TYPE=..}でWINDOWSのドライブのタイプ
JA	ZZZZ010241	6580		       を返します。(VER31.1)
JA	ZZZZ010241	6590		      ('FIXED','NETWORK','CDROM','REMOVABLE','RAM','UNKNOWN')
JA	ZZZZ010241	6600		  _E--SQL文の区切り文字(MSSQL='';ORACLE=';')(DB確定時設定）
JA	ZZZZ010241	6610		      【廃止予定】
JA	ZZZZ010241	6620		  _EC--DECLAREの区切り文字(MSSQL=',';ORACLE=';')
JA	ZZZZ010241	6630		       (DB確定時設定) 【廃止予定】
JA	ZZZZ010241	6640		  _EDIT--SET{_EDIT=..}で右辺データの中身"?データ名?"を置換。
JA	ZZZZ010241	6650		                (変換エラーが有るとエラーになります)(VER8.10)
JA	ZZZZ010241	6660		  _EDIT_ERROR--_EDITと同じ,置換不可でもエラーとしません。
JA	ZZZZ010241	6670		[無_ENCODING_CHECK---SET{_ENCODING_CHECK=で真は1偽は0を返す。
JA	ZZZZ010241	6680		  _ENCODE---文字コード一覧をカンマ区切りで返します。VER35
JA	ZZZZ010241	6690		  _ENVIRONMENT--SET{_ENVIRONMENT=..}で環境変数をセット。
JA	ZZZZ010241	6700		  _ERROR--エラーのメッセージ内容。
JA	ZZZZ010241	6710		  _ESC--1以外をセットするとESCを有効としない。（終了しない）
JA	ZZZZ010241	6720		          (読み出し不可）
JA	ZZZZ010241	6730		  _EXE_NAME--起動プログラムのパス込みの名前。
JA	ZZZZ010241	6740		  _EXE_OPTION--起動プログラムの起動パラメータと起動ファイル。
JA	ZZZZ010241	6750		  _EXE_PARAM--起動パラメータ全体(/付き）。
JA	ZZZZ010241	6760		  _EXE_PARAMETER数字--起動パラメータ。
JA	ZZZZ010241	6770		  _EXE_PATH--プログラム起動時のパス。
JA	ZZZZ010241	6780		  _EXP(数値式)--指数値のSQL関数。(VER22.1)
JA	ZZZZ010241	6790		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010241	6800		  _FIND(検索対象;検索文字式)--文字式を探すSQL文。 (VER18.1)
JA	ZZZZ010241	6810		  _FIND_CHAR--SET{_FIND_CHAR=データ+捜す文字群}; (VER7.31)
JA	ZZZZ010241	6820		           データ内で文字群の文字を先頭から捜し一致した最初の
JA	ZZZZ010241	6830		           文字位置を設定します、尚無い時は０を設定します。
JA	ZZZZ010241	6840		  _FIND_CHAR_NOT--SET{_...=データ+捜す文字群}; (VER7.31)
JA	ZZZZ010241	6850		           データ内で文字群の文字を先頭から捜し不一致の最初の
JA	ZZZZ010241	6860		           文字位置を設定します、尚全て有りは０を設定します。
JA	ZZZZ010241	6870		  _FIND_CHAR_LAST--SET{_...=データ+捜す文字群}; (VER7.31)
JA	ZZZZ010241	6880		           データ内で文字群の文字を最後から捜し一致した最後の
JA	ZZZZ010241	6890		           文字位置を設定します、尚無い時は０を設定します。
JA	ZZZZ010241	6900		  _FIND_CHAR_LAST_NOT--SET{_...=データ+捜す文字群}; (VER7.31)
JA	ZZZZ010241	6910		           データ内で文字群の文字を最後から捜し不一致の最後の
JA	ZZZZ010241	6920		           文字位置を設定します、尚全て有りは０を設定します。
JA	ZZZZ010241	6930		  _FIND_COUNT--SET{_...=データ+捜す文字列}; (VER15.1)
JA	ZZZZ010241	6940		           データ内で一致する文字列の数を設定します。
JA	ZZZZ010241	6950		  _FIND_REPEAT--FIND_REPEAT命令の検索番号が設定されます。
JA	ZZZZ010241	6960		  _FIND_STRING--SET{_...=データ+捜す文字列}; (VER7.31)
JA	ZZZZ010241	6970		           データ内で文字列を先頭から捜し一致した最初の
JA	ZZZZ010241	6980		           文字位置を設定します、尚無い時は０を設定します。
JA	ZZZZ010241	6990		  _FIND_STRING_NOT--SET{_...=データ+捜す文字列}; (VER7.31)
JA	ZZZZ010241	7000		           データ内で文字列を先頭から捜し不一致の最初の
JA	ZZZZ010241	7010		           文字位置を設定します、尚全て有りは０を設定します。
JA	ZZZZ010241	7020		  _FIND_STRING_LAST--SET{_...=データ+捜す文字列}; (VER7.31)
JA	ZZZZ010241	7030		           データ内で文字列を最後から捜し一致した最後の
JA	ZZZZ010241	7040		           文字位置を設定します、尚無い時は０を設定します。
JA	ZZZZ010241	7050		  _FIND_STRING_LAST_NOT--SET{_..=データ+捜す文字列};(VER7.31)
JA	ZZZZ010241	7060		           データ内で文字列を最後から捜し不一致の最後の
JA	ZZZZ010241	7070		           文字位置を設定します、尚全て有りは０を設定します。
JA	ZZZZ010241	7080		  _FONT--デフォルトのフォント。
JA	ZZZZ010241	7090		  _FONT_SIZE--デフォルトのフォントサイズ。
JA	ZZZZ010241	7100		  _FOR--DBがD,Fは' FOR ' 以外は','。（VER8.3,_SUBSTRで使用）
JA	ZZZZ010241	7110		  _FOREIGN--外部キー用データ名。(一件目のキー)       VER32.1
JA	ZZZZ010241	7120		  _FOREIGN_TABLE--外部キー用テーブル名。(最後の.以降)VER32.1
JA	ZZZZ010241	7130		  _FRAMEWORK--.NETは'D',Javaは'J',C++は'C'です。　VER36.1
JA	ZZZZ010241	7140		  _FROM--DBがD,Fは' FROM '以外は','。（VER8.3,_SUBSTRで使用）
JA	ZZZZ010241	7150		　_FROM_COUNT--FROMとJOINの数です。（VER7で追加）
JA	ZZZZ010241	7160		      JOINはINNER(2)=,LEFT(2)=,RIGHT(2)=,FULL(2)=です。
JA	ZZZZ010241	7170		  _FROM_DUAL--デーブルの無いFROM。(DB確定時設定）
JA	ZZZZ010241	7180		              (MSSQL='',ORACLE='FROM DUAL')
JA	ZZZZ010241	7190		  _FROM数字--FROM以降のSQL文を組み立てます。
JA	ZZZZ010241	7200		      FROMとJOIN ONのSQL文です。(VER7で追加）
JA	ZZZZ010241	7210		     _FROM##,_FROM$$の場合は空白となります。(繰り返し無し)
JA	ZZZZ010241	7220		  _FULL_SIZE--SET{_FULL_SIZE=..で半角文字を全角に変換します。
JA	ZZZZ010241	7230		              (半角カナも全角カナに変換します)(VER7.13で追加)
JA	ZZZZ010241	7240		  _FUNC(SQLの関数名[;パラメータ;...])--SQLの関数を構成します.
JA	ZZZZ010241	7250		  _FUNC_BEGIN--FUNC開始文字。　　　 　　　　　　(VER8.10)
JA	ZZZZ010241	7260		              (M=' AS BEGIN RETURN ',O=' OS ',L='  RETURN (',
JA	ZZZZ010241	7270		               I=' LANGUAGE SQL CONTAINS SQL NO EXTERNAL
JA	ZZZZ010241	7280		                   ACTION DETERMINISTIC RETURN ',
JA	ZZZZ010241	7290		               P=' AS $SENTENCE__SENTENCE$ ',
JA	ZZZZ010241	7300		               H=' LANGUAGE SQL BEGIN RETURN '
JA	ZZZZ010241	7310		               D=FUNCは不可)
JA	ZZZZ010241	7320		  _FUNC_END--FUNC終了文字。　　　 　　　　　　(VER8.10)
JA	ZZZZ010241	7330		              (M,H=' END ',O,I=' ',L=')',D=FUNCは不可
JA	ZZZZ010241	7340		               P='  $SENTENCE__SENTENCE$ LANGUAGE SQL;')
JA	ZZZZ010241	7350		  _FUNC_RETURNS--FUNCのRETURNS。      　　　　　　(VER8.10)
JA	ZZZZ010241	7360		              ( O=' RETURN ',O以外=' RETURNS ')
JA	ZZZZ010241	7370		  _GROUP_COUNT--_DATA_COUNTと同じ。 (VER7.26)
JA	ZZZZ010241	7380		  _GROUP数字--GROUP BY以降のSQL文を組み立てます。(VER7.23)
JA	ZZZZ010241	7390		      DATA=の属性4にGを設定すると設定されます。
JA	ZZZZ010241	7400		      先頭に最初は"GROUP　BY"が付き、以降は","が付きます。
JA	ZZZZ010241	7410		      _GROUP1(##)($$)があると先頭を'GROUP BY'に戻します。
JA	ZZZZ010241	7420		      SELECT=が無い場合はデータ名から別名.列名を設定します。
JA	ZZZZ010241	7430		      SELECT=が有る場合はその内容を設定します。
JA	ZZZZ010241	7440		      _GROUP##,_GROUP$$の場合は空白となります。(繰り返し無し)
JA	ZZZZ010241	7450		  _HAVING--ここに文字を転送すると先頭にHAVINGが付けられます。
JA	ZZZZ010241	7460		         (VER7.28,COPY=@ZZZZZZ_SQLのSQL=?_HAVING?で使います）
JA	ZZZZ010241	7470		  _HHMM--時間起動時の時分(時間起動で無い時は空白）
JA	ZZZZ010241	7480		  _I--_OS_DRIVE+_P+"I"+_P+"BIN?_IV?"+_Pです。
JA	ZZZZ010241	7490		  _INP_OUT--メニューの処理種類がINP=INPUT,OUT=OUTPUT。
JA	ZZZZ010241	7500		  _INPUT--入力中の文字。(INPUT=でのみ有効)(VER8.4)
JA	ZZZZ010241	7510		  _INPUT_POSITION--入力文字位置。(INPUT=でのみ有効)(VER20.1)
JA	ZZZZ010241	7520		  _INPUT(名前;文字数;見出し)---HTMLのINPUTを組み立てます。
JA	ZZZZ010241	7530		     見出し<input type="text" name="名前"
JA	ZZZZ010241	7540		      value="#名前の内容" size="長さ" maxlength="長さ">
JA	ZZZZ010241	7550		  _INSTANCE--インスタンス名。(ファイル起動ジョブは変更可）
JA	ZZZZ010241	7560		  _IPRINT--印刷プログラムのプログラム名。(VER11.1でJava変更)
JA	ZZZZ010241	7570		  _IPRINT2-印刷プログラムの先頭パラメータ。(VER11.1,Java対応)
JA	ZZZZ010241	7580		  _IV--"I"+_VERSION1です。
JA	ZZZZ010241	7590		  _JAN--SET{_JAN=..でJANのチェックディジットを計算。
JA	ZZZZ010241	7600		  _JOB--ジョブ名。
JA	ZZZZ010241	7610		  _JOB_CGI--CGIで次に実行するジョブ名を指定します。 VER20.1
JA	ZZZZ010241	7620		  _JOB_NAME--ジョブ名称。
JA	ZZZZ010241	7630		  _JOB_PART--------ジョブの許可区分。
JA	ZZZZ010241	7640		      メニューの許可がZZZZでメニュー認証方法がX以外では
JA	ZZZZ010241	7650		  　　変更可能ですが、セクション内のみ有効です。
JA	ZZZZ010241	7660		  _JOB_PERMISSION--ジョブの許可。
JA	ZZZZ010241	7670		      メニューの許可がZZZZでメニュー認証方法がX以外では
JA	ZZZZ010241	7680		  　　変更可能ですが、セクション内のみ有効です。
JA	ZZZZ010241	7690		  利用者の許可がZZZZ以外は利用者許可のみ可能です。(VER8.3)
JA	ZZZZ010241	7700		  _JSON--JSON{}でデータ無しは'0'、全て有りは'1'　(VER24.1)
JA	ZZZZ010241	7710		         一部有りは'2'と成ります。
JA	ZZZZ010241	7720		  _JSON(データ名[;データ名...])--JSONにエンコードします。
JA	ZZZZ010241	7730		       前後に'{'と'}'が付加されるので１行で掛けない場合は
JA	ZZZZ010241	7740		       _CONTINUE(...)で対応します。
JA	ZZZZ010241	7750		       データ名の最初の.以降をキーとします。
JA	ZZZZ010241	7760		  _JSON_P(...)--キーの2文字以降小文字にします。
JA	ZZZZ010241	7770		  _JSON_L(...)--キーを小文字文字にします。
JA	ZZZZ010241	7780		  _JSON2(...)--_JSON(と同じですが内容を変換しません。
JA	ZZZZ010241	7790		  _JSON2_P(...)--JSON_P(と同じですが内容を変換しません。
JA	ZZZZ010241	7800		  _JSON2_L(...)--JSON_L(と同じですが内容を変換しません。
JA	ZZZZ010241	7810		  _L--'{'が内容。
JA	ZZZZ010241	7820		  _L(文字列)--単に文字列を小文字に変換します。VER20.1
JA	ZZZZ010241	7830		      文字列にデータ名を指定する事は出来ません。
JA	ZZZZ010241	7840		      ★注意：文字列に"+[,'{}@?"を含める事は出来ません。
JA	ZZZZ010241	7850		  _LANG--使用言語（２文字）(JA,EN）。
JA	ZZZZ010241	7860		  _LAST_DAY_CHAR(...)--の年月日の最後の日を返す。VER36.1
JA	ZZZZ010241	7870		  _LANG_SYSTEM--システム用言語名。(インストールで決定）
JA	ZZZZ010241	7880		  _LEFT(列名;数字)---左の文字列を返すSQL関数。 VER36.1
JA	ZZZZ010241	7890		  _LEFT_COUNT--_DATA_COUNTと同じ。 (VER7.26)
JA	ZZZZ010241	7900		  _LEFT数字--DATA=に&別名が有ると下記を設定します。
JA	ZZZZ010241	7910		     "LEFT OUTER JOIN ?DATA=のCHECK61? ?_Q?_X?Q? ON
JA	ZZZZ010241	7920		 　  ?データ名から想定した別名及び列名?
JA	ZZZZ010241	7930		　   =?_Q?_X?_Q?.？DATA=のLEFTのSQL文?
JA	ZZZZ010241	7940		     ★注意：構成後?データ名?を内容に変換します。
JA	ZZZZ010241	7950		     データ名から想定した別名及び列名は別名無しは
JA	ZZZZ010241	7960		     PROGRAM=で設定された別名、別名有りはそのまま使用するが、
JA	ZZZZ010241	7970		     先頭に'S'が有る場合は'S'を取ります,列名はドット以下と
JA	ZZZZ010241	7980		     なります。
JA	ZZZZ010241	7990		    _LEFT##,_LEFT$$の場合は空白となります。(繰り返し無し)
JA	ZZZZ010241	8000		  _LEN(文字式)--文字数を返すSQL関数。　VER22.1
JA	ZZZZ010241	8010		      (日本語も1文字で計算します、ただし,SQL Serverの場合
JA	ZZZZ010241	8020		        サロゲートペア(32ビット文字)は2文字で計算されます)
JA	ZZZZ010241	8030		  _LENB(文字式)--バイト文字数を返すSQL関数。　VER22.1
JA	ZZZZ010241	8040		      (日本語はSQL Serverは2文字で以外は3文字で計算されます)
JA	ZZZZ010241	8050		  _LIST_BOX_COMMENT-リストボックスの右側。(旧仕様VER23.1)
JA	ZZZZ010241	8060		  _LOCK1--テーブルの次に記入するロック(Ver2)。(DB確定時設定）
JA	ZZZZ010241	8070		  _LOCK2--最後に記入するロック(VER2)。(DB確定時設定）
JA	ZZZZ010241	8080		  _LOG(数値式)--自然対数のSQL関数　VER22.1
JA	ZZZZ010241	8090		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010241	8100		  _LOG10(数値式)--10の対数のSQL関数。　VER22.1
JA	ZZZZ010241	8110		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010241	8120		  _LOGIN_ID--SQL_LOGIN用ログインIDを設定します。
JA	ZZZZ010241	8130		　　　(空白時はデフォルトの管理者ログインIDです）
JA	ZZZZ010241	8140		  _LOGIN_ID_ADMIN-管理者用デフォルトログインID。
JA	ZZZZ010241	8150		      (DB確定時設定）
JA	ZZZZ010241	8160		  _LOGIN_PASSWORD-SQL_LOGIN用ログインパスワードを設定します。
JA	ZZZZ010241	8170		      (読み出し不可）
JA	ZZZZ010241	8180		  _LOWER--SET{_LOWER=..で英小文字に変換します。
JA	ZZZZ010241	8190		  _M--マスタデータベース用先頭文字。
JA	ZZZZ010241	8200		   　 M='I_？_SYSTEM?_?_REAL_TEST[1;1]?_M_?_JOB_PERMISSION?.'
JA	ZZZZ010241	8210		        +'DBO.?_JOB_PERMISSION?'
JA	ZZZZ010241	8220		  　 P,I='I_？_SYSTEM?_?_REAL_TEST[1;1]_M_?_JOB_PERMISSION?.'
JA	ZZZZ010241	8230		        +'?_JOB_PERMISSION?'
JA	ZZZZ010241	8240		     O='I_？_SYSTEM?_?_REAL_TEST[1;1]?_D_?_JOB_PERMISSION?.'
JA	ZZZZ010241	8250		        +'?_JOB_PERMISSION?'
JA	ZZZZ010241	8260		  _M_REAL--マスタテーブル本番用の先頭文字。
JA	ZZZZ010241	8270		  _MA_テーブル略称--略称を使って許可と許可区分を設定します。
JA	ZZZZ010241	8280		  _M_TEST--マスタテーブルテスト用の先頭文字。
JA	ZZZZ010241	8290		  _MENU_KIND--メニューの処理種類(INPUT,OUTPUT)
JA	ZZZZ010241	8300		  _MENU_PERMISSION--メニューの許可。（変更されない）
JA	ZZZZ010241	8310		　_MENU_SECURITY--メニューの認証方法。（X,J,P,A）
JA	ZZZZ010241	8320		  _MM--_M+_PARTに成ります。(VER8)
JA	ZZZZ010241	8330		  _MM_REAL--_M_REAL+_PARTに成ります。(VER8)
JA	ZZZZ010241	8340		  _MM_TEST--_M_TEST+_PARTに成ります。(VER8)
JA	ZZZZ010241	8350		  _MOD(数値式1;数値式2)--剰余を求めるSQL文。(VER18.1)
JA	ZZZZ010241	8360		  _MP_許可--許可の_M。（通常はメニューの許可使用）
JA	ZZZZ010241	8370		 　　（SQL　Server以外は_Mと同じになる,VER4以降）
JA	ZZZZ010241	8380		  _MP_REAL_許可--_MP_許可のREAL用。
JA	ZZZZ010241	8390		  _MP_TEST_許可--_MP_許可のTEST用。
JA	ZZZZ010241	8400		  _MX--_M...に対しテーブル名先頭の許可はありません。
JA	ZZZZ010241	8410		  _MX_...--_MP_...に対しテーブル名先頭の許可はありません。
JA	ZZZZ010241	8420		  _N--National Langage指定（M,O='N’以外空白)
JA	ZZZZ010241	8430		       (DB確定時設定）
JA	ZZZZ010241	8440		  _NAME--該当セクションのデータ名。
JA	ZZZZ010241	8450		  _NAME_SQL--_NAMEをSQLに対応した物。(VER18.1)
JA	ZZZZ010241	8460		             (データ名を別名.列名に変換した物）
JA	ZZZZ010241	8470		  _NAME数字--DATA=の数字番目のデータ名です。(VER18.1)
JA	ZZZZ010241	8480		  _NEXT--SET{_NEXT=..}で次の文字を設定。
JA	ZZZZ010241	8490		　　　　　(0->1,9->0,A->B,Z->A,A->B,Z->A)
JA	ZZZZ010241	8500		  _NEW_LINE--レコードの切れ目の文字列。
JA	ZZZZ010241	8510		  _NOW_DATE--年月日のデータベース固有現在値。(VER7.11)
JA	ZZZZ010241	8520		  _NOW0--年月日時分秒ミリ秒のデータベース固有現在値。(VER7)
JA	ZZZZ010241	8530		  _NOW17-年月日時分秒ミリ秒をCHAR(17)で表現した現在値。(VER7)
JA	ZZZZ010241	8540		  _NOW8--年月日をCHAR(8)で表現した現在値。(VER7)
JA	ZZZZ010241	8550		  _O--REPLACE_命令で設定され*O*.がこの内容で置き変わります。
JA	ZZZZ010241	8560		  _O_CD--CURSOR{}の列名のデータ名に付加する文字列。(VER18.1)
JA	ZZZZ010241	8570		         (M='@C_',M以外'C_')
JA	ZZZZ010241	8580		  _O_CS--CURSOR{}の列名のSQL文内のデータ名に付加する文字列。
JA	ZZZZ010241	8590		         (D=':C_',M='@C_',D,M以外'C_')
JA	ZZZZ010241	8600		  _O_DATA--OBJECT処理でのデーター名の先頭文字。(VER8.10)
JA	ZZZZ010241	8610		                (M=' @_',M以外=' D_'）
JA	ZZZZ010241	8620		  _O_DATA_SQL--OBJECT処理でのSQL内データー名先頭。 (VER8.10)
JA	ZZZZ010241	8630		                (D=' :D_',M=' @_',D,M以外' D_')
JA	ZZZZ010241	8640		  _O_DECLARE--OBJECT処理で2件目以降のDECLAREを設定(VER8.10)
JA	ZZZZ010241	8650		            (2件目以降のDECLAREを有るだけ繰り返し設定します）
JA	ZZZZ010241	8660		        　　    (O,P='',O,P以外='DECLARE '） (VER18.1)
JA	ZZZZ010241	8670		  _O_DEFAULT--OBJECT処理での初期値設定。　　　　　(VER8.10)
JA	ZZZZ010241	8680		               (M='=',P=':=',以外=' DEFAULT ') (VER18.1)
JA	ZZZZ010241	8690		  _O_ELSE-CURSOR処理でのELSE。　　　　　　　(VER18.1)
JA	ZZZZ010241	8700		  _O_END--OBJECT処理でのEND文字。　　　　　　　(VER8.10)
JA	ZZZZ010241	8710		               (D=' END ',D以外=' END;'）
JA	ZZZZ010241	8720		  _O_END_IF--IFのEND IF  　　　　　　　　　　　　(VER8.10)
JA	ZZZZ010241	8730		               (D,M=' ',D,M以外=' END IF;'）
JA	ZZZZ010241	8740		  _O_EQUAL--OBJECT処理でのイコール記号。  　　　(VER8.10)
JA	ZZZZ010241	8750		               (O,P=':=',O,P以外='='）
JA	ZZZZ010241	8760		  _O_FROM---OBJECT処理でのSET記号。  　　　(VER18.1)
JA	ZZZZ010241	8770		               (O,P=':=',O,P以外='='）
JA	ZZZZ010241	8780		  _O_IF--OBJECT処理でのIF。           　　 　　(VER8.10)
JA	ZZZZ010241	8790		               (D=' IF (',D以外=' IF ')
JA	ZZZZ010241	8800		  _O_IF(処理)--OCRSOR処理でのIF(BEGIN付)設定用。
JA	ZZZZ010241	8810		        次の文字をCURSOR処理用に変更します。
JA	ZZZZ010241	8820		                C. --> '' (空白)
JA	ZZZZ010241	8830		                F. --> ?_O_FD?
JA	ZZZZ010241	8840		                W. --> ?_O_WD?
JA	ZZZZ010241	8850		         C.,F.,W.の後に列名が有れば記憶します。
JA	ZZZZ010241	8860		         C.,F.,W.の後に列名が無いと記憶した物を設定します。
JA	ZZZZ010241	8870		         最後は_O_IF_ENDで閉じます。
JA	ZZZZ010241	8880		  _O_IF_END--_O_IF()のEND処理用です。
JA	ZZZZ010241	8890		    **(_O_INSERT...と_O_UPDATE...は内容を共有します)**
JA	ZZZZ010241	8900		  _O_INSERT--CURSOR処理でのINSERT用文字です。(VER18.1)
JA	ZZZZ010241	8910		  _O_INSERT(列[;..])--CURSOR処理でのINSERT用文字です。(VER18.
JA	ZZZZ010241	8920		  _O_INSERT2--_O_INSERTと同じですがZ_..関連は無し。(VER18.1)
JA	ZZZZ010241	8930		  _O_INSERT2(...)--Z_..関連は無し。(VER18.1)
JA	ZZZZ010241	8940		  _O_INTO--_O_INTO()で設定されるFirebid用INTO文です。(VER18.1
JA	ZZZZ010241	8950		          _O_INTO()を使用した時はSELECTの最後に記入します。
JA	ZZZZ010241	8960		  _O_INTO(列名1;[送り元1;..])--SELECTで受け取るデータの指定。
JA	ZZZZ010241	8970		      列名の先頭には?_O_WS?が付加され送り先と成ります。(VER18
JA	ZZZZ010241	8980		      送り元無は送り先がそのまま列名と成り送り元に成ります。
JA	ZZZZ010241	8990		      _O_INTOにFirebird用INTO文を設定します。
JA	ZZZZ010241	9000		  _O_IN1--OBJECT処理でのデータ設定用1。 　　(VER8.10)
JA	ZZZZ010241	9010		              (H=' IN ',H以外=' ')
JA	ZZZZ010241	9020		  _O_IN2--OBJECT処理でのデータ設定用1。 　　(VER8.10)
JA	ZZZZ010241	9030		              (O=' IN ',O以外=' ')
JA	ZZZZ010241	9040		  _O_NEW--OBJECT処理でのTRIG新レコード別名
JA	ZZZZ010241	9050		          (M=' @_NEW_',O=' :NEW.',I,H=' XNEW.',D,L,P=' NEW.')
JA	ZZZZ010241	9060		  _O_OLD--OBJECT処理でのTRIG旧レコード別名
JA	ZZZZ010241	9070		          (M=' @_OLD_',O=' :OLD.',I,H=' XOLD.',D,L,P=' OLD.')
JA	ZZZZ010241	9080		  _O_SET--OBJECT処理での設定文字。　　　　　　(VER8.10)
JA	ZZZZ010241	9090		               (M,I,L,H= ' SET ',O,P,D=' ')
JA	ZZZZ010241	9100		  _O_SET(処理)--CURSOR処理でのSET設定用です。
JA	ZZZZ010241	9110		                次の文字をCURSOR処理用に変更します。
JA	ZZZZ010241	9120		                   (=) --> ?_O_FROM?
JA	ZZZZ010241	9130		                    C. --> '' (空白)
JA	ZZZZ010241	9140		                    F. --> ?_O_FD?
JA	ZZZZ010241	9150		                    W. --> ?_O_WD?
JA	ZZZZ010241	9160		           C.,F.,W.の後に列名が有れば記憶します。
JA	ZZZZ010241	9170		           C.,F.,W.の後に列名が無いと記憶した物を設定します。
JA	ZZZZ010241	9180		           最後は_O_IF_ENDで閉じます。
JA	ZZZZ010241	9190		  _O_SQL--前の_O_SQL()で設定した内容です。
JA	ZZZZ010241	9200		  _O_SQL(処理)--CURSOR処理でのSQL内設定用です。
JA	ZZZZ010241	9210		           次の文字をCURSOR処理用に変更します。
JA	ZZZZ010241	9220		                C. --> '' (空白)
JA	ZZZZ010241	9230		                F. --> ?_O_FS?
JA	ZZZZ010241	9240		                W. --> ?_O_WS?
JA	ZZZZ010241	9250		           C.,F.,W.の後に列名が有れば記憶します。
JA	ZZZZ010241	9260		           C.,F.,W.の後に列名が無いと記憶した物を設定します。
JA	ZZZZ010241	9270		           _O_SQLに該当文字列が設定されます。
JA	ZZZZ010241	9280		  _O_TABLE数字--CURSOR処理のテーブ名。
JA	ZZZZ010241	9290		  _O_THEN--OBJECT処理でのIFのTHEN(VER8.10)
JA	ZZZZ010241	9300		               (M=' ',D=') THEN ',M,D以外=' THEN '）
JA	ZZZZ010241	9310		  _O_UPDATE_ADD--CURSOR処理のUPDATE(作成)用文字です。
JA	ZZZZ010241	9320		  _O_UPDATE_ADD(列1[;...])-- CURSORでのUPDATE用文字です。
JA	ZZZZ010241	9330		  _O_UPDATE_ADD2--Z_...関連が無し。
JA	ZZZZ010241	9340		  _O_UPDATE_ADD2(列1[;...])--Z_...関連が無し。
JA	ZZZZ010241	9350		  _O_UPDATE_CHANGE--CURSOR処理のUPDATE（修正）用文字です。
JA	ZZZZ010241	9360		  _O_UPDATE_CHANGE(..)--CURSOR処理のUPDATE(修正)用文字です。
JA	ZZZZ010241	9370		  _O_UPD_CHA--_O_UPDATE_CHANGE()の短縮版です。(VER22.1)
JA	ZZZZ010241	9380		  _O_UPD_CHA(..)--_O_UPDATE_CHANGE(..)の短縮版です。(VER22.1)
JA	ZZZZ010241	9390		  _O_UPDATE_CHANGE2--Z_...関連が無し。
JA	ZZZZ010241	9400		  _O_UPDATE_CHANGE2(..)--Z_...関連が無し。
JA	ZZZZ010241	9410		  _O_UPD_CHA2(..)--_O_UPDATE_CHANGE2()の短縮版です。(VER22.1)
JA	ZZZZ010241	9420		  _O_WD--CURSOR{}のデータ名に付加する文字列。   (VER18.1)
JA	ZZZZ010241	9430		        (M='@W_',M以外'W_')
JA	ZZZZ010241	9440		  _O_WS--CURSOR{}のSQL文内のデータ名に付加する文字列。(VER18)
JA	ZZZZ010241	9450		        (D=':W_',M='@W_',D,M以外'W_')
JA	ZZZZ010241	9460		  _O_WHERE--CURSOR処理のキー条件WHERE文。
JA	ZZZZ010241	9470		  _O_WHERE2--_O_WHEREと同じで"AND Z_CANCEL=' '"が有りません。
JA	ZZZZ010241	9480		  _OBJECT_AS--OBJECT処理でデータ定義の後に記入。　(VER8.10)
JA	ZZZZ010241	9490		               (M,O=' AS ',M,O以外=' '）
JA	ZZZZ010241	9500		               (PROCでデータ宣言の次に入れます）
JA	ZZZZ010241	9510		               (FUNCとTRIGとVIEWでは使いません）
JA	ZZZZ010241	9520		  _OBJECT_BEGIN--OBJECT処理での開始処理。      　(VER8.10)
JA	ZZZZ010241	9530		               (PROCは?_OBJECT_AS?の次に入れます）
JA	ZZZZ010241	9540		               (TRIGでは先頭に入れます）
JA	ZZZZ010241	9550		               (FUNCとVIEWでは使いません）
JA	ZZZZ010241	9560		      (P=' AS $SENTENCE__SENTENCE$ ',D=' ',P,D以外=' BEGIN ')
JA	ZZZZ010241	9570		  _OBJECT_END--OBJECT処理での最後処理。      　(VER8.10)
JA	ZZZZ010241	9580		               (PROCとTRIGは最後に入れます）
JA	ZZZZ010241	9590		               (FUNCとVIEWでは使いません）
JA	ZZZZ010241	9600		          (P=" END; $SENTENCE__SENTENCE$ LANGUAGE 'PLPGSQL'",
JA	ZZZZ010241	9610		           O=' END;END;',D=' END ',M,L,I,H=' END;END '）
JA	ZZZZ010241	9620		  _OBJECT_MAIN--OBJECT処理での処理の開始に入れます(VER8.10)
JA	ZZZZ010241	9630		               (全て=' BEGIN ')
JA	ZZZZ010241	9640		  _ORDER数-ORDER BY以降のSQL文を組み立てます。
JA	ZZZZ010241	9650		       先頭に最初は"ORDER BY"で以降は","が設定されます。
JA	ZZZZ010241	9660		       _ORDER1(##)($$)があると先頭を'ORDER BY'に戻します。
JA	ZZZZ010241	9670		       DATA=の属性3が'C'の時は設定されません。（VER7.23)
JA	ZZZZ010241	9680		       DATA=の属性3が'D'の時はDESCを付加します。(VER7.23)
JA	ZZZZ010241	9690		      _ORDER##,_ORDER$$の場合は空白となります。(繰り返し無し)
JA	ZZZZ010241	9700		  _ORDER_COUNT--'K'が有りかつ'C'が無い時と'A','D'がある時は
JA	ZZZZ010241	9710		                 その時の最大番号、無しの時は_DATA_COUNT。
JA	ZZZZ010241	9720		      (A,C,DはVER7.23)(VER3以降有効)
JA	ZZZZ010241	9730		  _OS--OSの名前。（１文字,W=WINDOWS,U=LINUX)
JA	ZZZZ010241	9740		   (VER2以降有効）
JA	ZZZZ010241	9750		  _OS_DRIVE--OSのシステムが存在するドライブ(C:等)。
JA	ZZZZ010241	9760		  _OS_VERSION--OSのバージョン。（１文字)
JA	ZZZZ010241	9770		  _P--パスの区切り文字。
JA	ZZZZ010241	9780		  _P(文字列)--単に文字列を先頭大文字以外小文字に変換します。
JA	ZZZZ010241	9790		  _PAGE_SW--ページ表示の開始で空白となる。（変更可能）
JA	ZZZZ010241	9800		  _PART--メニューの許可区分。
JA	ZZZZ010241	9810		  _PASS_DAY--パスワード通過日。(DD)
JA	ZZZZ010241	9820		  _PATH--カレントパス。（作業中のパス）
JA	ZZZZ010241	9830		  _PERMISSION--使用者の許可(セキュリティー後)。
JA	ZZZZ010241	9840		  _PERSON--使用者(セキュリティー後)。
JA	ZZZZ010241	9850		  _PERSON_NAME--使用者名(セキュリティー後)。
JA	ZZZZ010241	9860		   (ただし、_PERMISSIONが'ZZZZ'
JA	ZZZZ010241	9870		    または_MENU_PERMISSIONが'ZZZZ'
JA	ZZZZ010241	9880		　　または_PERMISSIONが_MENU_PERMISSIONと同じ時）
JA	ZZZZ010241	9890		　_PI--円周率（3.14159265358979)の固定値 VER22.1
JA	ZZZZ010241	9900		　_PP--_MENU_PERMISSION+_PARTが内容です。　(VER22.1)
JA	ZZZZ010241	9910		　_PP1--_MENU_PERMISSIONが内容です。　(VER22.1)
JA	ZZZZ010241	9920		　_PP2--_PARTが内容です。　(VER22.1)
JA	ZZZZ010241	9930		  _PROC--プロシージャー起動命令。　　　　　　　(VER8.10)
JA	ZZZZ010241	9940		         (D='EXCUTE PROCEDURE',M='EXEC',DM以外='CALL')
JA	ZZZZ010241	9950		  _PROC_L--プロシージャー左カッコ。　　　　　　　(VER8.10)
JA	ZZZZ010241	9960		              (M=' ',=M以外='(')
JA	ZZZZ010241	9970		  _PROC_R--プロシージャー右カッコ。　　　　　　　(VER8.10)
JA	ZZZZ010241	9980		              (M=' ',M以外=')')
JA	ZZZZ010241	9990		  _PROGRAM_COUNT--PROGRAM{}の検索又は更新の件数。(VER23.1)
JA	ZZZZ010241	10000		  _PROGRAM_DATA--DATA=のキー以外更新データ名をカンマで区切。
JA	ZZZZ010241	10010		  (データ名の途中に"."が有る場合は別名と判断し"."までを削除）
JA	ZZZZ010241	10020		  _PROGRAM_KEY--DATA=及びSET=のキーデータ名をカンマで区切。
JA	ZZZZ010241	10030		  (データ名の途中に"."が有る場合は別名と判断し"."までを削除）
JA	ZZZZ010241	10040		  _PROGRAM_NO--プログラム番号。
JA	ZZZZ010241	10050		  _Q--'?'が内容。
JA	ZZZZ010241	10060		  _R--'}'が内容。
JA	ZZZZ010241	10070		  _R(文字列;置換前文字列;置換後文字列)---文字を置き換えます。
JA	ZZZZ010241	10080		     文字列は(データ名)でデータ名の内容にする事も出来ます。
JA	ZZZZ010241	10090		  _RADIANS(数値式)--度をラジアンに変換するSQL関数。VER22.1
JA	ZZZZ010241	10100		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010241	10110		  _RAND()--乱数のSQL文。VER22.1
JA	ZZZZ010241	10120		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010241	10130		  _RANDOM---1から最大数までの乱数を発生します。VER20.1
JA	ZZZZ010241	10140		            SET{_RANDOM=最大数];で最大値を設定出来ます。
JA	ZZZZ010241	10150		            最大数の初期値は100です。
JA	ZZZZ010241	10160		  _READ_DATA--READ_NEXTのレコード全体の内容。(VER24.1)
JA	ZZZZ010241	10170		  _READ1_DATA--READ1_NEXTのレコード全体の内容。
JA	ZZZZ010241	10180		  _READ2_DATA--READ2_NEXTのレコード全体の内容。
JA	ZZZZ010241	10190		  _REAL_TEST--本番かテストかの判定。 ('REAL','TEST')。
JA	ZZZZ010241	10200		   (★注意：本番時は変更可能ですがセクション内のみ有効です）
JA	ZZZZ010241	10210		　_RECEIVE--RECEIVE{}のメッセージ内容。
JA	ZZZZ010241	10220		　_RECEIVE_COMPUTER_NAME--RECEIVE{}のコンピュータ名。
JA	ZZZZ010241	10230		  _RECEIVE_JOB--RECEIVE{}のジョブ。
JA	ZZZZ010241	10240		  _RECEIVE_LANG--RECEIVE{}の言語。
JA	ZZZZ010241	10250		　_RECEIVE_PERSON--RECEIVE{}の使用者。
JA	ZZZZ010241	10260		　_RECEIVE_SW--RECEIVE{}でのEnterは"1"。
JA	ZZZZ010241	10270		  _RECEIVE_SYSTEM--RECEIVE{}のシステム。
JA	ZZZZ010241	10280		◆_REGISTRY--SET{..=KEY+SUBKEY}でLOCALMACHINEから読む。
JA	ZZZZ010241	10290		   インストール以外でも動きます。(VER24.1)
JA	ZZZZ010241	10300		   C++はREG_WORD以外は読めません。(VER31.1)
JA	ZZZZ010241	10310		  *注意*JAVA版は動きません。
JA	ZZZZ010241	10320		　_REPEAT--指定文字を繰り返すSQLの関数です。(VER6.3,廃止予定)
JA	ZZZZ010241	10330		　_REPEAT(文字;数値)文字を数値分繰り返すSQL文です。(V22.1）
JA	ZZZZ010241	10340		　(MはREPLICATE,OはLPAD,IとPはREPEATとなります）
JA	ZZZZ010241	10350		  _RESTORE_DB--リストアーしたデータベース名の付加文字です。
JA	ZZZZ010241	10360		         D(Firebird)とI(DB2)に対しRESTORE_DB_を付加した命令と
JA	ZZZZ010241	10370		         CONTROL=RESTORE_DBはSQL=にこの内容が付加されます。
JA	ZZZZ010241	10380		        (VER18.1)
JA	ZZZZ010241	10390		  _RETURN_SQL--1を設定すると選択戻りで再検索を実行。
JA	ZZZZ010241	10400		          (読み出し不可）
JA	ZZZZ010241	10410		  _RIGHT(列名;数字)---右の文字列を返すSQL関数。 VER36.1
JA	ZZZZ010241	10420		  _ROLLUP(式...)--ROLLUPのSQL関数。　(VER22.1)
JA	ZZZZ010241	10430		  _ROUNDUP(値1;値2)--数値を切り上げるSQL文にします。VER22.1
JA	ZZZZ010241	10440		  _S--'#'が内容です。(VER5で追加)
JA	ZZZZ010241	10450		  _SECURITY--使用者の認証区分。(セキュリティー後)(VER7)
JA	ZZZZ010241	10460		    'ADMIN'=管理者用(A使用可能）
JA	ZZZZ010241	10470		    (ただし_MENU_PERMISSIONが'ZZZZ'か_PERMISSIONと同じ時有効)
JA	ZZZZ010241	10480		  　'PERSON'=使用者用（P使用可能）
JA	ZZZZ010241	10490		    (ただし_MENU_PERMISSIONが'ZZZZ'か_PERMISSIONと同じ時有効)
JA	ZZZZ010241	10500		  　'GUEST'=ゲスト用（XとJのJOB登録のみ使用可能）
JA	ZZZZ010241	10510		  _SELECT_COUNT--_DATA_COUNTと同じ。 (VER7.26)
JA	ZZZZ010241	10520		  _SELECT数字--SELECT以降のSQL文を組み立てます。
JA	ZZZZ010241	10530		     先頭に'SELECT1’が'SELECT 'で、以外は','が付きます。
JA	ZZZZ010241	10540		     SELECT=がない場合はデータ名から別名.列名が設定します。
JA	ZZZZ010241	10550		     SELECT=が有る場合はその内容が設定されます。
JA	ZZZZ010241	10560		     _SELECT##($$)は"SELECT ' '"となります。(繰り返し無し）
JA	ZZZZ010241	10570		  (VER2.2以降有効)
JA	ZZZZ010241	10580		  _SERVER--サーバー 。
JA	ZZZZ010241	10590		  　（_SERVER_NAMEの'-'を'_'としSQLで扱える名前）
JA	ZZZZ010241	10600		  _SERVER_NAME--サーバー名 。(サーバーのコンピュータ名）
JA	ZZZZ010241	10610		　_SET--SET=の開始時'S'が設定されます。（以外は空白)(VER5.11)
JA	ZZZZ010241	10620		　_SET1--値設定1(MSQL='SELECT',以外='')(DB確定時設定）
JA	ZZZZ010241	10630		         【廃止予定】新は_O_SET
JA	ZZZZ010241	10640		  _SET2--値設定2(MSQL='=',以外=':=')(DB確定時設定）
JA	ZZZZ010241	10650		         【廃止予定】新は_O_EQUAL
JA	ZZZZ010241	10660		  _SET_COUNT--SET=の数。(プログラム解析中はここまでのSET=数)
JA	ZZZZ010241	10670		　_SETUP--セットアップ名。(インストールプログラムのみ変更可)
JA	ZZZZ010241	10680		  _SIN(数値式)--サインのSQL関数。(VER22.1)
JA	ZZZZ010241	10690		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010241	10700		  _SPACE--SET{_SPACE=..}で空白(0X20)>文字を空白に置換。
JA	ZZZZ010241	10710		  _SPACE_ERASE--SET{_SPACE_ERASE=..}で全ての空白を削除。V1.51
JA	ZZZZ010241	10720		　_SPLIT_COUNT--SPLIT_...の分割件数。 (旧仕様）
JA	ZZZZ010241	10730		　_SPLIT_CHAR_COUNT--SPLIT_CHAR{}.の分割件数。 (VER22.1）
JA	ZZZZ010241	10740		　_SPLIT_FORM_COUNT--SPLIT_FORM{}.の分割件数。 (VER22.1）
JA	ZZZZ010241	10750		  _SQL--直近で実行されたSQL文。
JA	ZZZZ010241	10760		  _SQL_OLD--２回前に実行されたSQL文。
JA	ZZZZ010241	10770		========( 以下組み込まれていない、保留)====
JA	ZZZZ010241	10780		  _SQL_3_SW--0の時修正データ無し。
JA	ZZZZ010241	10790		　　(CONTROL=PROGRAMか3.PROGRAMが記入されている時のみ
JA	ZZZZ010241	10800		　　　　　　　　　　　　　　　　　　　STOP_AFTERで有効)
JA	ZZZZ010241	10810		       (通常は「修正無し」でSTOP_AFTER処理実行されず）
JA	ZZZZ010241	10820		==========================================
JA	ZZZZ010241	10830		  _SQL_CHAR--内容は'CHAR'　VER29.1
JA	ZZZZ010241	10840		  _SQL_CHAR_SET--Firebirdは'CHARACTER SET UNICODE_FSS'で、
JA	ZZZZ010241	10850		                  Firebird以外は空白です。(VER8.3)
JA	ZZZZ010241	10860		  _SQL_COLUMN--SQL=受信カラム数。($も使えます）
JA	ZZZZ010241	10870		  _SQL_COUNT--SQL=受信データ件数。($も使えます）
JA	ZZZZ010241	10880		  _SQL_COUNT_123--SQL更新データ件数。(SQL{}で設定）
JA	ZZZZ010241	10890		  _SQL_DATE--内容は'DATE'　VER29.1
JA	ZZZZ010241	10900		  _SQL_DATETIME--時間を表現する型定義。(DB確定時設定）
JA	ZZZZ010241	10910		  _SQL_DECIMAL---内容は'DECIMAL'　VER29.1
JA	ZZZZ010241	10920		  _SQL_FILE--SQL_FILE{}のファイル名。(_JOB+_HHMM)
JA	ZZZZ010241	10930		  _SQL_FILE_COLUMN--SQL_FILE{}受信カラム数。
JA	ZZZZ010241	10940		  _SQL_FILE_COUNT--SQL_FILE{}受信データ件数。
JA	ZZZZ010241	10950		  _SQL_FLOAT---内容は'FLOAT'　VER29.1
JA	ZZZZ010241	10960		  _SQL_INT---内容は'INT'　VER29.1
JA	ZZZZ010241	10970		  _SQL_LENGTH--SQLの長さを返す関数。(DB確定時設定）
JA	ZZZZ010241	10980		  _SQL_LIMIT--最初のSQ=,SQL1,SQL2,FILEの受信件数を指定。
JA	ZZZZ010241	10990		          (読み出し不可）
JA	ZZZZ010241	11000		　　　　   　処理後0(無制限)に戻る。
JA	ZZZZ010241	11010		  _SQL_NCHAR--NCHARを表現する型定義。(DB確定時設定）
JA	ZZZZ010241	11020		  _SQL_NVARCHAR--NVARCHARを表現する型定義。(DB確定時設定）
JA	ZZZZ010241	11030		  _SQL_PERMISSION--SQL=の許可。 (VER6.6)
JA	ZZZZ010241	11040		    メニューの許可がZZZZでメニュー認証がX以外で変更可能です。
JA	ZZZZ010241	11050		    利用者の許可がZZZZ以外は利用者許可のみ可能です。(VER8.3)
JA	ZZZZ010241	11060		  _SQL_REPEAT_COLUMN--SQL_REPEAT受信カラム数。
JA	ZZZZ010241	11070		  _SQL_REPEAT_COUNT--SQL_REPEAT受信データ件数。
JA	ZZZZ010241	11080		  _SQL_SET_COLUMN--SQL_SET受信カラム数。
JA	ZZZZ010241	11090		  _SQL_SET_COUNT--SQL_SET受信データ件数。
JA	ZZZZ010241	11100		  _SQL_VALUE_数字--SQL=の受信データの##番目。($も使えます）
JA	ZZZZ010241	11110		  _SQL_VARCHAR--VARCHARを表現する型定義。(DB確定時設定）
JA	ZZZZ010241	11120		　　(数は１から、VER3以降可能）
JA	ZZZZ010241	11130		  _SQL1_COLUMN--SQL1受信カラム数。
JA	ZZZZ010241	11140		  _SQL1_COUNT--SQL1受信データ件数。
JA	ZZZZ010241	11150		  _SQL2_COLUMN--SQL2受信カラム数。
JA	ZZZZ010241	11160		  _SQL2_COUNT--SQL2受信データ件数。
JA	ZZZZ010241	11170		  _SQRT(数値式)--平方根のSQL関数。(VER22.1)
JA	ZZZZ010241	11180		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010241	11190		  _START--選択処理(0),更新処理(1,2,3)。
JA	ZZZZ010241	11200		  _STDEVP(数値式)--母集団の標準偏差のSQL関数(集計)。(VER22.1)
JA	ZZZZ010241	11210		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010241	11220		  _STDEVS(数値式)--標本の標準偏差のSQL関数(集計)。(VER22.1)
JA	ZZZZ010241	11230		       注意:DB2(I)では動きません。
JA	ZZZZ010241	11240		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010241	11250		  _STRING_A_Z--AからZまでの文字列です。(VER7.31)
JA	ZZZZ010241	11260		  _STRING_0_9--0から9までの文字列です。(VER7.31)
JA	ZZZZ010241	11270		  _SUBSTR--SQLの部分文字列を抜き出す関数名。(DB確定時設定）
JA	ZZZZ010241	11280		            　　　  (MSSQL='SUBSTRING',ORACLE='SUBSTR'）
JA	ZZZZ010241	11290		   (関数内は','区切ではなく_FROMと_FORを使って下さい,VER8.3)
JA	ZZZZ010241	11300		  _SUBSTR(列文字名;先頭位置名;文字数名)--部分文字列を抜き出す
JA	ZZZZ010241	11310		            　　　　　        SQL関数を構成します。(VER18.1)
JA	ZZZZ010241	11320		  _SYSTEM--システム名。
JA	ZZZZ010241	11330		  _SYSTEM_NAME-システム名称。
JA	ZZZZ010241	11340		  _T--PROGRAM=で指定のテーブル別名。（先頭の&はなし）
JA	ZZZZ010241	11350		  _TABLE--PROGRAM=で指定のテーブル名。
JA	ZZZZ010241	11360		  　(内容に?データ名？が有ると再度内容に置き換えます）
JA	ZZZZ010241	11370		  _TAN(数値式)--タンジェントのSQL関数。(VER22.1)
JA	ZZZZ010241	11380		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010241	11390		  【廃止】_TILDE--'~'が内容です。（'~'1個）（VE15.1で追加）
JA	ZZZZ010241	11400		         【不要となったので廃止としました】(VER28.1)
JA	ZZZZ010241	11410		  _TMP--作業ディレクトリ。(最後に区切り文字が付きます)(VER9)
JA	ZZZZ010241	11420		  【廃止】_TEXT数値--１個前の命令の原文。
JA	ZZZZ010241	11430		         【使いにくいのであえて廃止としました】(VER28.1)
JA	ZZZZ010241	11440		  _TIMEOUT_CONNECT--SQL接続のタイムアウトの秒数。(DB接続秒）
JA	ZZZZ010241	11450		  _TIMEOUT_SQL--SQL実行のタイムアウトの秒数。(SQL実行秒)
JA	ZZZZ010241	11460		          1を転送するとトレースを再開。
JA	ZZZZ010241	11470		　　　　（トレースは実行中の命令をファイルに書きます）
JA	ZZZZ010241	11480		  _TODAY--SERVERの今日の年月日(数字8桁)。
JA	ZZZZ010241	11490		         （注意：その時点の日付です、処理中に変化する)
JA	ZZZZ010241	11500		  _TODAY_CLIENT--CLIENTの今の年月日(数字8桁)。
JA	ZZZZ010241	11510		  _TODAY_TIME--SERVERの今日の年月日時分秒ミリ秒(数字17桁)。
JA	ZZZZ010241	11520		         （注意：その時点の日付時間です、処理中に変化する)
JA	ZZZZ010241	11530		  _TODAY_TIME_CLIENT--CLIENTの今の年月日時分秒ミリ秒
JA	ZZZZ010241	11540		　　　　　　　　　　　　　　　　　　　　　　　(数字17桁)。
JA	ZZZZ010241	11550		  _TRACE--0を転送するとトレースを中止。
JA	ZZZZ010241	11560		          (読み出し不可）
JA	ZZZZ010241	11570		  _TRIM--SET{_TRIM=...};で前後の空白を取ります。(VER6.2)
JA	ZZZZ010241	11580		　_TRUNC(元値;桁位置)--元値を桁位置で切り捨るSQL関数.VER18.1
JA	ZZZZ010241	11590		  _TILDE--'~'が内容です。（'~'1個）（VE15.1で追加）
JA	ZZZZ010241	11600		  【廃止】_TT--'~~'が内容です。（'~'２個）（VE5で追加）
JA	ZZZZ010241	11610		     【不要となったので廃止としました】(VER28.1)
JA	ZZZZ010241	11620		  _UNION数値--_UNION1と_UNION##,_UNION$$は空白以外はUNION。
JA	ZZZZ010241	11630		  _UNION_ALL数値-_UNION_ALL1,..##,..$$は空白以外はUNION ALL。
JA	ZZZZ010241	11640		  _URL--URL{}で受信したファイル名を設定します。(VER18.1)
JA	ZZZZ010241	11650		  _URL_DECODE---SET{_URL_DECODE=..でURLデコードをします.VER24
JA	ZZZZ010241	11660		      (_URL_ENCODE_DECODEの文字コードでデコードします)
JA	ZZZZ010241	11670		  _URL_ENCODE---SET{_URL_ENCODE=..でURLエンコードします.VER24
JA	ZZZZ010241	11680		      (_URL_ENCODE_DECODEの文字コードでエンコードします)
JA	ZZZZ010241	11690		  _URL_ENCODE_ECODE---URLエンコードの文字コードを設定します。
JA	ZZZZ010241	11700		      (初期値はUTF-8です)
JA	ZZZZ010241	11710		  _UPPER--SET{_UPPER=..で英大文字に変換します。
JA	ZZZZ010241	11720		  _USER--現在のユーザ名。
JA	ZZZZ010241	11730		  _USER_DOMAIN--現在のドメイン名。
JA	ZZZZ010241	11740		  _UTF8_GET--I,Lは3,Dは4以外は1。(VER8.3,3)(VER13,L=3,D=4)
JA	ZZZZ010241	11750		  _UTF8_SET--Iは3以外は1。     (VER8.3)
JA	ZZZZ010241	11760		  _VARIABLE--常に用意されたデータ名として使えます。(VER23.1)
JA	ZZZZ010241	11770		  _VERSION1--バージョン1。(1番目,35)(I言語のバージョン)
JA	ZZZZ010241	11780		  _VERSION2--バージョン2。(2番目)   (I言語のバージョン)
JA	ZZZZ010241	11790		  _VARP(数値式)-----母集団の分散のSQL関数(集計)。(VER22.1)
JA	ZZZZ010241	11800		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010241	11810		  _VARS(数値式)-----標本の分散のSQL関数(集計)。(VER22.1)
JA	ZZZZ010241	11820		       注意:DB2(I)では動きません。
JA	ZZZZ010241	11830		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010241	11840		  _W--ワークデータベース先頭文字。(★VER6.5で内容を変更)
JA	ZZZZ010241	11850		   M='I_?_SYSTEM?_?_REAL_TEST[1;1]?_W_?_JOB_PERMISSION?.DBO.'
JA	ZZZZ010241	11860		       +'?_JOB_PERMISSION?'+_INP_OUT[1;1]
JA	ZZZZ010241	11870		   P,I,L='I_?_SYSTEM?_?_REAL_TEST[1;1]?_W_?_JOB_PERMISSION?.'
JA	ZZZZ010241	11880		       +'?_JOB_PERMISSION?'+_INP_OUT[1;1]
JA	ZZZZ010241	11890		   O='I_?_SYSTEM?_?_REAL_TEST?_?_INP_OUT[1;1]?'
JA	ZZZZ010241	11900		       +'_?_INP_OUT[1;1]?_?_JOB_PERMISSION?.'
JA	ZZZZ010241	11910		       +'?_JOB_PERMISSION?'+_INP_OUT[1;1]
JA	ZZZZ010241	11920		  _W_REAL--ワークデータベース本番用の先頭文字。
JA	ZZZZ010241	11930		　_W_TEST--ワークデータベーステスト用の先頭文字。
JA	ZZZZ010241	11940		  _W_INP--ワークデータベース先頭文字。
JA	ZZZZ010241	11950		          (_W_Iも同じVER8)
JA	ZZZZ010241	11960		  _W_REAL_INP--ワークデータベース本番用の先頭文字。
JA	ZZZZ010241	11970		　_W_TEST_INP--ワークデータベーステスト用の先頭文字。
JA	ZZZZ010241	11980		  _W_OUT--ワークデータベース先頭文字。
JA	ZZZZ010241	11990		          (_W_Oも同じVER8)
JA	ZZZZ010241	12000		  _W_REAL_OUT--ワークデータベース本番用の先頭文字。
JA	ZZZZ010241	12010		　_W_TEST_OUT--ワークデータベーステスト用の先頭文字。
JA	ZZZZ010241	12020		　_WEEK_CHAR(CHAR型日付)--曜日を返すSQL文を構成します。
JA	ZZZZ010241	12030		　                    (1=日曜日,7=土曜日)         (VER18.1)
JA	ZZZZ010241	12040		　_WEEK_DATE(DATE型日付)--曜日を返すSQL文を構成します。
JA	ZZZZ010241	12050		　                        (1=日曜日,7=土曜日)      (VER18.1)
JA	ZZZZ010241	12060		  _WP_許可--ワークデータベース先頭文字。
JA	ZZZZ010241	12070		  _WP_REAL_許可--ワークデータベース本番用の先頭文字。
JA	ZZZZ010241	12080		　_WP_TEST_許可--ワークデータベーステスト用の先頭文字。
JA	ZZZZ010241	12090		  _WP_INP_許可--ワークデータベース先頭文字。
JA	ZZZZ010241	12100		          (_WP_I_許可も同じVER8)
JA	ZZZZ010241	12110		  _WP_OUT_許可--ワークデータベース先頭文字。
JA	ZZZZ010241	12120		          (_WP_O_許可も同じVER8)
JA	ZZZZ010241	12130		  _WP_REAL_INP_許可--ワークデータベース本番用の先頭文字。
JA	ZZZZ010241	12140		          (_WP_REAL_I_許可も同じVER8)
JA	ZZZZ010241	12150		  _WP_REAL_OUT_許可--ワークデータベース本番用の先頭文字。
JA	ZZZZ010241	12160		　_WP_TEST_INP_許可--ワークデータベーステスト用の先頭文字。
JA	ZZZZ010241	12170		          (_WP_TEST_I_許可も同じVER8)
JA	ZZZZ010241	12180		　_WP_TEST_OUT_許可--ワークデータベーステスト用の先頭文字。
JA	ZZZZ010241	12190		          (_WP_TEST_O_許可も同じVER8)
JA	ZZZZ010241	12200		  _WMI--SET{_WMI=マネージメントオブジェクト名+アイテム名}
JA	ZZZZ010241	12210		　　　　　　　　　　　　　　　　　　でWMI情報を設定。
JA	ZZZZ010241	12220		  *注意*JAVA版は動きません。
JA	ZZZZ010241	12230		  _WHERE_COUNT--_SET_COUNTと同じ。 (VER7.26)
JA	ZZZZ010241	12240		　_WHERE数字--WHERE以降のSQL文を組み立てます。
JA	ZZZZ010241	12250		    VER6:
JA	ZZZZ010241	12260		    該当データの@WHEREの内容を設定します。
JA	ZZZZ010241	12270		    ①@WHEREが空白の場合は空白を設定します。
JA	ZZZZ010241	12280		    ②空白でない時は"?_WHERE_AND?+' ('+@WHEREの内容+')'"
JA	ZZZZ010241	12290		      を設定し_WHERE_ANDが'AND'になります。
JA	ZZZZ010241	12300		    ③別名に'*'が有っても@WHEREを設定すれば採用されます。
JA	ZZZZ010241	12310		  _WHERE_AND--'WHERE'または'AND'が設定されます。
JA	ZZZZ010241	12320		     SQL=開始,"_WHERE1","WHERE##"($$)で'WHERE'になります。
JA	ZZZZ010241	12330		     _WHERE数が有効,_WHERE_ANDが使われた場合'AND'になります。
JA	ZZZZ010241	12340		     _WHERE##,_WHERE$$の場合は空白となります。
JA	ZZZZ010241	12350		  _WINDOW--ウインドウの識別番号です。(数字２桁）
JA	ZZZZ010241	12360		  _WORK--サーバー内ファイル名用 (★VER8.3,VER6.5で変更）
JA	ZZZZ010241	12370		   （サーバー内でユニークな文字列）。
JA	ZZZZ010241	12380		    メニュー起動の場合
JA	ZZZZ010241	12390		　(?_JOB_PERMISSION?__?_INP_OUT[1;1]?M?_COMPUTER??_WINDOW?)
JA	ZZZZ010241	12400		     時間起動の場合
JA	ZZZZ010241	12410		  (?_JOB_PERMISSION?__?_INP_OUT[1;1]?T?_JOB??_HHMM?)
JA	ZZZZ010241	12420		   　注意：複数使用を想定し英字１文字を末尾へ付加の事。
JA	ZZZZ010241	12430		  _WORK_TABLE--作業テーブル用 (★VER8.3,VER6.5で変更）
JA	ZZZZ010241	12440		     使用する場合はAから英字1文字を末尾へ付加してください。
JA	ZZZZ010241	12450		 　　（数字はインデックス名と重複するので必ず英字にする事）
JA	ZZZZ010241	12460		 　　（消し忘れで作業テーブルが沢山残らないようにする為）
JA	ZZZZ010241	12470		 　　（_WORK_TABLE+"__"はCURSOR{},SQL_CURSOR{}で使用します）
JA	ZZZZ010241	12480		　_WX--_Wに対しテーブル名先頭の許可名以降はありません。
JA	ZZZZ010241	12490		　_WX_...--_W_に対しテーブル名先頭の許可名以降はありません。
JA	ZZZZ010241	12500		  _WW--_Wの_INP_OUT[1;1]の前に_PARTを含めます。(VER8)
JA	ZZZZ010241	12510		  _XML--XML{}でデータ無しは'0'、全て有りは'1'　(VER24.1)
JA	ZZZZ010241	12520		         一部有りは'2'と成ります。
JA	ZZZZ010241	12530		  _XML(データ名1[;データ名2...])--XMLにエンコードします。
JA	ZZZZ010241	12540		      データ名2以降は属性として扱われます。
JA	ZZZZ010241	12550		      データ名の最初の.以降を要素名または属性名とします。
JA	ZZZZ010241	12560		  _XML_L(...)--_XMLと同じでデータ名が小文字です。
JA	ZZZZ010241	12570		  _XML_P(...)--_XMLと同じでデータ名2文字以降小文字です。
JA	ZZZZ010241	12580		  _XML2(...)--_XML(と同じですが内容を変換しません。
JA	ZZZZ010241	12590		  _XML2_L(...)--_XML_Pと同じですが内容を変換しません。
JA	ZZZZ010241	12600		  _XML2_P(...)--_XML_P(と同じですが内容を変換しません。
JA	ZZZZ010241	12610		　_X--SET=,DATA=の属性内の別名、変更も出来ます(VER5.11）
JA	ZZZZ010241	12620		  VER6:SET=,DATA=の開始で別名を設定しますが空白の時は
JA	ZZZZ010241	12630		       データ名の先頭文字とし、最初にSが有ると取ります。
JA	ZZZZ010241	12640		  _YEN--内容が'\'です。
JA	ZZZZ010241	12650		  _Z_ALL_NAME--Ｚ項目群全項目名。
JA	ZZZZ010241	12660		  _Z_ALL_NAME_VALUE--Ｚ項目群全項目名を引用符で囲った物。
JA	ZZZZ010241	12670		  (VER3以降可能）
JA	ZZZZ010241	12680		  _Z_INSERT_NAME--Ｚ項目群INSERT用NAME。
JA	ZZZZ010241	12690		  _Z_INSERT_VALUE--Ｚ項目群INSERT用VALUE。
JA	ZZZZ010241	12700		  _Z_UPDATE_ADD--Ｚ項目群UPDATE作成用SET。
JA	ZZZZ010241	12710		  _Z_UPDATE_CHANGE--Ｚ項目群UPDATE修正用SET。
JA	ZZZZ010241	12720		  _Z_UPDATE_CANCEL--Ｚ項目群UPDATE削除用SET。
JA	ZZZZ010241	12730		3.8)
JA	ZZZZ010241	12740		  ^リンク名（VER5で仕様変更）
JA	ZZZZ010241	12750		　@ZZZZZZ_LINK_リンク名_？_REAL_TEST[1;1]?_?_JOB_PERMISSION?
JA	ZZZZ010241	12760		　　の内容の前にI_?_SYSTEM?_を付加したものです。
JA	ZZZZ010241	12770		 ^リンク名_パーミッション（VER5で仕様変更）
JA	ZZZZ010241	12780		　@ZZZZZZ_LINK_リンク名_？_REAL_TEST[1;1]?_パーミッション
JA	ZZZZ010241	12790		　　の内容の前にI_?_SYSTEM?_を付加したものです。
JA	ZZZZ010241	12800		===========================================================
JA	ZZZZ010241	12810		4)**-行制御命令
JA	ZZZZ010241	12820		★「+」を「-」にすると採用条件が反対になります。
JA	ZZZZ010241	12830		★「備考」は空白以降で判定するので特に注意下さい。
JA	ZZZZ010241	12840		★2個連続で書いた場合はAND（かつ）の判定をしますが,
JA	ZZZZ010241	12850		  「|」を付加した場合は前後をOR（又は）で判定します。
JA	ZZZZ010241	12860		   ただし、一般の動きとは異なり、ANDよりもORの判定を
JA	ZZZZ010241	12870		         先に実行するように動きますので注意して下さい。
JA	ZZZZ010241	12880		  (VER7.7よりの機能）
JA	ZZZZ010241	12890		4.01)**-先頭が「*」は備考で採用しません。
JA	ZZZZ010241	12900		*** *備考
JA	ZZZZ010241	12910		4.02)**-OS名が同じ時採用します。
JA	ZZZZ010241	12920		*** OS名1文字+...
JA	ZZZZ010241	12930		　(WINDOWS="W", LINUX="U")
JA	ZZZZ010241	12940		4.03)**-データベース名が同じ場合採用します。
JA	ZZZZ010241	12950		*** データベース名1文字+
JA	ZZZZ010241	12960		  (MSSQL="M",ORACLE="O",IBM DB2="I",POSTGRESQL="P",MYSQL='L')
JA	ZZZZ010241	12970		4.04)**-言語が同じ時採用します。
JA	ZZZZ010241	12980		*** 言語2文字+...
JA	ZZZZ010241	12990		  (日本語="JA",英語="EN")
JA	ZZZZ010241	13000		4.05.1)**-REPEAT=の回数と同じ時採用します。
JA	ZZZZ010241	13010		*** 数字+...
JA	ZZZZ010241	13020		  "0"の時はREPEAT=の繰り返しがない時に採用します。
JA	ZZZZ010241	13030		4.05.2)**-REPEAT0=又はREPEAT2=の回数と同じ時採用します。
JA	ZZZZ010241	13040		*** $数字+...
JA	ZZZZ010241	13050		  (REPEAT0=内の場合はREPEAT0=の回数が優先となります）
JA	ZZZZ010241	13060		  "$0"の時はREPEAT0=とREPEAT2=の繰り返しがない時採用します。
JA	ZZZZ010241	13070		4.06.1)**-テスト時のみ時採用します。
JA	ZZZZ010241	13080		*** TEST+...
JA	ZZZZ010241	13090		4.06.2)**-PROGRAM=INPUTの時採用します。
JA	ZZZZ010241	13100		*** INPUT+...
JA	ZZZZ010241	13110		4.06.3)**-PROGRAM=OUTPUTの時採用します。
JA	ZZZZ010241	13120		*** OUTPUT+...
JA	ZZZZ010241	13130		4.06.4)**-PROGRAM=NOTの時採用します。
JA	ZZZZ010241	13140		*** NOT+...
JA	ZZZZ010241	13150		4.06.5)**-メニューがINPUTの時採用します。
JA	ZZZZ010241	13160		*** MENU_INPUT+...
JA	ZZZZ010241	13170		4.06.6)**-メニューがOUTPUTの時採用します。
JA	ZZZZ010241	13180		*** MENU_OUTPUT+...
JA	ZZZZ010241	13190		4.07.1)**-%名前が+（無設定時も+）の時採用します。
JA	ZZZZ010241	13200		*** %名前+...
JA	ZZZZ010241	13210		　MINUS=%名前か?SET{%名前='-'}で不採用に設定されます。
JA	ZZZZ010241	13220		　PLUS=%名前か?SET{%名前='+'}で採用に設定されます。
JA	ZZZZ010241	13230		  ZZZZZZ_ETC_TABLEのZZZZZZ_KEY1='ZZZZZZ_%'で初期値を
JA	ZZZZ010241	13240		     設定できます。
JA	ZZZZ010241	13250		  下記は特別にI言語がPROGRAM=で設定し
JA	ZZZZ010241	13260		     COPY=@ZZZZZZ_SQLで使用されます。(VER7.28)
JA	ZZZZ010241	13270		     %Z_CANCEL_SELECTはOUTPUTが'-'で以外は'+'になります。
JA	ZZZZ010241	13280		     %Z_CANCEL_WHERE はOUTPUTが'+'で以外は'-'になります,
JA	ZZZZ010241	13290		      ただし、PROGRAM=のテーブルにZ_CANCEL無は'-'です。(V8.6)
JA	ZZZZ010241	13300		     %ZZZZZZ_SQL_SELECTは'+'になります。
JA	ZZZZ010241	13310		     %ZZZZZZ_SQL_FROM  は'+'になります。
JA	ZZZZ010241	13320		     %ZZZZZZ_SQL_LEFT  は'+'になります。
JA	ZZZZ010241	13330		     %ZZZZZZ_SQL_WHERE は'+'になります。
JA	ZZZZ010241	13340		     %ZZZZZZ_SQL_GROUP は'+'になります。
JA	ZZZZ010241	13350		     %ZZZZZZ_SQL_HAVINGは'+'になります。
JA	ZZZZ010241	13360		     %ZZZZZZ_SQL_ORDER は'+'になります。
JA	ZZZZ010241	13370		     (注意:PROGRAM=で設定されるのでSET{}では変更できません）
JA	ZZZZ010241	13380		4.07.2)**-行制御命令の「%名前+」の行を不採用に設定します。
JA	ZZZZ010241	13390		*** MINUS=%名前 [備考]
JA	ZZZZ010241	13400		△行制御命令の「%名前+」の行を不採用に設定します。
JA	ZZZZ010241	13410		　名前には先頭に必ず"%"を付けて下さい。
JA	ZZZZ010241	13420		4.07.3)**-行制御命令の「%名前+」の行を採用し設定します。
JA	ZZZZ010241	13430		*** PLUS=%名前 [備考]
JA	ZZZZ010241	13440		　名前には先頭に必ず"%"を付けて下さい。
JA	ZZZZ010241	13450		4.08.1)**-次のREPEAT=まで初期値を１づつ加算し繰り返します。
JA	ZZZZ010241	13460		*** REPEAT=[終了値][,初期値] [備考]
JA	ZZZZ010241	13470		  初期値無しは1です。
JA	ZZZZ010241	13480		  終了値が0または無しの場合はREPEAT=の終了です。
JA	ZZZZ010241	13490		  行中の"##"を数値"#-"を数値-1を"#+"を数値+1で置き換えます。
JA	ZZZZ010241	13500		　値はデータ名も指定可能です。
JA	ZZZZ010241	13510		　値を演算子１個（+-*/%)まで使用する事ができます。
JA	ZZZZ010241	13520		　REPEAT0=も終了と見なします。
JA	ZZZZ010241	13530		　=以降は最初の空白以降は全て備考とみなします。
JA	ZZZZ010241	13540		4.08.2)**-次のREPEAT0=まで初期値を１づつ加算し繰り返します。
JA	ZZZZ010241	13550		*** REPEAT0=[終了値][,初期値] [備考] (V7.23)
JA	ZZZZ010241	13560		  行中の"$$"を数値"$-"を数値-1を"$+"を数値+1で置き換えます。
JA	ZZZZ010241	13570		  REPEAT=がこの中で使えます。
JA	ZZZZ010241	13580		　=以降は最初の空白以降は全て備考とみなします。
JA	ZZZZ010241	13590		4.08.3)**-REPEAT=内で更に繰り返しをします。
JA	ZZZZ010241	13600		*** REPEAT2=[終了値][,初期値] [備考]
JA	ZZZZ010241	13610		  行中の"$$"を数値"$-"を数値-1を"$+"を数値+1で置き換えます,
JA	ZZZZ010241	13620		  ただし、REPEAT0=の中ではREPEAT0=の数値が優先されます。
JA	ZZZZ010241	13630		  次のREPEAT=,REPEAT0=も終了とみなします。
JA	ZZZZ010241	13640		　=以降は最初の空白以降は全て備考とみなします。
JA	ZZZZ010241	13650		4.09.1)**-次のNAME=までの行に名前を付けます。
JA	ZZZZ010241	13660		*** NAME=[名前] [備考]
JA	ZZZZ010241	13670		  名前なしの場合は名前の終了です。
JA	ZZZZ010241	13680		  =と名前の間に空白を入れないで下さい。（空白以降は備考）
JA	ZZZZ010241	13690		4.09.2)**-NAME=の中で更に名前を部分設定します。
JA	ZZZZ010241	13700		*** NAME2=[名前] [備考]
JA	ZZZZ010241	13710		　NAME=も終了と見なします。
JA	ZZZZ010241	13720		  =と名前の間に空白を入れないで下さい。（空白以降は備考）
JA	ZZZZ010241	13730		4.09.3)**-この位置に名前で指定された行を単純にコピーします。
JA	ZZZZ010241	13740		*** COPY=名前 [備考]
JA	ZZZZ010241	13750		    名前はすでに前方で設定されている必要があります。
JA	ZZZZ010241	13760		    名前の先頭に'@'を付けた場合は本番用データベース上の
JA	ZZZZ010241	13770		  ZZZZZZ_ETC_TABLEのZZZZZZ_KEY1='ZZZZZZ_COPY'で設定されている
JA	ZZZZ010241	13780		  ZZZZZZ_KEY2の先頭25文字と一致する物をCOPYします。(VER7.26)
JA	ZZZZ010241	13790		4.10.1)**-COMMENT_ENDまで備考とみなし行を採用しません。
JA	ZZZZ010241	13800		*** COMMENT_BEGIN [備考]
JA	ZZZZ010241	13810		4.10.2)**-COMMENT2_ENDまで備考とみなし行を採用しません。
JA	ZZZZ010241	13820		*** COMMENT2_BEGIN [備考]                       (VER8.10)
JA	ZZZZ010241	13830		    COMMENT_ENDが現れた場合も備考の終了となります。
JA	ZZZZ010241	13840		4.10.3)**-備考（COMENNT_BEGINとCOMMENT2_END)の終了です。
JA	ZZZZ010241	13850		*** COMMENT_END [備考]
JA	ZZZZ010241	13860		4.10.4)**-備考（COMENNT2_BEGIN)の終了です。
JA	ZZZZ010241	13870		*** COMMENT2_END [備考]                        (VER8.10)
JA	ZZZZ010241	13880		===========================================================
JA	ZZZZ010241	13890		5)**-定義命令
JA	ZZZZ010241	13900		5.00)**-時間起動ジョブではCONTROL=と=のみ使えます。
JA	ZZZZ010241	13910		5.01)**-プログラムの種類とテーブル名を指定します。
JA	ZZZZ010241	13920		*** PROGRAM=[処理種類][,&テーブル別名,テーブル名]
JA	ZZZZ010241	13930		*** FROM=&テーブル別名,テーブル名] (VER6.2)
JA	ZZZZ010241	13940		  OUTPUT-データの検索処理(画面に表示）をするプログラム。
JA	ZZZZ010241	13950		  INPUT--データの更新処理(削除,作成,修正)をするプログラム。
JA	ZZZZ010241	13960		  NOT--検索処理でも更新処理でもないプログラム。
JA	ZZZZ010241	13980		  メニュー起動の処理種類は省略できます。（メニュー設定値）
JA	ZZZZ010241	13990		　ファイル起動の処理種類は省略できます。（NOTと判定）
JA	ZZZZ010241	14000		  処理種類がOUTPUT,INPUT,NOT,省略以外はNOTと判定します。V36
JA	ZZZZ010241	14010		  テーブル名を指定するとINPUTの更新処理テーブルとなります。
JA	ZZZZ010241	14020		  テーブル別名は"&X1"とする事を推奨します。
JA	ZZZZ010241	14030		  テーブル別名の先頭には"&"を必ず付けて下さい。
JA	ZZZZ010241	14040		  テーブル別名が空白の時は&X1とみなします。 VER18.1
JA	ZZZZ010241	14050		  PROGRAM=は時間起動処理では使えません。
JA	ZZZZ010241	14060		  FROM=は時間起動処理以外で使えません。
JA	ZZZZ010241	14070		5.02)**-プログラムを制御する場合に使用します。
JA	ZZZZ010241	14080		*** CONTROL=制御
JA	ZZZZ010241	14090		  複数指定する場合はカンマで区切ります。
JA	ZZZZ010241	14100		  0--選択でそのデータを選択し次のプログラムに移ります。
JA	ZZZZ010241	14110		  1--削除の機能を抑止します。
JA	ZZZZ010241	14120		  1_PROGRAM--削除処理を迂回します。 （VER8.3)
JA	ZZZZ010241	14130		  1_TABLE--削除時別テーブルにキー情報があるか確認します。
JA	ZZZZ010241	14140		　（VER4より有効）
JA	ZZZZ010241	14150		  2--作成の機能を抑止します。
JA	ZZZZ010241	14160		  2_PROGRAM--作成処理を迂回します。 （VER8.3)
JA	ZZZZ010241	14170		  2_KEY--作成時キー項目による存在確認処理を迂回します。
JA	ZZZZ010241	14180		     (属性２がO「入力しない」、N「非表示」の時は迂回します）
JA	ZZZZ010241	14190		  3--修正の機能を抑止します。
JA	ZZZZ010241	14200		  3_PROGRAM--修正処理を迂回します。（VER8.3)
JA	ZZZZ010241	14210		  BEGIN_ENTER--最初に「Enter」を実行します。
JA	ZZZZ010241	14220		  CUBE--_DBがI,M,O,Pの時_GROUP1に"CUBE("を付加し,付加した時
JA	ZZZZ010241	14230		        _ORDER1を")"とし_ORDER2以降は空白とします。VER22.1
JA	ZZZZ010241	14240		           (注意:MariaDBでは動きません）
JA	ZZZZ010241	14250		  ERROR--エラー発生時命令が無くても異常終了せず。
JA	ZZZZ010241	14260		 （通常は命令がないと異常終了します）
JA	ZZZZ010241	14270		  (「@データ名」が無くてもエラーにしません）
JA	ZZZZ010241	14280		  ERROR_SQL--SQL=でエラー発生時異常終了せず。
JA	ZZZZ010241	14290		  IF_ERROR--VER16以前のエラー時セミコロンまで移動で動きます。
JA	ZZZZ010241	14300		  JUDGE--「PROGRAM=NOT」で更新確認を迂回します。
JA	ZZZZ010241	14310		  MAX--SQL=により表示された行のみ操作できます。
JA	ZZZZ010241	14320		  PROGRAM--「PROGRAM=INPUT」と「NOT」の場合更新処理を迂回。
JA	ZZZZ010241	14330		　PROGRAM_ERROR-更新処理でレコード無しに関係なく処理します。
JA	ZZZZ010241	14340		　　　　　　　　削除でレコード無し--何もしないで終了。
JA	ZZZZ010241	14350		  　　　　　　　修正でレコード無し--作成して終了。
JA	ZZZZ010241	14360		　  　　　　　　作成でレコード有り--修正して終了。
JA	ZZZZ010241	14370		  PROGRAM_TEST-本番処理でテストテーブルにも更新処理を実行。
JA	ZZZZ010241	14380		  (STOP_...処理もreal_testを'TEST'で実行後本番処理をします）
JA	ZZZZ010241	14390		  RESTORE_DB--SQL=D(Firebird)とI(DB2)に対しSQL=の
JA	ZZZZ010241	14400		     データベース名に_RESTORE_DBを付加します。 (VER18.1)
JA	ZZZZ010241	14410		  ROLLUP--_DBがI,M,O,Pの時_GROUP1に"ROLLUP("を付加し,付加した
JA	ZZZZ010241	14420		        _ORDER1を")"とし_ORDER2以降は空白とします。VER22.1
JA	ZZZZ010241	14430		  SAME--データ辞書のテーブルとPROGRAM=のテーブル名が同じ
JA	ZZZZ010241	14440		        場合でもチェックの対象とします。
JA	ZZZZ010241	14450		 　★注意:SAMEを指定した以降のTABLE=とDICTIONARY=で有効です。
JA	ZZZZ010241	14460		  SCROLL--画面１行表示不可の時横スクロールで１行表示します。
JA	ZZZZ010241	14470		          未記入で１画面に入り切らない時横スクロールします。
JA	ZZZZ010241	14480		  SMTP--SMTP命令で確認画面を表示しません。
JA	ZZZZ010241	14490		　WIDTH--画面横幅を８０文字で固定します。
JA	ZZZZ010241	14500		　HIGH--画面縦幅を２５行で固定とします。
JA	ZZZZ010241	14510		◆以下はメニューの認証方法が'A'か許可が'ZZZZ'の時有効です。
JA	ZZZZ010241	14520		　(VER8.3で条件変更）
JA	ZZZZ010241	14530		  SQL_DBO--SQL=をDユーザ(管理者)で実行します。
JA	ZZZZ010241	14540		             (SQL_Dも同じです。VER8)
JA	ZZZZ010241	14550		　SQL_OUT--SQL=をOユーザで実行します。
JA	ZZZZ010241	14560		             (SQL_Oも同じです。VER8)
JA	ZZZZ010241	14570		　SQL_LOGIN--SQL=をLOGINユーザで実行します。
JA	ZZZZ010241	14580		　SQL_TEST--SQL=をテスト環境で実行します。
JA	ZZZZ010241	14590		5.03)**-表示のライン数を指定値で固定します。
JA	ZZZZ010241	14600		*** LINE=行数
JA	ZZZZ010241	14610		5.04.1)**-検索で各結合方法でJOINをします。
JA	ZZZZ010241	14620		*** INNER=&テーブル別名,テーブル名[,&相手別名,インデックス]
JA	ZZZZ010241	14630		*** LEFT=&テーブル別名,テーブル名[,&相手別名,インデックス]
JA	ZZZZ010241	14640		*** RIGHT=&テーブル別名,テーブル名[,&相手別名,インデックス]
JA	ZZZZ010241	14650		*** FULL=&テーブル別名,テーブル名[,&相手別名,インデックス]
JA	ZZZZ010241	14660		*** INNER2=&テーブル別名,テーブル名[,&相手別名,インデックス]
JA	ZZZZ010241	14670		*** LEFT2=&テーブル別名,テーブル名[,&相手別名,インデックス]
JA	ZZZZ010241	14680		*** RIGHT2=&テーブル別名,テーブル名[,&相手別名,インデックス]
JA	ZZZZ010241	14690		*** FULL2=&テーブル別名,テーブル名[,&相手別名，インデックス]
JA	ZZZZ010241	14700		*** COMMA=&テーブル別名,テーブル名        (VER7.30)
JA	ZZZZ010241	14710		   2が付いている物は条件判定でZ_CANCEL=' ' を付けません。
JA	ZZZZ010241	14720		   インデックスが'*'の場合ONのキー比較を付けません。(VER7.23)
JA	ZZZZ010241	14730		   (注意：MariaDB(L)の場合FULL,FULL2は動きません）
JA	ZZZZ010241	14740		5.04.2)**-相手のJOINキー名が異なる場合に指定します。
JA	ZZZZ010241	14750		*** JOIN_KEY=相手一致キー名[,...]
JA	ZZZZ010241	14760		  COMMA=では記入出来ません。
JA	ZZZZ010241	14770		5.04.3)**-JOIN ON に追加する条件を書きます。
JA	ZZZZ010241	14780		*** JOIN_ON=比較条件   (VER7.23で追加、JOIN_WHERE改名）
JA	ZZZZ010241	14790		  COMMA=では記入出来ません。
JA	ZZZZ010241	14800		5.04.4)**-テーブル情報を設定します。
JA	ZZZZ010241	14810		*** TABLE=&テーブル別名,テーブル名
JA	ZZZZ010241	14820		  テーブル別名は先頭に"&"を必ず付けて下さい。
JA	ZZZZ010241	14830		5.04.5)**-列情報を設定します。
JA	ZZZZ010241	14840		*** DICTIONARY=列名,...
JA	ZZZZ010241	14850		  (VER3以降は複数指定可能です）
JA	ZZZZ010241	14860		5.05.1)**-開始時に実行する命令群を以下に記入します。
JA	ZZZZ010241	14870		*** BEGIN [備考]
JA	ZZZZ010241	14880		5.05.2)**-開始と終了時に実行する命令群を以下に記入します。
JA	ZZZZ010241	14890		*** BEGIN_END [備考]
JA	ZZZZ010241	14900		5.05.3)**-更新または選択開始時に実行する命令群を記入します。
JA	ZZZZ010241	14910		*** START [備考]
JA	ZZZZ010241	14920		5.05.4)**-更新前に実行する命令群を以下に記入します。
JA	ZZZZ010241	14930		*** STOP_BEFORE [備考]
JA	ZZZZ010241	14940		  (VER5以降有効）
JA	ZZZZ010241	14950		  開始前にSQL{BEGIN TRANSACTION};が実行されています。
JA	ZZZZ010241	14960		5.05.5)**-更新後に実行する命令群を以下に記入します。
JA	ZZZZ010241	14970		*** STOP_AFTER [備考]
JA	ZZZZ010241	14980		  (VER5以降有効、STOPも可であるがVER4以前と互換のため）
JA	ZZZZ010241	14990		  終了後にSQL{COMMIT TRANSACTION};が実行されています。
JA	ZZZZ010241	15000		5.05.6)**-終了時に実行する命令群を以下に記入します。
JA	ZZZZ010241	15010		*** END [備考]
JA	ZZZZ010241	15020		　選択で次のプログラムに行くときはEND処理はしません。
JA	ZZZZ010241	15030		　(注意：プログラムでエラーが発生しても無視され
JA	ZZZZ010241	15040		　       エラー以降の処理は実行されません）
JA	ZZZZ010241	15050		5.05.7)**-DATA=の表示に色を設定する処理を記入します。
JA	ZZZZ010241	15060		*** COLOR [備考]
JA	ZZZZ010241	15070		  SET=の表示はセクション内でプログラムしてください。
JA	ZZZZ010241	15080		5.06.1.1)**-INPUTとOUTPUTで検索前に入力や表示をします。
JA	ZZZZ010241	15090		-------------
JA	ZZZZ010241	15100		*** SET=[{属性}]データ名{定義}[{チェック1}[{チェッ2}
JA	ZZZZ010241	15110		 [{メッセージ}[{?CHECK?}[{?CHECK61?}[{LEFTのSQL文 }]]]]]]
JA	ZZZZ010241	15120		 [{{命令群}}][タイトル]
JA	ZZZZ010241	15130		     画面表示は最大で10行分表示までです。
JA	ZZZZ010241	15140		     一行に書く必要がありますが全てを書く事は文字数が少ないで
JA	ZZZZ010241	15150		     出きません、?データ名?で与える場合を想定した文法です。
JA	ZZZZ010241	15160		     SET=のデータ名はDATA=のデータ名と区別するため,基本の命名
JA	ZZZZ010241	15170		       方法は'S'+別名+'.'+列名(先頭にSを付ける)とします,
JA	ZZZZ010241	15180		       (別名は2文字以上でS以外にEとTも使えます)VER28.1,36.6.6
JA	ZZZZ010241	15190		       尚,別名がPROGRAM=で指定した別名はSも含めて省略出来,
JA	ZZZZ010241	15200		       '.'+列名とする事が出来ます。(VER36.6.0.6)
JA	ZZZZ010241	15210		     PROGRAM=NOTでは使用出来ません。
JA	ZZZZ010241	15220		5.06.1.2)**-検索の表示、更新の入力として使用します。
JA	ZZZZ010241	15230		*** DATA=[{属性}]データ名{定義}[{チェック1}[{チェッ2}
JA	ZZZZ010241	15240		 [{メッセージ}[{?CHECK?}[{?CHECK61?}[{{LEFTのSQL文}]]]]]]
JA	ZZZZ010241	15250		 [{{命令群}}][タイトル]
JA	ZZZZ010241	15260		     DATA=のデータ名の基本の命名方法は別名+'.'+列名とします,
JA	ZZZZ010241	15270		       尚、別名がPROGRAM=で指定した別名は省略出来,
JA	ZZZZ010241	15280		       列名とする事が出来ます。(VER36.6.0.6)
JA	ZZZZ010241	15290		5.06.1.3)**-SET=でもDATA=でも無い作業用です。（時間起も可能）
JA	ZZZZ010241	15300		*** WORK=データ名{定義}
JA	ZZZZ010241	15310		　（WORKはVER5以上）
JA	ZZZZ010241	15320		5.06.1.4)**-SET=,DATA=,WORK=共通の説明です。
JA	ZZZZ010241	15330		　画面の表示又は更新の表示上の文字長は最大８０文字までです。
JA	ZZZZ010241	15340		 「$データ名」は前のプログラムの同名のデータが初期値です。
JA	ZZZZ010241	15350		　 (PROGRAM=INPUT,OUTPUTのDATA=では使えません）
JA	ZZZZ010241	15360		  （このデータのデータ名は$を除いた名前となります）
JA	ZZZZ010241	15370		 「データ名=データ名2」とすると前のプログラムのデータ名2
JA	ZZZZ010241	15380		   が初期値に成ります。(VER36.6.0.3)
JA	ZZZZ010241	15390		  (「.=?&.SET&データ名?」の場合は特別に
JA	ZZZZ010241	15395		             「.データ名」の初期値が「$データ名」に成ります)
JA	ZZZZ010241	15400		  (「データ名=?&.DATA2&データ名2?」の場合は特別に
JA	ZZZZ010241	15410		  　　　　　　「データ名」の初期値が「$データ名2」に成ります)
JA	ZZZZ010241	15460		●属性:
JA	ZZZZ010241	15470		　属性は
JA	ZZZZ010241	15480		 {[属性1][属性2][属性3][属性4][属性5],[別名],[右空白数],[色]}
JA	ZZZZ010241	15490		 　を指定。
JA	ZZZZ010241	15500		  (属性1と属性2,3,4,5の間にはコンマが無いので注意の事）
JA	ZZZZ010241	15510		　属性無しの時は省略できます。
JA	ZZZZ010241	15520		  属性1が"K"はキーデータで更新時のキーになります,SET=でも可。
JA	ZZZZ010241	15530		　(SET=の時属性3が無くても一致比較(=)になります）(VER22.1)
JA	ZZZZ010241	15540		  属性1が"*"は更新対象になりません,SET=は不要です。
JA	ZZZZ010241	15550		  属性2が"O"は更新時入力対象になりません。
JA	ZZZZ010241	15560		　(SET=の時属性3が無くても一致比較(=)になります）
JA	ZZZZ010241	15570		  属性2が"N"はデータを画面上に表示しません。
JA	ZZZZ010241	15580		  属性2が"/"はEnter以外は入力完了しません、
JA	ZZZZ010241	15590		    (DATA=の最後の入力データは自動的に設定します。)
JA	ZZZZ010241	15600		  属性2が"#"は下矢印キーでの移動を停止します。(VER7.17)
JA	ZZZZ010241	15610		    (SET=の最後の入力データは自動的に設定します。)
JA	ZZZZ010241	15620		  属性2が"!"は最後の'/'や'#'の自動設定を回避します。
JA	ZZZZ010241	15630		  属性3はSET=の場合_WHERE数用で
JA	ZZZZ010241	15640		　 "=","<",">","<=",">=","<>","L","I","E"が設定できます。
JA	ZZZZ010241	15650		　（陽にLIKEとしたい場合は"L","I","E"を設定します
JA	ZZZZ010241	15660		　　"L"は最後に%が付きます、"I"は先頭と最後に%が付きます、
JA	ZZZZ010241	15670		　　"E"は先頭に%が付きます)
JA	ZZZZ010241	15680		  属性3はDATA=の場合_ORDER数用です。 (VER7.23)
JA	ZZZZ010241	15690		    "A"はASENDING,"D"はDESENDINGで_ORDER_COUNTも設定します。
JA	ZZZZ010241	15700		    "C"はCUTで設定しません。
JA	ZZZZ010241	15710		  属性4はDATA=の場合_GROUP数用で (VER7.23)
JA	ZZZZ010241	15720		    "G"を設定すると_GROUP数にデータ名かSELECT=値を
JA	ZZZZ010241	15730		    設定します。
JA	ZZZZ010241	15740		  属性5は数値の1から9までで長さ１を数値分増やします。(V8.6)
JA	ZZZZ010241	15750		  　SET=のセクション開始時点で@WHEREに比較文字を設定します。
JA	ZZZZ010241	15760		  　(データ入力直後に設定されるのでセクション内でデータを
JA	ZZZZ010241	15770		  　 変更しても反映されないので@WHERE自体を変更します）
JA	ZZZZ010241	15780		  @WHEREは文字の場合"データ名 LIKE '?データ名?%"が基本です。
JA	ZZZZ010241	15790		  @WHEREは数値の場合"データ名>=?データ名?"が基本です。
JA	ZZZZ010241	15800		  @WHEREは属性2がOの場合は一致比較が基本です。
JA	ZZZZ010241	15810		  @WHEREはSELECT=が有ると左辺をこの内容で置き換えます。
JA	ZZZZ010241	15820		  　★注意：ただし、データが空白の時は空白となります。
JA	ZZZZ010241	15830		　別名は細かな動きをします。(VER5.11で変更）
JA	ZZZZ010241	15840		　VER6:
JA	ZZZZ010241	15850		　別名は以下のルールで運用します。
JA	ZZZZ010241	15860		　◎データー辞書のCHECKが'SELECT1','SELECT21','SELECT21D'
JA	ZZZZ010241	15870		　  ,'SELECT22','SELECT22D','SECTION1','SECTION2'の場合。
JA	ZZZZ010241	15880		　  (LISTBOX1','LISTBOX21','LISBOX21D,'LISTBOX22','LISTBOX22D
JA	ZZZZ010241	15890		　   は中止 VER22.1)
JA	ZZZZ010241	15900		  　①'&'+別名でデーター辞書の指定が有効となります。
JA	ZZZZ010241	15910		  　  &無しは全てが無効となります。
JA	ZZZZ010241	15920		  　②先頭に'*'を付加した場合は備考項目設定無しとします。
JA	ZZZZ010241	15930		  　  (入力時点でのチェック機能は有効です）
JA	ZZZZ010241	15940		      SET=は実行開始で@WHEREに空白を転送します。
JA	ZZZZ010241	15950		      (_WHERE数の初期値が空白となります）
JA	ZZZZ010241	15960		  　  SELECT2..での_SQL_COMMENT転送命令を無視します。
JA	ZZZZ010241	15970		  　  SECTION2の判定処理で備考項目への転送をしません。
JA	ZZZZ010241	15980		  　  _LEFT数を空白にします。
JA	ZZZZ010241	15990		  　③DATA=で先頭に'@'を付加した場合は_LEFT数を空白とします。
JA	ZZZZ010241	16000		  　④SET=で先頭に'#'を付加した場合は'*'とほぼ同じですが、
JA	ZZZZ010241	16010		   　　 @WHEREに空白を転送する作業は実行しません。
JA	ZZZZ010241	16020		 ◎データー辞書のCHECKが'CHECK[1]','CHECK2','SECTION'の場合。
JA	ZZZZ010241	16030		  　①'@'が有るとデーター辞書の指定が無効となります。
JA	ZZZZ010241	16040		  　  (DATA=内で指定した内容を無視する）(VER7.31)
JA	ZZZZ010241	16050		    ②SET=は'*'が有ると@WHEREに空白を転送します。
JA	ZZZZ010241	16060		　右空白数は初期１です、２以上を指定下さい。
JA	ZZZZ010241	16070		　色はW(白        ,R255G255B255)
JA	ZZZZ010241	16080		   　,Y(黄色      ,R255G255B128)
JA	ZZZZ010241	16090		   　,E(茶色      ,R255G192B127)
JA	ZZZZ010241	16100		     ,R(赤        ,R255G128B192）
JA	ZZZZ010241	16110		　   ,L(明るい灰色,R224G224B224）
JA	ZZZZ010241	16120		　   ,P(紫        ,R192G128B255)
JA	ZZZZ010241	16130		　   ,G(緑        ,R128G255B128)
JA	ZZZZ010241	16140		     ,B(青        ,R128G192B255)
JA	ZZZZ010241	16150		   　,D(暗い灰色  ,R128G128B128)
JA	ZZZZ010241	16160		   　,N(背景色)です。
JA	ZZZZ010241	16170		　尚、R数G数B数（数は0から255）での設定も出来ます。（VER7.17)
JA	ZZZZ010241	16180		　    (注意：文字の色は変更出来ません）
JA	ZZZZ010241	16190		●定義：
JA	ZZZZ010241	16200		  定義は{[長さ1],[長さ2],[型1],[型2]｝を指定。
JA	ZZZZ010241	16210		  長さ１は数値の場合有効桁数です。
JA	ZZZZ010241	16220		                 （画面表示幅は計算されます）
JA	ZZZZ010241	16230		  長さ１は数値以外の場合画面上の表示幅の文字数です、
JA	ZZZZ010241	16240		　　　　ただし、型１がDとTとEは標示幅が補正されます。
JA	ZZZZ010241	16250		　　　　★注意:全角文字は２文字として計算して下さい。
JA	ZZZZ010241	16260		  長さ2は型が数値は小数点以下の桁数で,数値以外は最小文字数。
JA	ZZZZ010241	16270		  型1が数値でない時,型2に"I"を記入すると"I"と"O"が入力不可。
JA	ZZZZ010241	16280		  型1が数値でない時,型2に"L"を記入すると,英小文字も可。
JA	ZZZZ010241	16290		  型1が数値でない時,型2に"R"を記入すると,英小文字も可ですが、
JA	ZZZZ010241	16300		      大文字は小文字に、小文字は大文字に変換します。VER15.1
JA	ZZZZ010241	16310		  型1が数値でない時,型2に"K"を記入すると,かな文字も可。
JA	ZZZZ010241	16320		  型1が数値でない時,型2に"*"を記入すると非表示(*表示)。
JA	ZZZZ010241	16330		  型1が数値でない時,型2に"#"を記入すると"L"+"*"となります。
JA	ZZZZ010241	16340		  型1が数値でない時,型2に"X"を記入すると"{"と"}"が入力不可。
JA	ZZZZ010241	16350		  型1が"9"場合は数字のみ入力可能。（数値としては扱いません）
JA	ZZZZ010241	16360		  型１を一覧で説明します。
JA	ZZZZ010241	16370		　☆ 注意:型1,2は入力データの判定のみで使用します、
JA	ZZZZ010241	16380		　　　　　したがって,SET等転送命令では判定されません。
JA	ZZZZ010241	16390		　☆ 注意:型1が!以外は英小文字
JA	ZZZZ010241	16400		　　　　　　　　　,カタカナは型2の指定が無いと使えません。
JA	ZZZZ010241	16410		　☆ 注意:互換とは汎用機(EBCDIC)との変換が問題なく行えます。
JA	ZZZZ010241	16420		 （互換）     9.  　+--正の数値  （０は非表示）
JA	ZZZZ010241	16430		                       (型2がZ,Eは'0'も表示） (EはVER6)
JA	ZZZZ010241	16440		                       (型2がC,Eは','を非表示)(EはVER6)
JA	ZZZZ010241	16450		 （互換）     9.- 　--正負の数値（０は非表示）
JA	ZZZZ010241	16460		                       (型2がZ,Eは'0'も表示)  (EはVER6)
JA	ZZZZ010241	16470		                       (型2がC,Eは','を非表示)(EはVER6)
JA	ZZZZ010241	16480		 （互換）     9   　D--年月日(CHAR(8)）
JA	ZZZZ010241	16490		　　　   　　　（"@ZZZZZZ_DATE_言語"の値で表示方法が異る）
JA	ZZZZ010241	16500		 　　　　　   　　　　（Y-はYYYY-MM-DDで表示、初期値）
JA	ZZZZ010241	16510		 　　　　　   　　　　（M-はMM-DD-YYYYで表示）
JA	ZZZZ010241	16520		 　　　　　   　　　　（D/はDD/MM/YYYYで表示）
JA	ZZZZ010241	16530		 （互換）     9   　E--時間(DATETIME用)
JA	ZZZZ010241	16540		                    F--FLOAT（浮動少数数点）。
JA	ZZZZ010241	16550		 （互換）     9     T--時間(CHAR(17))
JA	ZZZZ010241	16560		 （互換）     9   　9--数字のみ（０から９）
JA	ZZZZ010241	16570		                       （注意：型は数値ではありません）
JA	ZZZZ010241	16580		 （互換）    A9   　A--英字と数字のみ
JA	ZZZZ010241	16590		 （互換）(特)A9.- 　B--バーコード３９対象文字
JA	ZZZZ010241	16600		 （互換）    A9 - 　C--CODE用ASCII文字(英字と数字とハイフ)
JA	ZZZZ010241	16610		       　 空%A9.-   H--半角文字全て。
JA	ZZZZ010241	16620		       　   %A9.-   I--ファイル名に出来る半角文字全て。
JA	ZZZZ010241	16630		　　　 　　　　　　　　( :\/*?"<>|'を除く)
JA	ZZZZ010241	16640		        全      　　J--全角文字のみ。(IME付き)
JA	ZZZZ010241	16650		（互換）    _A9   　M--英字データ名用。
JA	ZZZZ010241	16660		                   　　(英字,数字,アンダーバー）
JA	ZZZZ010241	16670		　　　　　　　　　　　（先頭に数字とアンダーバーは設定不可）
JA	ZZZZ010241	16680		        全  _A9   　N--全角文字含む英字データ名用。
JA	ZZZZ010241	16690		 （互換） 空%A9.- 　S--汎用機（EBCDIC)互換半角文字。
JA	ZZZZ010241	16700		                       (DATA=で空白の場合Sと同じになります)
JA	ZZZZ010241	16710		 （互換）   %A9.- 　U--空白除く汎用機（EBCDIC)互換半角文字。
JA	ZZZZ010241	16720		            %A9.- 　V--空白除く半角文字。
JA	ZZZZ010241	16730		 （互換）    A  　　Z--英字のみ
JA	ZZZZ010241	16740		 　　   全空%A9.- 　* --全角文字含む全ての文字。(IME付き)
JA	ZZZZ010241	16750		        全空%A9.- 　/--全角文字含む全ての文字。(IME無）
JA	ZZZZ010241	16760		                       (SET=で空白の場合／と同じになります)
JA	ZZZZ010241	16770		        全空%A9.- 　!--無条件で全ての文字。(IME無)
JA	ZZZZ010241	16780		　　　　　　　　　　　（★注意: 英小文字,半角カナも可能））
JA	ZZZZ010241	16790		        全空%A9.- 　:--ファイル名として使える文字。(IME無）
JA	ZZZZ010241	16800		
JA	ZZZZ010241	16810		  チェック1,チェック2,メッセージ,タイトルは下と同じ意味です。
JA	ZZZZ010241	16820		（通常は1行に書き切れないのでディクショナリからの設定用です）
JA	ZZZZ010241	16830		（タイトルが無い場合はデータ名を採用）
JA	ZZZZ010241	16840		5.06.2.1)**-カンマ区切りで値を一致または範囲判定します。
JA	ZZZZ010241	16850		*** CHECK[1]=値1,値2,(値1,値2),(値1,値2),...(CHECK=はV14.1)
JA	ZZZZ010241	16860		  　 値1,値2で一致判定をします。     (値1か値2はOK)
JA	ZZZZ010241	16870		    （値1,値2）で範囲判定をします。  (値1から値2までOK)
JA	ZZZZ010241	16880		     CHECK2=が有るとCHECK2側が有効となります。
JA	ZZZZ010241	16890		     指定するとSET=,DATA=の設定値が置き換えられます。
JA	ZZZZ010241	16900		5.06.2.2)**-値と説明の繰り返しで一致判定をします。
JA	ZZZZ010241	16910		*** CHECK2=値1,説明1,値2.説明2,...
JA	ZZZZ010241	16920		 「SELECT 」で始まっている場合はSQLを実行します。
JA	ZZZZ010241	16930		 「SELECT 」の場合は説明が無くても動きます。（列名１個）
JA	ZZZZ010241	16940		 「SELECT 」の場合でデータが１件も無い場合は次に行けません。
JA	ZZZZ010241	16950		  指定するとSET=,DATA=の設定値が置き換えられます。
JA	ZZZZ010241	16960		5.06.2.3)入力時に文字の判定をします。
JA	ZZZZ010241	16970		*** INPUT=入力文字チェックプログラム (VER8.4)
JA	ZZZZ010241	16980		  _INPUTの入力文字で判定し,エラーの時はERRORを実行します。
JA	ZZZZ010241	16990		5.06.2.4)**-入力時に画面の２行目にメッセージを表示します。
JA	ZZZZ010241	17000		*** MESSAGE=メッセージ
JA	ZZZZ010241	17010		  指定するとSET=,DATA=の設定値が置き換えられます。
JA	ZZZZ010241	17020		  START内でも指定出来ます。　VER23.1
JA	ZZZZ010241	17030		5.06.2.5)**-見出として表示します。
JA	ZZZZ010241	17040		*** TITLE=タイトル
JA	ZZZZ010241	17050		  指定するとSET=,DATA=の設定値が置き換えられます。
JA	ZZZZ010241	17060		5.06.2.6)**-_SELECT数?と?_GROUP数?の値を式として設定します。
JA	ZZZZ010241	17070		*** SELECT=式
JA	ZZZZ010241	17080		-------------
JA	ZZZZ010241	17090		5.07)**-INPUTとOUTPUTで検索（SELECT)するSQL文を記入します。
JA	ZZZZ010241	17100		*** SQL=ＳＱＬ文
JA	ZZZZ010241	17110		5.08)**-命令を記入します。
JA	ZZZZ010241	17120		*** =命令群
JA	ZZZZ010241	17130		  DATA=,SET=,SQL=,BEGIN,START,STOP_BEFORE,STOP_AFTR,END
JA	ZZZZ010241	17140		　,BEGIN_END,COLORの下に記入できます。
JA	ZZZZ010241	17150		　DATA=やSET=は上から順番に必ず実行するので、上に指定されてい
JA	ZZZZ010241	17160		　るデータ名の内容は確定している事として使えます。
JA	ZZZZ010241	17170		　更新ではDATA=の命令が条件により下記のように実行されません。
JA	ZZZZ010241	17180		     　           作成 修正 削除  (×＝実行しない）
JA	ZZZZ010241	17190		     キー項目　 　 ○   ×   ×
JA	ZZZZ010241	17200		     キー項目以外  ○   ○   ×
JA	ZZZZ010241	17210		5.09.1)**-画面の１行の左側をデザイン、先頭から表示しします。
JA	ZZZZ010241	17220		*** FORM[1]=画面                 (FROM=はVER14.1)
JA	ZZZZ010241	17230		  通常は使用しませんが,陽に画面を構成したい場合使用します。
JA	ZZZZ010241	17240		  データの位置は"@"の連続で指定します。
JA	ZZZZ010241	17250		  DATA=の属性2が"N"の場合は@は不要です。
JA	ZZZZ010241	17260		　右の空白は無視します,空白が必要な場合は?_?等を記入します。
JA	ZZZZ010241	17270		5.09.2)**-FORM[1]同じですが、繰り返しの先頭位置の指定します。
JA	ZZZZ010241	17280		*** FORM0=画面
JA	ZZZZ010241	17290		　(通常は最初に"@"が現れた行を繰り返しの先頭位置にします）
JA	ZZZZ010241	17300		5.09.3)**-右側残りの位置を構成し表示します。
JA	ZZZZ010241	17310		*** FROM2=画面
JA	ZZZZ010241	17320		5.10)**-表示データ位置でクリックした時の命令を記入します。
JA	ZZZZ010241	17330		*** CLICK=命令群
JA	ZZZZ010241	17340		5.11)**-_SELECT1のSELECTと式の間にこの文字を追加します。
JA	ZZZZ010241	17350		*** SQL_SELECT=DISTINCT等 (VER7.23)
JA	ZZZZ010241	17360		===========================================================
JA	ZZZZ010241	17370		6)**-命令
JA	ZZZZ010241	17380		☆☆下記内容はVER16以前の仕様でVER17以降ではCONTROL=IF_ERROR
JA	ZZZZ010241	17390		    を付けた場合の動きと成ります。(VER17で全面改訂）
JA	ZZZZ010241	17400		   (☆CONTROL=IF_ERRORが有る時で..;..か;が無い命令で
JA	ZZZZ010241	17410		    エラーがない時";"（セミコロン）まで移動します。
JA	ZZZZ010241	17420		    ☆エラーで;まで移動しない場合命令が無いと異常終了します
JA	ZZZZ010241	17430		    異常終了を無視する場合は陽にNOP{}を付加して下さい。
JA	ZZZZ010241	17440		    ★CONTINUE_を命令の先頭につけるとエラー無しで;に行く
JA	ZZZZ010241	17450		    命令が;に行かないで,すぐ後を続けて実行します。尚、
JA	ZZZZ010241	17460		    エラーが発生してた場合は異常終了となります。 VER15.1)
JA	ZZZZ010241	17470		☆命令は";"で区切ることを推奨します。(;は余分に有っても無視)
JA	ZZZZ010241	17480		☆IF_ERROR_を命令の先頭につけるとエラーが無い時セミコロン(;)
JA	ZZZZ010241	17490		  まで移動します。ただし、BACK,EXIT,IF,JUMPで始まるか
JA	ZZZZ010241	17500		  _NEXTで終わる命令には使えません。VER17
JA	ZZZZ010241	17510		☆RESTORE_DB_を命令の先頭につけるとD(Firebird)とI(DB2)に対し
JA	ZZZZ010241	17520		  _RESTORE_DBをデータベース名に付加します。(VER18.1)
JA	ZZZZ010241	17530		☆認証がAか許可がZZZZの時命令の先頭に下記を付加出来ます。
JA	ZZZZ010241	17540		★DBO_を命令の先頭につけると--Dユーザで実行します。
JA	ZZZZ010241	17550		  (尚,メニューの処理種類がOUTPUTと認証がXは使えません)VER25.1
JA	ZZZZ010241	17560		★LOGIN_を命令の先頭につけると-LOGINユーザで実行します。
JA	ZZZZ010241	17570		★OUT_を命令の先頭につけると--Oユーザで実行します。
JA	ZZZZ010241	17580		☆命令の区切りは"{*:;"で判定し"{"の時は"}"まで判定しません,
JA	ZZZZ010241	17590		　ただし"}"判定時"'"を発見した場合は次の"'"まで判定しません。
JA	ZZZZ010241	17600		☆注意：SQL=の下の命令は操作直後にも実行されます。
JA	ZZZZ010241	17610		6.00)**-アスタリスク(*)が最後の場合は備考と見なします。
JA	ZZZZ010241	17620		*** 備考*
JA	ZZZZ010241	17630		6.01)**-名札を指定します。
JA	ZZZZ010241	17640		*** 名札:
JA	ZZZZ010241	17650		6.02)**-前方の直近の名札に移動します。
JA	ZZZZ010241	17660		***=BACK{[名札]}
JA	ZZZZ010241	17670		     名札が空白の場合は前方のセミコロンまで移動します。(VER17
JA	ZZZZ010241	17680		6.03)**-バッチファイルを実行します。
JA	ZZZZ010241	17690		***=BAT_SERVER{バッチファイル[,パラメータ]} <新>
JA	ZZZZ010241	17700		  実行結果のエラーの判定を作業ディレクトリ上の
JA	ZZZZ010241	17710		  ?_WORK?.EXITで判定するので正常終了時はバッチファイル
JA	ZZZZ010241	17720		  内で!!!と書き換えて下さい。(VER17)
JA	ZZZZ010241	17730		   (WINDOWS=%SYSTEMDRIVE%\I\I.%4\TMP_%3\%5.EXIT)
JA	ZZZZ010241	17740		   (LINUX=/home/I/I.%4/TMP_%3/%5.EXIT)
JA	ZZZZ010241	17750		  文字列に"../"又は"..\"が有るとエラーになります。
JA	ZZZZ010241	17760		  パラメータは先頭に無条件で下記５個が付加されます。(VER17)
JA	ZZZZ010241	17770		    ?_IV? ?_LANG_SYSTEM? ?_REAL? ?_SYSTEM? ?_WORK?
JA	ZZZZ010241	17780		  ☆メニュー起動ジョブでは使えません。
JA	ZZZZ010241	17790		  ☆ファイル起動ジョブでは使えません。
JA	ZZZZ010241	17800		6.04)**-ビープ音を出します。
JA	ZZZZ010241	17810		***=BEEP{}
JA	ZZZZ010241	17820		6.05)**-システムコマンドを実行し、終了を待ちます。
JA	ZZZZ010241	17830		***=COMMAND{システムコマンド名 パラメータ}
JA	ZZZZ010241	17840		　☆時間起動ジョブでは使えません。
JA	ZZZZ010241	17850		　コマンドにエラーが有っても無視さるので注意して下さい。VER18
JA	ZZZZ010241	17860		6.06)**-計算をします。
JA	ZZZZ010241	17870		***=COMPUTE{左辺データ=右辺データ1+右辺データ2,..}
JA	ZZZZ010241	17880		***=COMPUTE{左辺データ+=右辺データ,..}
JA	ZZZZ010241	17890		***=COMPUTE_CUT{左辺データ=右辺データ1+右辺データ2,..}
JA	ZZZZ010241	17900		***=COMPUTE_CUT{左辺データ+=右辺データ,..}
JA	ZZZZ010241	17910		  +=は最初に自分を計算対象にします。
JA	ZZZZ010241	17920		  演算子は+以外に-(減算),*（掛け算),/（割り算）
JA	ZZZZ010241	17930		  %（割り算の余り,VER7.31）が出来ます。
JA	ZZZZ010241	17940		  左辺が数値の時COMPUTEは四捨五入します。
JA	ZZZZ010241	17950		  左辺が数値の時COMPUTE_CUTは切捨てます。
JA	ZZZZ010241	17960		　左辺が文字の時は結果をそのままとします。（VER5以降）
JA	ZZZZ010241	17970		6.07)**-ファイルをコピーします。
JA	ZZZZ010241	17980		***=COPY_FILE{転送先ファイル名,転送元ファイル名}  <新>
JA	ZZZZ010241	17990		　★転送先が最初です間違えないようにして下さい。
JA	ZZZZ010241	18000		  ☆時間起動ジョブでは使えません。
JA	ZZZZ010241	18010		  ファイル名のみの場合は作業ディレクトリ上に作ります。
JA	ZZZZ010241	18020		                             (★注意VER36.0006000003で変更)
JA	ZZZZ010241	18030		  ':\/'が含まれていると作業ディレクトリでは無くなります。
JA	ZZZZ010241	18040		6.08)**-旧テーブル名と同じ定義のテーブルを作ります。
JA	ZZZZ010241	18050		***=COPY_TABLE{新テーブル名,旧テーブル名[,NOT又はSQL文} <新>
JA	ZZZZ010241	18060		　NOTを指定するとデータをコピーしません。
JA	ZZZZ010241	18070		  NOTにNOT以外を書くとSQL文に付加します。(テーブル別名はI)
JA	ZZZZ010241	18080		  「NOTかSQL文」が空白の場合全件コピーします。
JA	ZZZZ010241	18090		6.09)**-インデックスを作ります。
JA	ZZZZ010241	18100		***=CREATE_INDEX{テーブル名,インデックス番号,[UNIQUE],   <新>
JA	ZZZZ010241	18110		      キー名,..}
JA	ZZZZ010241	18120		  インデックス番号は数値で0から9までです。
JA	ZZZZ010241	18130		6.10)**-オブジェクトを作ります。
JA	ZZZZ010241	18140		***=CREATE_OBJECT{オブジェクト名,対象,定義}    <新>
JA	ZZZZ010241	18150		　対象はVIEW,FUNC,FUNCTION,PROC,PROCEDURE,TRIG,TRIGGERです。
JA	ZZZZ010241	18160		6.11)**-テーブルを作ります。
JA	ZZZZ010241	18170		***=CREATE_TABLE{テーブル名[,主キー列定義,.]} <新>
JA	ZZZZ010241	18180		*** {[データ定義,.]}
JA	ZZZZ010241	18190		（VER6.2でCREATE_TABLE1の1を取りました、互換の為1も残します)
JA	ZZZZ010241	18200		  先頭にツール使用列を作成します。
JA	ZZZZ010241	18210		 列名に予約語を使うとエラーと成ります。(VER22.1)
JA	ZZZZ010241	18220		　定義は次のようにカンマ区切りで記入します。
JA	ZZZZ010241	18230		　　①列名,長さ１
JA	ZZZZ010241	18240		　　　SQLServerとOracleはNCHARとなります。(VER4以前はCHAR）
JA	ZZZZ010241	18250		    　DB2とPostgreSQLは今まで通りCHAR。
JA	ZZZZ010241	18260		　　②列名,型定義　　　　　　　（長さが不要な物)
JA	ZZZZ010241	18270		      I(INT),F(FLOAT),E(DATETIME),DATE
JA	ZZZZ010241	18280		　　③列名,型定義,長さ　　　 　（長さが１個必要な物)
JA	ZZZZ010241	18290		      C(CHAR),V(VARCHAR),N(NCHAR),NV(NVARCHAR)
JA	ZZZZ010241	18300		      ★注意:全角文字は２文字として長さを計算して下さい。
JA	ZZZZ010241	18310		　　④列名,型定義,長さ１,長さ２（長さが２個必要な物）
JA	ZZZZ010241	18320		      D(DECIMAL)
JA	ZZZZ010241	18330		    ⑤列名,*          (定義情報はディクショナリから設定）
JA	ZZZZ010241	18340		***=CREATE_TABLE2{テーブル名[,主キー列定義,..]}  <新>
JA	ZZZZ010241	18350		    CREATE_TABLEに対し先頭にツール使用列を作成しません。
JA	ZZZZ010241	18360		***=CREATE_TABLE0{テーブル名[,主キー列定義,..]}  <新>
JA	ZZZZ010241	18370		    CREATE_TABLEに対し予約語判定をしません。
JA	ZZZZ010241	18380		6.XX)**-カーソルによるSQL処理を実行します。
JA	ZZZZ010241	18390		***=CURSOR{テーブル名1[,..]}{列名1,[K,A,D,][,..]}
JA	ZZZZ010241	18400		***  {WHERE句}{作業データ定義1[,..]}
JA	ZZZZ010241	18410		***  {キー割れ開始処理}{１件処理}{キー割れ終了処理}
JA	ZZZZ010241	18420		                                                   (VER18.1)
JA	ZZZZ010241	18430		  テーブル名1をカーソル用のテーブルとして使います。
JA	ZZZZ010241	18440		  テーブル名を「_O_TABLE数字」に設定します。
JA	ZZZZ010241	18450		  列名の次のKはキー割れのキー項目の指定です。(ORDER BYも設定)
JA	ZZZZ010241	18460		  キー項目を元に「_O_WHERE[2]」を設定します。
JA	ZZZZ010241	18470		  Kが１個も無いとキー割れ判定処理をしません。
JA	ZZZZ010241	18480		  列名の次がAかDはORDER BYのASCかDESCで無しは指定しません。
JA	ZZZZ010241	18490		  列名の先頭に?_O_FD?を付加した物をSQL文外の作業名とします。
JA	ZZZZ010241	18500		  列名の先頭に?_O_FS?を付加した物をSQL文内の作業名とします。
JA	ZZZZ010241	18510		  列名の先頭に?_O_F??を付加した物はFETCHで内容が設定されます
JA	ZZZZ010241	18520		  列名の先頭に?_O_WD?を付加した物をSQL文外の作業名とします。
JA	ZZZZ010241	18530		  列名の先頭に?_O_WS?を付加した物をSQL文内の作業名とします。
JA	ZZZZ010241	18540		  列名の先頭に?_O_W??を付加した物は作業用データと成ります。
JA	ZZZZ010241	18550		  FETCHのテーブルには別名としてX1が付いています。
JA	ZZZZ010241	18560		  作業データ定義はCREATE_TABLEと同じ記入方法です。
JA	ZZZZ010241	18570		  作業データ定義名の先頭に?_C_WD?と?_C_WS?を付加します。
JA	ZZZZ010241	18580		  SQL文の最後には必ず";"を記入して下さい。
JA	ZZZZ010241	18590		  キー割れ開始処理ではキー項目の?_O_W??にも値が設定され
JA	ZZZZ010241	18600		      キー割れの判定に使われます。
JA	ZZZZ010241	18610		  WHERE条件に「Z_CANCEL=' '」が設定されます。
JA	ZZZZ010241	18620		  Lは?_WORK_TABLE?__()プロシージャーを作成します。
JA	ZZZZ010241	18630		  Pは?_WORK_TABLE?__()ファンクションを作成します。
JA	ZZZZ010241	18640		***=CURSOR2{テーブル名1[,...]}{列名1 [K,A,D,][,..]}
JA	ZZZZ010241	18650		***  {WHERE句}{データ名1 データ型[,..]}
JA	ZZZZ010241	18660		***  {キー割れ開始処理}{１件処理}{キー割れ終了処理}
JA	ZZZZ010241	18670		    FETCHに対しWHERE条件に「Z_CANCEL=' '」を設定しません。
JA	ZZZZ010241	18680		6.12.1.1)**-ディレクトリのファイル名一覧の設定をします。
JA	ZZZZ010241	18690		***=DIR{ディレクトリ}
JA	ZZZZ010241	18700		　ディレクトリが空白の時は作業ディレクトリになります,
JA	ZZZZ010241	18710		　':\/'が含まれていると作業ディレクトリでは無くなります。
JA	ZZZZ010241	18720		[中止V31]ただしファイル起動ジョブではルートディレクトリです。
JA	ZZZZ010241	18730		6.12.1.2)**-ファイル名一覧の次の１件を転送します.
JA	ZZZZ010241	18740		***=DIR_NEXT{ファイル名データ[,日付データ]}..;..
JA	ZZZZ010241	18750		  ファイルがあると";"まで移動します。
JA	ZZZZ010241	18760		  日付データは書き換えられた時の日付です。
JA	ZZZZ010241	18770		6.12.2.1)**-ディレクトリのディレクトリ名一覧の設定をします。
JA	ZZZZ010241	18780		***=DIR_DIR{ディレクトリ}
JA	ZZZZ010241	18790		　ディレクトリが空白の時は作業ディレクトリになります,
JA	ZZZZ010241	18800		　':\/'が含まれていると作業ディレクトリでは無くなります。
JA	ZZZZ010241	18810		[中止V31]ただしファイル起動ジョブではルートディレクトリです。
JA	ZZZZ010241	18820		6.12.2.2)**-ディレクトリ名一覧の次の１件を転送します。
JA	ZZZZ010241	18830		***=DIR_DIR_NEXT{ディレクトリ名}..;..
JA	ZZZZ010241	18840		  ディレクトリがあると";"まで移動します。
JA	ZZZZ010241	18850		6.13)**-インデックスを削除します。
JA	ZZZZ010241	18860		***=DROP_INDEX{テーブル名[,インデクス番号]}   <新>
JA	ZZZZ010241	18870		　インデックス番号が空白時は全インデックスを削除します。
JA	ZZZZ010241	18880		　インデックスが存在しない場合も正常終了します。
JA	ZZZZ010241	18890		6.14)**-オブジェクトを削除します。
JA	ZZZZ010241	18900		***=DROP_OBJECT{オブジェクト名,対象}  〈新>
JA	ZZZZ010241	18910		　対象はVIEW,FUNC,FUNCTION,PROC,PROCEDURE,TRIG,TRIGGERです。
JA	ZZZZ010241	18920		　オブジェクトが存在しない場合も正常終了します。
JA	ZZZZ010241	18930		6.15)**-テーブルをデータベースから消去します。
JA	ZZZZ010241	18940		***=DROP_TABLE{テーブル名}
JA	ZZZZ010241	18950		　テーブルが存在しない場合も正常終了します。
JA	ZZZZ010241	18960		6.16.1)**-作業ディレクトリ上のファイルを消します。
JA	ZZZZ010241	18970		***=ERASE_FILE{ファイル名}
JA	ZZZZ010241	18980		  ファイルがない場合は何もしません。
JA	ZZZZ010241	18990		  ':\/'は記入出来ません。
JA	ZZZZ010241	19000		6.16.1)**-作業ディレクトリ上のディレクトリを消します。
JA	ZZZZ010241	19010		***=ERASE_DIR{ディレクトリ}                        VER13.1
JA	ZZZZ010241	19020		  ディレクトリがない場合は何もしません。
JA	ZZZZ010241	19030		  ':\/'は記入出来ません。
JA	ZZZZ010241	19040		6.17)**-メッセージをエラー（赤で表示）として表示します。
JA	ZZZZ010241	19050		***=ERROR{メッセージ}
JA	ZZZZ010241	19060		　メニュー起動、ファイル起動ジョブの場合再入力となります。
JA	ZZZZ010241	19070		　時間起動の場合異常終了します。
JA	ZZZZ010241	19080		6.18.1)**-プログラムを実行し、終了を待ちません。
JA	ZZZZ010241	19090		***=EXE{プログラム名[,パラメータ}}  <新>
JA	ZZZZ010241	19100		  文字列に"../"又は"..\"が有るとエラーになります。
JA	ZZZZ010241	19110		  ☆時間起動ジョブでは使えません。
JA	ZZZZ010241	19112		  ★パラメータは１行で書き,空白は必ず１個にして下さい。
JA	ZZZZ010241	19113		   (C++のプログラムが動かないので)
JA	ZZZZ010241	19120		6.18.2)**-自分自身のプログラムを実行し、終了を待ちません。
JA	ZZZZ010241	19130		***=EXE_I{ジョブ名[,固有パラメータ]}  <新>
JA	ZZZZ010241	19140		  ☆時間起動ジョブでは使えません。
JA	ZZZZ010241	19150		6.18.3)**-プログラムを実行し、終了を待ちます。
JA	ZZZZ010241	19160		***=EXE_WAIT{プログラム名[,パラメータ]} <新>
JA	ZZZZ010241	19170		  ☆時間起動ジョブでは使えません。
JA	ZZZZ010241	19180		6.19.1)**-セクションを終了し名前のデータの入力に進みます。
JA	ZZZZ010241	19190		***=EXIT{[名前]}
JA	ZZZZ010241	19200		  名前が空白の時はセッションを終了します。
JA	ZZZZ010241	19210		  先にしか進めないので前のデータの名前は指定出来ません。
JA	ZZZZ010241	19220		  名前が"_END"の時このプログラムを終了します。
JA	ZZZZ010241	19230		  名前が数値の時その番号のプログラムに戻ります。
JA	ZZZZ010241	19240		　（数値のみでは進む事は出来ません）
JA	ZZZZ010241	19250		　（０はメニューに戻ります）
JA	ZZZZ010241	19260		   (注：メニュー(I_MENU.TXT)内では１でジョブに行きます）
JA	ZZZZ010241	19270		   (注：メニュー(I_MENU.TXT)内では０で終了します）
JA	ZZZZ010241	19280		  名前が+1の時次のプログラムに行きます。
JA	ZZZZ010241	19290		    (BEGIN,START,SET=,DATA=,STOP_BEFOER,STOP_AFTER  (VER8.10)
JA	ZZZZ010241	19300		     ではEXIT{+1};の次の命令に戻ります。)
JA	ZZZZ010241	19310		  　(注意:END,SQL,COLOR,INPUT=では使用できません)   (VER8.10)
JA	ZZZZ010241	19320		 　 (注意:EXIT{+1};の戻で_REAL_TESTは初期化されます)
JA	ZZZZ010241	19330		6.19.2)**-セクションを終了しの名前のデータの入力後に進みます.
JA	ZZZZ010241	19340		***=EXIT2{[名前]}
JA	ZZZZ010241	19350		  エラーが発生した場合,以前のSET=,DATA=で再入力になります。
JA	ZZZZ010241	19360		  (該当データでは入力は行われない）
JA	ZZZZ010241	19370		  名前が空白の時は次のデータに移動します。 VER14.1
JA	ZZZZ010241	19380		  移動先の属性２が'O'か'N'の時はエラーとします。 VER14.1
JA	ZZZZ010241	19390		  ★注意：CHECK[1]=,CHECK2=のチェックはしないので注意下さい。
JA	ZZZZ010241	19400		6.19.3)**-セクションを終了しの名前のデータの入力後に進みます.
JA	ZZZZ010241	19410		***=EXIT3{[名前]}
JA	ZZZZ010241	19420		  エラーが発生した場合,名前のSET=,DATA=で再入力になります。
JA	ZZZZ010241	19430		  名前が空白の時は次のデータに移動します。 VER14.1
JA	ZZZZ010241	19440		  移動先の属性２が'O'か'N'の時はエラーとします。 VER14.1
JA	ZZZZ010241	19450		  ★注意：CHECK[1]=,CHECK2=のチェックはしないので注意下さい。
JA	ZZZZ010241	19460		6.20)**-名前+連番の中のデータを検索します。　VER20.1
JA	ZZZZ010241	19470		***=FIND_REPEAT{名前,検索};   <新>
JA	ZZZZ010241	19480		  名前+'_COUNT'に件数を設定する必要が有ります。
JA	ZZZZ010241	19490		  _FIND_REPEATに検索出来た場合は連番を以外は０を設定します。
JA	ZZZZ010241	19500		6.21.1)**-オブジェクトに対し標準の権限を設定します。
JA	ZZZZ010241	19510		***=GRANT{オブジェクト名,対象[,PUBLIC,LINK]}   <新>
JA	ZZZZ010241	19520		　対象が空白時または"TABLE"はテーブル用です。
JA	ZZZZ010241	19530		  　該当許可とZZZZのINPにSELECT,UPDATE,INSERT権限を与えます。
JA	ZZZZ010241	19540		  　(注意：DELETE権限は有りません）
JA	ZZZZ010241	19550		  　該当許可とZZZZのOUTにSELECT権限を与えます。
JA	ZZZZ010241	19560		　対象が"VIEW"はビュー用でSELECT権限のみ設定します。(VER8.10)
JA	ZZZZ010241	19570		　対象が"FUNC"または"FUNCTION"はファンクション用です。
JA	ZZZZ010241	19580		　対象が"PROC"または"PROCEDURE"はプロシージャ用です。
JA	ZZZZ010241	19590		　対象が"SELECT"はSELECT権限のみ設定します。
JA	ZZZZ010241	19600		　PUBLICを記入すると全ユーザにSELECT権限または
JA	ZZZZ010241	19610		　　"EXCUTE"を設定します。
JA	ZZZZ010241	19620		　PUBLICをLINKとするとLNKユーザのみにSELECT権限を設定します。
JA	ZZZZ010241	19630		　PUBLICを空白にするとPUBLIC及びLINK権限を解除します。
JA	ZZZZ010241	19640		6.21.2)**-他の許可のユーザにオブジェクトの権限を設定します。
JA	ZZZZ010241	19650		***=GRANT_PERMISSION{オブジェクト,許可,対象[,ユーザ]} <新>
JA	ZZZZ010241	19660		***=GRANT_PERMISSION{オブジェクト}{[対象]}{許可}{[ユーザ]}<旧
JA	ZZZZ010241	19670		　ユーザが空白は"I"と"O"と"D"に設定します。
JA	ZZZZ010241	19680		  ユーザが"L"は"L"のみに設定します。
JA	ZZZZ010241	19690		　SELECTまたはEXECUTEのみの設定となります。
JA	ZZZZ010241	19700		　(LNKはVER3よりの機能、BETA06から仕様変更)
JA	ZZZZ010241	19710		　(VER4より仕様変更)
JA	ZZZZ010241	19720		6.22)**-グラフを表示するプログラムを起動します。VER15.1
JA	ZZZZ010241	19730		***=ICHART{チャート名,[オプション],[付加],SQL1[;SQL2;..]}<新>
JA	ZZZZ010241	19740		***=ICHART{チャート名[,オプション]}{[付加]}{SQL1[;SQL2;..]}旧
JA	ZZZZ010241	19750		  ☆時間起動ジョブでは使えません。
JA	ZZZZ010241	19760		  オプション無しはグラフを表示します。
JA	ZZZZ010241	19770		  オプションをDATAとするとひな形データでグラフを表示します。
JA	ZZZZ010241	19780		  オプションをHELPとするとヘルプを表示します。
JA	ZZZZ010241	19790		  オプションをVERSIONとするとVERSIONファイルを作ります。
JA	ZZZZ010241	19800		  オプションをSETTINGとするとSETTINGファイルを作ります。
JA	ZZZZ010241	19810		  付加は同じプログラム内で複数のグラフを出したい場合に
JA	ZZZZ010241	19820		  ファイル名にこの文字を付加して重複を防ぎます。
JA	ZZZZ010241	19830		  SQLはX値,Y値,Y2値...の順でSELECTします。
JA	ZZZZ010241	19840		6.23.1)**-左辺右辺を比較し条件が成立しない時";"に移動します。
JA	ZZZZ010241	19850		***=IF{左辺データ=右辺データ[,[左辺データ]=右辺データ,.]}..;.
JA	ZZZZ010241	19860		　（VER4で仕様を変更しました）
JA	ZZZZ010241	19870		6.23.2)**-左辺右辺を比較し条件が成立した時";"に移動します。
JA	ZZZZ010241	19880		***=IF_NOT{左辺データ=右辺データ.....}..;.. (VER7.31)
JA	ZZZZ010241	19890		6.23.3)**-IF{,IF_NOT{の共通の説明です。
JA	ZZZZ010241	19900		  比較演算子"!="(不一致),"<"(より大),">"(より小)も使えます。
JA	ZZZZ010241	19910		  "/"は左辺を前方比較、'%'が左辺を後方比較します。(VER7.31)
JA	ZZZZ010241	19920		  "!/"と"!%"で否定比較も出来ます。(VER22.1)
JA	ZZZZ010241	19930		  ","は「又は」（OR)を意味です。
JA	ZZZZ010241	19940		　左辺データが左と同じ場合は省略できます。
JA	ZZZZ010241	19950		　★IF...命令にIF...命令があると「かつ」（AND)を意味します。
JA	ZZZZ010241	19960		  ★基本は左辺データの型(文字か,数値か)を使用して比較しまが、
JA	ZZZZ010241	19970		　　左辺が＃,！,＠で始まる時は右辺のデータの型を使用します。
JA	ZZZZ010241	19980		　（VER3以降採用）
JA	ZZZZ010241	19990		6.23.4)**-ファイルが読み込みで開ない時";"まで移動します。
JA	ZZZZ010241	20000		***=IF_FILE{ファイル名}..;..
JA	ZZZZ010241	20010		  ファイル名のみの場合は作業ディレクトリのファイルです。
JA	ZZZZ010241	20020		  ':\/'が含まれていると作業ディレクトリでは無くなります。
JA	ZZZZ010241	20030		6.23.5)**-ファイルが読み込みで開く時";"まで移動します。
JA	ZZZZ010241	20040		***=IF_FILE_NOT{ファイル名}..;..   (VER7.31)
JA	ZZZZ010241	20050		  ファイル名のみの場合は作業ディレクトリのファイルです。
JA	ZZZZ010241	20060		  ':\/'が含まれていると作業ディレクトリでは無くなります。
JA	ZZZZ010241	20070		6.23.6)**-データ名が無い時";"まで移動します。
JA	ZZZZ010241	20080		***=IF_NAME{データ名}..;..
JA	ZZZZ010241	20090		6.23.7)**-データ名が有る時";"まで移動します。
JA	ZZZZ010241	20100		***=IF_NAME_NOT{データ名}..;..     (VER7.31)
JA	ZZZZ010241	20110		6.22.8)**-テーブルが無い時";"まで移動します。
JA	ZZZZ010241	20120		***=IF_TABLE{テーブル名}..;..
JA	ZZZZ010241	20130		6.23.9)**-テーブルが有る時";"まで移動します。
JA	ZZZZ010241	20140		***=IF_TABLE_NOT{テーブル名}..;.. (VER7.31)
JA	ZZZZ010241	20150		6.24)**-データを１件インサートします。
JA	ZZZZ010241	20160		***=INSERT{テーブル名,データ名,...}  <新>
JA	ZZZZ010241	20170		　データ名に文字列,数値を直接指定する事は出来ません。
JA	ZZZZ010241	20180		  Z_ADD,Z_ADD_PERSON,Z_LAST_JOB,Z_LAST_COMPUTER
JA	ZZZZ010241	20190		　　　　　　　　　　　　　　　　　　もINSERTします。
JA	ZZZZ010241	20200		  注意:INSERTで実行するので論理削除データには対応出来ません。
JA	ZZZZ010241	20210		  データ名は=で初期値を設定できます。VER23.1
JA	ZZZZ010241	20220		6.25)**-ファイルのデータをインサートします。
JA	ZZZZ010241	20230		***=INSERT_FILE{テーブル名,ファイル名,エンコード,列名,..}<新>
JA	ZZZZ010241	20240		    ファイル名のみの時は作業ディレクトリと成ります。
JA	ZZZZ010241	20250		    ':\/'が含まれていると作業ディレクトリでは無くなります。
JA	ZZZZ010241	20260		　(レコード区切り指定はU又はWでVER7.15以上）
JA	ZZZZ010241	20270		  Z_ADD,Z_ADD_PERSON,Z_LAST_JOB,Z_LAST_COMPUTER
JA	ZZZZ010241	20280		　　　　　　　　　　　　　　　　　　もINSERTします。
JA	ZZZZ010241	20290		　エンコード無指定はバイト順マーク (BOM)無しのUTF-8です。
JA	ZZZZ010241	20300		　(バイト順マーク (BOM)無しはVER17.15以降可能）
JA	ZZZZ010241	20310		　(★VER7.14以前とは非互換です）
JA	ZZZZ010241	20320		　エンコードの代表例は下記です。
JA	ZZZZ010241	20330		　　UTF-8(BOM付き)、SHIFT_JIS、EUC-JP。
JA	ZZZZ010241	20340		　　尚、"/"とした場合はOSのデフォルト値を使用します。
JA	ZZZZ010241	20350		　　(VER7.14以前のエンコード無指定とBOMを除き同じです）
JA	ZZZZ010241	20360		  注意:INSERTで実行するので論理削除データには対応出来ません。
JA	ZZZZ010241	20370		6.26)**-印刷又は画面表示するプログラムを起動します。VER15.1
JA	ZZZZ010241	20380		***=IPRINT{[プリント名],[オプション],[付加],[SQL文]}<新>
JA	ZZZZ010241	20390		  ☆時間起動ジョブでは使えません。      VER15.1
JA	ZZZZ010241	20400		  オプション無し又はPRINTは印刷をします。
JA	ZZZZ010241	20410		  オプションをDISPLAYとすると画面に表示します。
JA	ZZZZ010241	20420		  オプションをDATAとするとひな形データで画面に表示します。
JA	ZZZZ010241	20430		  オプションをHELPとするとヘルプを表示します。
JA	ZZZZ010241	20440		  オプションをVERSIONとするとVERSIONファイルを作ります。
JA	ZZZZ010241	20450		  付加は同じプログラムで複数の印刷をしたい場合に
JA	ZZZZ010241	20460		  ファイル名にこの文字を付加して重複を防ぎます。
JA	ZZZZ010241	20470		  プリント名が空白はファイルを作らないので次の名前で作って
JA	ZZZZ010241	20480		  下さい。"?TMP??_JOB??_WINDOW?IPRINT?付加?2.TXT”VER20.1
JA	ZZZZ010241	20490		  SQL文が空白はファイルを作らないので次の名前で作って
JA	ZZZZ010241	20500		  下さい。"?TMP??_JOB??_WINDOW?IPRINT?付加?1.TXT”VER20.1
JA	ZZZZ010241	20510		6.27)**-後方の直近の名札に移動します。
JA	ZZZZ010241	20520		***=JUMP{[名札]}
JA	ZZZZ010241	20530		  名札が空白は後方の２個目のセミコロンまで移動します。VER17
JA	ZZZZ010241	20540		6.28)**-メッセージを表示または時間起動ではログに書きます。
JA	ZZZZ010241	20550		***=MESSAGE{メッセージ}
JA	ZZZZ010241	20560		6.29)**-リンク用SQL文を組み立てます。
JA	ZZZZ010241	20570		***=LINK_SET{データ名}{SELECTからFROMまで}{テーブル名}{別名}
JA	ZZZZ010241	20580		***   {WHERE以下}  (VER3以降）
JA	ZZZZ010241	20590		  データベースリンクの不具合を迂回するためSQL文の組みなおし
JA	ZZZZ010241	20600		  をします、SQL ServerではOPENQUERYを使用します。
JA	ZZZZ010241	20610		6.30)**-何もしません。
JA	ZZZZ010241	20620		***=NOP{}
JA	ZZZZ010241	20630		◎何もしません。
JA	ZZZZ010241	20640		6.31.1)**-SQL=の代わりに表示データを１件追加します。
JA	ZZZZ010241	20650		***=OUTPUT{データ名,..}   (VER3より可能）
JA	ZZZZ010241	20660		  データ名の数は全て同じ数にして下さい。(異なると誤動作します
JA	ZZZZ010241	20670		  注意：表示される時間は都合により更新されません。
JA	ZZZZ010241	20680		6.31.2)**-OUTPUT=用表示データをクリアーします。
JA	ZZZZ010241	20690		***=OUTPUT_CLEAR{}   (VER3より可能）
JA	ZZZZ010241	20700		6.32)**-テーブルを該当データで更新又は検索します。
JA	ZZZZ010241	20710		***=PROGRAM{操作,テーブル名,データ名...}{キー名,..}{条件}<新>
JA	ZZZZ010241	20720		***=PROGRAM2{操作,テーブル名,データ名...}{キー名,..}{条件}<新
JA	ZZZZ010241	20730		    (PROGRAM2はVER7.22で追加)
JA	ZZZZ010241	20740		　PROGRAM2はZ_で始まるデータ名を使わない作業テーブル用です。
JA	ZZZZ010241	20750		    (削除は論理削除ではなくDELETEで物理削除されます）
JA	ZZZZ010241	20760		  　(Z_CANCELは、当然考慮されないので注意下さい。）
JA	ZZZZ010241	20770		　操作が０はデータ名にデータをセットし、(VER5で追加）
JA	ZZZZ010241	20780		  この時件数が０件の場合はデータ名に空が設定されます。
JA	ZZZZ010241	20790		　操作が１は１件のキー名一致データを削除します。
JA	ZZZZ010241	20800		　（更新相手が1件でないとエラーになります）
JA	ZZZZ010241	20810		　操作が２はデータを追加します。
JA	ZZZZ010241	20820		　操作が３は１件のキー名一致データを修正します。
JA	ZZZZ010241	20830		　操作にNを付加した場合処理処対象がないと何もしません。
JA	ZZZZ010241	20840		　 (N=not)
JA	ZZZZ010241	20850		　（２で相手がある、１，３で相手がない、は何もしないで終了）
JA	ZZZZ010241	20860		　操作にEを付加した場合は処理処対象がなくても処理します。
JA	ZZZZ010241	20870		　(E=exchange)
JA	ZZZZ010241	20880		　（２で相手があるは修正します、３で相手が無いは作成します)
JA	ZZZZ010241	20890		　（１で相手が無いは何もしません）
JA	ZZZZ010241	20900		　操作にPを付加した場合いは相手が2件以上でも処理します。
JA	ZZZZ010241	20910		　 (P=plural)
JA	ZZZZ010241	20920		　（操作が１と３のみ有効です、相手が0件はエラーになります）
JA	ZZZZ010241	20930		　操作PにEを付加した場合いは相手が0件の時何もしません。
JA	ZZZZ010241	20940		　キー名、データ名に"."が付いている時はSQLの列名は最後の"."
JA	ZZZZ010241	20950		　　より後の名前が採用されます。
JA	ZZZZ010241	20960		　_PROGRAM_COUNTに操作が０は検索以外は更新件数を設定します。
JA	ZZZZ010241	20970		　(更新件数はVER23.1で設定）
JA	ZZZZ010241	20980		　注意：データ名は必ず事前に存在する必要があります。
JA	ZZZZ010241	20990		　キー名とデータ名は=で初期値を設定できます。VER23.1
JA	ZZZZ010241	21000		　条件が有ると" AND (条件）"をWHEREに追加します。VER23.1
JA	ZZZZ010241	21010		6.33.1)**-読み込みファイルを開きます。
JA	ZZZZ010241	21020		***=READ_OPEN{名前,ファイル名[,エンコード]} <新>  (VER24.1)
JA	ZZZZ010241	21030		  ファイル名のみの場合は作業ディレクトリのファイルです。
JA	ZZZZ010241	21040		  ':\/'が含まれていると作業ディレクトリでは無くなります。
JA	ZZZZ010241	21050		  READ_OPENはジョブ単位以外はプログラム単位に使えます。
JA	ZZZZ010241	21060		  エンコード無しはバイト順マーク無しUTF-8と判断します。
JA	ZZZZ010241	21070		  (注意：VER7.15で非互換となりました,今まではファイルの
JA	ZZZZ010241	21080		   エンコードでした。）
JA	ZZZZ010241	21090		  エンコードを'/'とするとファイルのエンコードで判定します。
JA	ZZZZ010241	21100		  (ただし、バイト順マーク無しはWINDOWSではSHIFT_JIS、
JA	ZZZZ010241	21110		   LinuxではUTF-8と判断します。バイト順マークが有る場合は
JA	ZZZZ010241	21120		   UTF-8と判断し,以外は指定する必要があります,VER7.15）
JA	ZZZZ010241	21130		   可能な限りエンコードは陽に指定する事を推奨します。
JA	ZZZZ010241	21140		   注意:C++はLinuxはUTF-8,WindowsはUTF-8かSHIFT_JISのみです。
JA	ZZZZ010241	21150		6.33.2)**-読み込みファイルの次の１行をデータ名に転送します。
JA	ZZZZ010241	21160		***=READ_NEXT{名前,データ名,..}..;.. <新>
JA	ZZZZ010241	21170		  データの区切りは拡張子がCSVは','でそれ以外はタブとします。
JA	ZZZZ010241	21180		  データがある場合は";"まで移動します。
JA	ZZZZ010241	21190		6.33.3)**-読み込みファイルを閉じます。
JA	ZZZZ010241	21200		***=READ_CLOSE{名前}  <新>
JA	ZZZZ010241	21210		  READ_OPENが実行されていない場合も正常終了します。VER28.1
JA	ZZZZ010241	21220		6.34.1)**-非同期でコンピュータからのメッセージを待ちます。
JA	ZZZZ010241	21230		***=RECEIVE{番号}
JA	ZZZZ010241	21240		  非同期でメッセージを待ち、受信で終了し[Enter]を入力します。
JA	ZZZZ010241	21250		　 番号はSENDで指定した番号と同じ番号を待ちます。
JA	ZZZZ010241	21260		　 同時に複数番号の受信は待てません。
JA	ZZZZ010241	21270		　★注意：エラーになるので回避して下さい。
JA	ZZZZ010241	21280		　★注意：使用中はリストボックスを表示しないでください。
JA	ZZZZ010241	21290		　☆時間起動ジョブでは使えません。
JA	ZZZZ010241	21300		6.34.2)**-RECEIVEと同じですが,来た時ビープ音を出します。
JA	ZZZZ010241	21310		***=RECEIVE_BEEP{番号}
JA	ZZZZ010241	21320		　☆時間起動ジョブでは使えません。
JA	ZZZZ010241	21330		6.35.1)**-テーブルに対しキー項目を元にデータを置き換えます。
JA	ZZZZ010241	21340		★警告：列にTEXT型があるとその列は更新されません。
JA	ZZZZ010241	21350		　（理由：SQL文の比較が正しく判定しないため）
JA	ZZZZ010241	21360		***=REPLACE_ALL{出力テーブル名,入力テーブル名,データ列名,..}
JA	ZZZZ010241	21370		***   {キー列名,..}{出力条件}{入力条件} <新>
JA	ZZZZ010241	21380		  出力テーブルのみにある物は出力条件が無ければ削除されます。
JA	ZZZZ010241	21390		  Z_CANCELが' 'でない物は削除データと見なします。
JA	ZZZZ010241	21400		  出力条件の列名は"*O*."を前につけて下さい。
JA	ZZZZ010241	21410		　(VER2以降:PostgreSQLは"テーブル名."以外は"O."になります）
JA	ZZZZ010241	21420		  ★注意：出力条件使用の列名はキー列名に有るもののみです。
JA	ZZZZ010241	21430		  入力条件の列名は"I."を前につけて下さい。
JA	ZZZZ010241	21440		6.35.2)**-REPLACE_ALLと同等入力のZ_CANCEL判定しません。
JA	ZZZZ010241	21450		***=REPLACE_ALL2{出力テーブル名,入力テーブル名,データ列名,..}
JA	ZZZZ010241	21460		***   {キー列名,..}{出力条件}{入力条件} <新>
JA	ZZZZ010241	21470		6.35.3)**-キー項目で入力テーブルにある物だけを置き換えます。
JA	ZZZZ010241	21480		***=REPLACE_PART{出力テーブル名,入力テーブル名,データ列名,..}
JA	ZZZZ010241	21490		***   {キー列名,..}{出力条件}{入力条件}  <新>
JA	ZZZZ010241	21500		　 入力テーブルにない物は何もしません。
JA	ZZZZ010241	21510		　 Z_CANCELが' 'でない物は削除データと見なします。
JA	ZZZZ010241	21520		6.35.3)**-REPLACE_PARTと同等で入力のZ_CANCEL判定をしません。
JA	ZZZZ010241	21530		***=REPLACE_PART2{出力テーブル名,入力テーブル名,データ列,..}
JA	ZZZZ010241	21540		*** {キー列名,..}{出力条件}{入力条件} <新>
JA	ZZZZ010241	21550		6.35.4)**-REPLACE_PARTの作成部分のみ実行します。
JA	ZZZZ010241	21560		***=REPLACE_PART_ADD{出力テーブル名,入力テーブル名}<新>
JA	ZZZZ010241	21570		***   ,データ列名,..}{キー列名,..}{出力条件}{入力条件}
JA	ZZZZ010241	21580		***=REPLACE_PART_ADD{出力テーブル名}{入力テーブル名}
JA	ZZZZ010241	21590		***   {キー列名,..}{データ列名,..}{出力条件}{入力条件}
JA	ZZZZ010241	21600		6.35.5)**-REPLACE_PART_ADDと同等入力のZ_CANCEL判定をしません
JA	ZZZZ010241	21610		***=REPLACE_PART_ADD2{出力テーブル名,入力テーブル名  <新>
JA	ZZZZ010241	21620		***   ,データ列名,..}{キー列名,..}{出力条件}{入力条件}
JA	ZZZZ010241	21630		                                               (VER5.2)
JA	ZZZZ010241	21640		6.35.6)**-REPLACE_PARTの修正部分のみ実行します。
JA	ZZZZ010241	21650		***=REPLACE_PART_CHANGE{出力テーブル名,入力テーブル名　<新>
JA	ZZZZ010241	21660		***   ,データ列名,..}{キー列名,..}{出力条件}{入力条件}
JA	ZZZZ010241	21670		6.35.7)**-REPLACE_PART_CHANGE同等入力Z_CANCEL判定をしません。
JA	ZZZZ010241	21680		***=REPLACE_PART_CHANGE2{出力テーブル名,入力テーブル名 <新>
JA	ZZZZ010241	21690		***   ,データ列名,..}{キー列名,..}{出力条件}{入力条件}
JA	ZZZZ010241	21700		6.35.8)**-REPLACE_PARTの削除部分のみ実行します。
JA	ZZZZ010241	21710		***=REPLACE_PART_CANCEL{出力テーブル名,入力テーブル名 　<新>
JA	ZZZZ010241	21720		***   ,データ列名,..}{キー列名,..}{出力条件}{入力条件}
JA	ZZZZ010241	21730		6.36)**-他の許可のユーザのオブジェクトの権限を解除します。
JA	ZZZZ010241	21740		***=REVOKE_PERMISSION{オブジェクト名,許可[,対象][,ユーザ]}<新
JA	ZZZZ010241	21750		　ユーザが空白が"I"と"O"と”D"を解除します、
JA	ZZZZ010241	21760		　ユーザが"L"は"L"のみを解除とします。(Lも同じVER8)
JA	ZZZZ010241	21770		　(LNKはVER3よりの機能、BETA06から仕様変更)
JA	ZZZZ010241	21780		　(VER4より仕様変更)
JA	ZZZZ010241	21790		6.37)**-コンピューターにメッセージを送信します。
JA	ZZZZ010241	21800		***=SEND{番号}{コンピュータ名１[;コンピュータ名２]}{内容}
JA	ZZZZ010241	21810		  相手が受信待ちでない場合もそのまま終了します。
JA	ZZZZ010241	21820		  番号は１から89までとします。（90から99まではツール用）
JA	ZZZZ010241	21830		  コンピュータ名が空白の場合は自分自身に送ります。
JA	ZZZZ010241	21840		  ポート番号は654+番号（２桁）とします。(Ve4で変更）
JA	ZZZZ010241	21850		  連続送信を避けるため処理後0.5秒待ちます(Ve11.1で変更）
JA	ZZZZ010241	21860		6.38.1)**-シリアルポートをオープンします。VER7.24)
JA	ZZZZ010241	21870		***=SERIALPORT1_OPEN{エンコード,定義} <新>
JA	ZZZZ010241	21880		***=SERIALPORT2_OPEN{エンコード,定義} <新>
JA	ZZZZ010241	21890		定義はポート名,ポーレート,パリティ,データビット,ストップです
JA	ZZZZ010241	21900		例:{COM1,9600,NONE,8,ONE}(ポーレート以降省略すると左記となる)
JA	ZZZZ010241	21910		  注意:C++は動きません。VER36.1
JA	ZZZZ010241	21920		6.38.2)**-シリアルポートより指定文字数分を読み込みます。
JA	ZZZZ010241	21930		***=SERIALPORT1_READ{データ名,文字数} <新>
JA	ZZZZ010241	21940		***=SERIALPORT2_READ{データ名,文字数} <新>
JA	ZZZZ010241	21950		6.38.3)**-シリアルポートより文字列を書き込みます。
JA	ZZZZ010241	21960		***=SERIALPORT1_WRITE{データ名}
JA	ZZZZ010241	21970		***=SERIALPORT2_WRITE{データ名}
JA	ZZZZ010241	21980		6.38.4)**-シリアルポートをクローズします。
JA	ZZZZ010241	21990		***=SERIALPORT1_CLOSE{}
JA	ZZZZ010241	22000		***=SERIALPORT2_CLOSE{}
JA	ZZZZ010241	22010		6.39.1)**-サーバーでバッチファイルを実行します。
JA	ZZZZ010241	22020		***=SERVER_BAT{サーバーバッチファイル名[,パラメータ]}  <新>
JA	ZZZZ010241	22030		  実行結果のエラーの判定を作業ディレクトリ上のファイル
JA	ZZZZ010241	22040		  ?_WORK?.EXITで判定するので正常終了時はバッチファイル
JA	ZZZZ010241	22050		  内で!!!と書き換えて下さい。　VER17
JA	ZZZZ010241	22060		   (WINDOWS=%SYSTEMDRIVE%\I\I.%4\TMP_%3\%5.EXIT)
JA	ZZZZ010241	22070		   (LINUX=/home/I/I.%4/TMP_%3/%5.EXIT)
JA	ZZZZ010241	22080		  文字列に"../"又は"..\"が有るとエラーになります。
JA	ZZZZ010241	22090		  パラメータは先頭に無条件で下記5個が付加されます。
JA	ZZZZ010241	22100		  ?_IV? ?_LANG_SYSTEM? ?_REAL? ?_SYSTEM? ?_WORK? (VER17)
JA	ZZZZ010241	22110		  ☆ファイル起動ジョブでは使えません。
JA	ZZZZ010241	22120		6.39.2)**-サーバーからファイルを受信します。
JA	ZZZZ010241	22130		***=SERVER_GET{ファイル名[,パス名]}    <新>
JA	ZZZZ010241	22140		  パス名空白時は'TMP'とみなします。
JA	ZZZZ010241	22150		  文字列に"../"又は"..\"が有るとエラーになります。
JA	ZZZZ010241	22160		  パス名TMPは"\I\I.システム名\TMP_REAL\"となります。
JA	ZZZZ010241	22170		  パス名がSHAREで始まっている時は"\I\SHARE\パス名"となります
JA	ZZZZ010241	22180		  (VER7.18)
JA	ZZZZ010241	22190		  パス名が上記以外は"\I\I.システム名\パス名_REAL"となります
JA	ZZZZ010241	22200		  ☆ファイル起動ジョブでは使えません。
JA	ZZZZ010241	22210		6.39.3)**-サーバーの作業ディレクトリにファイルを送信します。
JA	ZZZZ010241	22220		***=SERVER_PUT{ファイル名}.
JA	ZZZZ010241	22230		  文字列に"../"又は"..\"が有るとエラーになります。
JA	ZZZZ010241	22240		  ☆ファイル起動ジョブでは使えません。
JA	ZZZZ010241	22250		6.40.1)**-右辺データを左辺データに転送します。
JA	ZZZZ010241	22260		***=SET{左辺データ=右辺データ1[+右辺データ2..],..}
JA	ZZZZ010241	22270		  +を使って右辺を結合する事が出来ます。
JA	ZZZZ010241	22280		　数値（型1が+,-)の場合小数点以下が切られるとエラーです。
JA	ZZZZ010241	22290		　年月日(型1がd)の場合で日付が正しくないとエラーです。
JA	ZZZZ010241	22300		　数値、年月日以外の場合表示文字数が不足した時エラーです。
JA	ZZZZ010241	22310		　エラー発生時そのデータは転送し以降の処理も続行します。
JA	ZZZZ010241	22320		　数値（型1が+,-)の場合で数値でない時やオーバーフローした時は
JA	ZZZZ010241	22330		　,異常終了します。
JA	ZZZZ010241	22340		　上記以外の型1,2でのの文字種の判定はされません。
JA	ZZZZ010241	22350		6.40.2)**-左辺データの最後に追加します。
JA	ZZZZ010241	22360		***=SET{左辺データ+=右辺データ1[+右辺データ2..],..}
JA	ZZZZ010241	22370		  +を使って右辺を結合する事が出来ます。
JA	ZZZZ010241	22380		6.41)**-データの設定情報を設定します。
JA	ZZZZ010241	22390		***=SET_DICTIONARY{列名,...}
JA	ZZZZ010241	22400		（VER3以降複数指定可能）
JA	ZZZZ010241	22410		6.42)**-テーブル情報を「&[テーブル別名].名前」に設定します。
JA	ZZZZ010241	22420		***=SET_TABLE{&テーブル別名,テーブル名}   <新>
JA	ZZZZ010241	22430		　テーブル別名は先頭に必ず"&"を付けて下さい。
JA	ZZZZ010241	22440		6.43)**-指定秒の間処理を待ちます。
JA	ZZZZ010241	22450		***=SLEEP{秒}
JA	ZZZZ010241	22460		6.44)**-E-MAILを送信します。
JA	ZZZZ010241	22470		 現在停止中ですので使用できません]
JA	ZZZZ010241	22480		[停止中]***=SMTP{サーバー}{ポート}{宛先}[差出人}{件名}{本文}
JA	ZZZZ010241	22490		  (新仕様）
JA	ZZZZ010241	22500		[★注意★SmtpClientがウイルスと誤認されるVirus判定ソフトが
JA	ZZZZ010241	22510		 有るのでこの命令は停止中で動きません]
JA	ZZZZ010241	22520		　*注意*JAVA版は動きません。
JA	ZZZZ010241	22530		　宛先が複数の場合は";"で区切って下さい。
JA	ZZZZ010241	22540		  サーバー無は@ZZZZZZ_SMTP_SERVER（ただし未登録なので設定要）
JA	ZZZZ010241	22550		  ポート無は　@ZZZZZZ_SMTP_PORT　（ただし未登録なので設定要）
JA	ZZZZ010241	22560		  確認画面が表示されますが,CONTROL=SMTPとすると出ません。
JA	ZZZZ010241	22570		6.45.1)**-区切り文字で,作業名+連番の項目に文字列を分割します.
JA	ZZZZ010241	22580		***=SPLIT_CHAR{作業名}{データ名[,.]}{区切データ名[,.]}  VER23
JA	ZZZZ010241	22590		【廃止】***=SPLIT_CHAR_VALUE{作業名}{文字列}{区切り文字}VER28
JA	ZZZZ010241	22600		  区切り文字は複数文字指定が可能です。
JA	ZZZZ010241	22610		 「'」で囲まれた部分の空白や区切り文字は
JA	ZZZZ010241	22620		　　　　　　　　　　　　　　そのままデータとします。
JA	ZZZZ010241	22630		 「'」は区切り文字に指定できません。
JA	ZZZZ010241	22640		 _SPLIT_COUNTに分割件数を設定します。 [廃止予定]
JA	ZZZZ010241	22650		   文字列が空の場合は何もしないで_SPLIT_COUNTが0。 [廃止予定]
JA	ZZZZ010241	22660		 _SPLIT_CHAR_COUNTに分割件数を設定します。 (VER22.1)
JA	ZZZZ010241	22670		   文字列が空の場合は何もしないで_SPLIT_CHAR_COUNTが0 (VER22)
JA	ZZZZ010241	22680		  ★注意:区切り文字にサロゲートペアや結合文字を使用すると、
JA	ZZZZ010241	22690		　　誤動作します、指定しないでください。
JA	ZZZZ010241	22700		4.45.2)**-表示文字長単位に、作業名＋連番の項目に分割します｡
JA	ZZZZ010241	22710		***=SPLIT_FORM{作業名}{データ名[,.]}{表示文字長データ名}
JA	ZZZZ010241	22720		【廃止】***=SPLIT_FORM_VALUE{作業名}{文字列}{表示文字長}VER28
JA	ZZZZ010241	22730		　 サロゲートペア,結合文字は実際の桁数でも判定します。
JA	ZZZZ010241	22740		　_SPLIT_COUNTに分割件数を設定します。[廃止予定]
JA	ZZZZ010241	22750		　_SPLIT_FORM_COUNTに分割件数を設定します。(VER22.1)
JA	ZZZZ010241	22760		  ★注意サロゲートペアや結合文字は2文字以上で構成されるので、
JA	ZZZZ010241	22770		　　表示文字長を超る文字がある時は分割をやめエラーとします。
JA	ZZZZ010241	22780		6.46)**-SQL文を実行します。
JA	ZZZZ010241	22790		***=SQL{SQL文}
JA	ZZZZ010241	22800		6.47)**-カーソルによるSQL処理を実行します。
JA	ZZZZ010241	22810		【廃止】***=SQL_CURSOR{DECLARE定義[;DECLARE定義...]}(VER28.1)
JA	ZZZZ010241	22820		【廃止】***   {CURSOR SELECT文}{FETCH データ名[,データ名...]}
JA	ZZZZ010241	22830		【廃止】***   {処理文;[処理文;...]}            (VER8.10)
JA	ZZZZ010241	22840		6.48)**-SQLの受信データをTXT,CSV形式でファイルに落とします。
JA	ZZZZ010241	22850		***=SQL_FILE{付加ファイル名[,OT,ADD]             <新>
JA	ZZZZ010241	22860		***   [,エンコード][,レコード区切り指定]}{SQL文}
JA	ZZZZ010241	22870		***=SQL_FILE2{ファイル名[,OT,ADD]                <新>
JA	ZZZZ010241	22880		***   [,エンコード][,レコード区切り指定]}{SQL文}
JA	ZZZZ010241	22890		　(レコード区切り指定はU又はWでVER7.15以上）
JA	ZZZZ010241	22900		  SQL_FILEはファイル名は「_SQL_FILE+付加ファイル名」で,
JA	ZZZZ010241	22910		  作業ディレクトリ上に作ります。
JA	ZZZZ010241	22920		  SQL_FILE2はファイル名は「ファイル名」で,ファイル名のみは
JA	ZZZZ010241	22930		  作業ディレクトリ上に作ります。(★注意VER36.000600003で変更)
JA	ZZZZ010241	22940		  ':\/'が含まれていると作業ディレクトリでは無くなります。
JA	ZZZZ010241	22950		　ファイル名の拡張子が'CSV'の時はCSV形式で書き、
JA	ZZZZ010241	22960		　以外はTAB区切りで書きます。
JA	ZZZZ010241	22970		　データにTABがあっても何もしないでそのまま書きます。
JA	ZZZZ010241	22980		  ADDでファイルの最後に追加します。
JA	ZZZZ010241	22990		  OTの場合ファイルがあっても上書きします。
JA	ZZZZ010241	23000		　ADD,OTが無い場合はファイルが有るとエラーになります。
JA	ZZZZ010241	23010		  ☆SQL_FILE2は時間起動ジョブでは使えません。
JA	ZZZZ010241	23030		6.49)**-テストと本番データベースのテーブルでSQLを実行します。
JA	ZZZZ010241	23040		***=SQL_REAL_TEST{SQL文}
JA	ZZZZ010241	23050		6.50.1)**-SQLを実行し一件分のデータのみを受信します。
JA	ZZZZ010241	23060		***=SQL_SET{データ名,..}{SQL文}
JA	ZZZZ010241	23070		   _SQL_SET_COUNTに件数が設定されます。
JA	ZZZZ010241	23080		  ０件の場合はデータを転送しないで正常終了するので,
JA	ZZZZ010241	23090		  IF{_SQL_SET_COUNT=0}で陽に判定をして下さい。VER17
JA	ZZZZ010241	23100		  ２件目以降も使用する場合はSQL1かSQL2を使用します。
JA	ZZZZ010241	23110		6.50.2)**-SQLを実行し件数分データ名に枝番を付加して設定します
JA	ZZZZ010241	23120		***=SQL_REPEAT{データ名,..}{SQL文}                  (VER8.7)
JA	ZZZZ010241	23130		   _SQL_REPEAT_COUNTに件数が設定されます。
JA	ZZZZ010241	23140		6.51.1)**-SQLを実行し、データを受信します。
JA	ZZZZ010241	23150		***=SQL1{SQL文}
JA	ZZZZ010241	23160		***=SQL2{SQL文}
JA	ZZZZ010241	23170		6.51.2)**-受信したデータを一件ずつ転送します。
JA	ZZZZ010241	23180		***=SQL1_NEXT{データ名,..}..;..
JA	ZZZZ010241	23190		***=SQL2_NEXT{データ名,..}..;..
JA	ZZZZ010241	23200		  受信データが存在する場合は";"まで移動します。
JA	ZZZZ010241	23210		6.51.3)**-受信したデータの１件目に戻ります。
JA	ZZZZ010241	23220		***=SQL1_FIRST{}
JA	ZZZZ010241	23230		***=SQL2_FIRST{}
JA	ZZZZ010241	23240		6.52)**-指定秒後に「ENTER」を入力します。
JA	ZZZZ010241	23250		***=TIMER{秒}
JA	ZZZZ010241	23260		***=TIMER_BEEP{秒}
JA	ZZZZ010241	23270		  TIMER_BEEPの場合はBEEP音を同時に発生します。
JA	ZZZZ010241	23280		　☆時間起動ジョブでは使えません。
JA	ZZZZ010241	23290		6.53)**-複数テーブル使用のUPDATEをRDBMSに合わせ組立実行します
JA	ZZZZ010241	23300		***=UPDATE{更新テーブル名,更新先列名[,.]}{更新元列名[,...]}
JA	ZZZZ010241	23310		***   {他のテーブル名含む以降のSQL文}   <新>
JA	ZZZZ010241	23320		  更新テーブルの別名は'O'固定とします。
JA	ZZZZ010241	23330		  注意:Z_で始まるI言語用列は何も更新しないので,論理削除データ
JA	ZZZZ010241	23340		       には対応出来ません。
JA	ZZZZ010241	23350		6.54.1)**-URLからファイルを作業ディレクリに受信します。
JA	ZZZZ010241	23360		[廃止]***=URL{[受信ファイル名],[プロキシIP:ポート],URL}VER36
JA	ZZZZ010241	23370		***=URL{[受信ファイル名][,プロキシIP:ポート]}{URL} VER36.6.0.
JA	ZZZZ010241	23380		  ★注意:プロキシはWindows(W)+C#(D)以外未対応ですので,
JA	ZZZZ010241	23390		    CURLコマンド等別の方法で対応して下さい。★　VER36.1
JA	ZZZZ010241	23400		  受信ファイル名無しはURLから判定します。
JA	ZZZZ010241	23410		[廃止] プロキシーは「プロキシサーバー:ポート」を設定します。
JA	ZZZZ010241	23420		  _URLに受信したファイル名が設定されます。(VER18.1)
JA	ZZZZ010241	23430		  文字コードはUTF-8のみを対象とします。(VER24.1)
JA	ZZZZ010241	23440		6.54.2)**-URLにPOST送信ファイルを作業ディレクリに受信します。
JA	ZZZZ010241	23450		[廃止***=URL_POST{[受信ファイル名],[プロキシ],パラメータ,URL}
JA	ZZZZ010241	23460		***=URL_POST{[受信ファイル名][,プロキシ]}{URL}{パラメータ}
JA	ZZZZ010241	23470		  ★注意:プロキシはWindows+C#以外未対応ですので,
JA	ZZZZ010241	23480		    CURLコマンド等別の方法で対応して下さい。★　VER36.1
JA	ZZZZ010241	23490		  パラメータの日本語_URL_ENCODE(UTF-8)でエンコードして下さい.
JA	ZZZZ010241	23500		  文字コードはUTF-8のみを対象とします。(VER24.1)
JA	ZZZZ010241	23510		6.54.3)**-Webブラウザでホームページを表示します。VER36.1
JA	ZZZZ010241	23520		***=WEB{URL}
JA	ZZZZ010241	23530		6.55.1)**-書き込みファイルを開きます。
JA	ZZZZ010241	23540		***=WRITE_OPEN{名前,ファイル名[,OT,ADD] [,エンコード] <新>
JA	ZZZZ010241	23550		***   [,レコード区切り指定]}
JA	ZZZZ010241	23560		  ファイル名のみの場合は作業ディレクトリのファイルです。
JA	ZZZZ010241	23570		  ':\/'が含まれていると作業ディレクトリでは無くなります。
JA	ZZZZ010241	23580		  WRITE_OPENはジョブ単位以外はプログラム単位に使えます。
JA	ZZZZ010241	23590		  WRITE_OPENはOT以降順不同です。
JA	ZZZZ010241	23600		  レコード区切り指定はU又はW。　(VER7.15以上）
JA	ZZZZ010241	23610		  OTの場合ファイルがあっても上書きします。
JA	ZZZZ010241	23620		　ADDでファイルの最後に追加します。
JA	ZZZZ010241	23630		　ADD,OTが無い場合はファイルが有るとエラーになります。
JA	ZZZZ010241	23640		  ☆時間起動ジョブはファイル名に:、/、￥は書けません。
JA	ZZZZ010241	23650		　ファイル名の拡張子が'CSV'の時はCSV形式で書き、
JA	ZZZZ010241	23660		　以外はTAB区切りで書きます。
JA	ZZZZ010241	23670		　データにTABがあっても何もしないでそのまま書きます。
JA	ZZZZ010241	23680		　エンコードは次のように判断下さい。
JA	ZZZZ010241	23690		　(1)I言語で書き、I言語でのみで読む場合 ===========>空白
JA	ZZZZ010241	23700		    （BOM無しのUTF-8)
JA	ZZZZ010241	23710		　(2)OS依存のバッチやスクリプトファイル作成 ======>"/"
JA	ZZZZ010241	23720		     (WinsowsはSHIFT_JIS,UnixはBOM無しのUTF-8)
JA	ZZZZ010241	23730		  (3)上記以外で色々な使い方をする場合 ============>"UTF-8,W"
JA	ZZZZ010241	23740		     (BOM付きUTF-8でレコードの区切りをWindows用とする）
JA	ZZZZ010241	23750		     (Unix用レコードの区切りはWindowsで問題が出る場合有り）
JA	ZZZZ010241	23760		     (IPRINT?.EXEで使うファイルはこれを推奨します）
JA	ZZZZ010241	23770		  注意:C++はLinuxはUTF-8,WindowsはUTF-8かSHIFT_JISのみです。
JA	ZZZZ010241	23780		6.55.2)**-書き込みファイルにデータを書きます。
JA	ZZZZ010241	23790		***=WRITE{名前,データ名,..} <新>
JA	ZZZZ010241	23800		6.55.3)**-書き込みファイルを閉じます。
JA	ZZZZ010241	23810		***=WRITE_CLOSE{名前}  <新>
JA	ZZZZ010241	23820		6.56)**-作業ディレクトリ上でZIP形式で圧縮又は解凍をします。
JA	ZZZZ010241	23830		***=ZIP{名前}                                    VER13.1
JA	ZZZZ010241	23840		  名前の最後が.zipの時は.zipを取ったディレクトリに解凍します.
JA	ZZZZ010241	23850		  ☆注意:同名のディレクトリが存在する時は事前に削除されます。
JA	ZZZZ010241	23860		  名前の最後が.zipでない時は.zipを付けた名前に圧縮します。
JA	ZZZZ010241	23870		  ☆注意:同名のファイルが存在する時は事前に削除されます。
JA	ZZZZ010241	23880		6.58)**-RDMSのログインを作成します。
JA	ZZZZ010241	23890		  (パスワードを設定しないでも作成出来る為の物です）
JA	ZZZZ010241	23900		***=ZZ_ADDLOGIN{[LINK,TEST,REAL]}{ログイン名}{その他};(VER24)
JA	ZZZZ010241	23910		   その他はLは空白かサーバー名、Mはデータベース名、
JA	ZZZZ010241	23920		   Oはテーブルスペース名、Iは不要,
JA	ZZZZ010241	23930		   PはCREATEDB等の付加属性を設定します。
JA	ZZZZ010241	23940		   (D,F,Hは動きません）
JA	ZZZZ010241	23950		6.59)**-SON又はXMLフォーマットから値を抜き出します。(VER24)
JA	ZZZZ010241	23960		***=JSON_BEGIN{元データ元データ,データ名1[,データ名2]}
JA	ZZZZ010241	23970		***=JSON_CONTINUE{元データ}
JA	ZZZZ010241	23980		***=JSON{}
JA	ZZZZ010241	23990		***=JSON_END{}
JA	ZZZZ010241	24000		***=XML_BEGIN{元データ元データ,データ名1[,データ名2]}
JA	ZZZZ010241	24010		***=XML_CONTINUE{元データ}
JA	ZZZZ010241	24020		***=XML{}
JA	ZZZZ010241	24030		***=XML_END{}
JA	ZZZZ010241	24040		    JSON_BEGINで元データをセットします。
JA	ZZZZ010241	24050		       データ名の最初のピリオッド以降をキー名とします。
JA	ZZZZ010241	24060		       JSON_END{}前に再度実行すると入れ子になります。
JA	ZZZZ010241	24070		    JSONで値を抜き出します。全部揃った場合は_JSONが'1'と成る
JA	ZZZZ010241	24080		      ので'1'の場合に処理をして再度JSON{}を実行します。
JA	ZZZZ010241	24090		    JSON_CONTINUE{元データ}で元データを追加して継続します。
JA	ZZZZ010241	24100		       _JSONが'1'以外の時はこの命令で元データを追加します。
JA	ZZZZ010241	24110		    JSON_END{}で抜き出しを終了します。
JA	ZZZZ010241	24120		    JSONの配列データはそのまま扱います。
JA	ZZZZ010241	24130		6.60)**-作業ディレクトリ上のファイルのなまえを変更します。
JA	ZZZZ010241	24140		***=RENAME_FILE{変更後のファイル名,変更前のファイル名};
JA	ZZZZ010241	24150		===========================================================
JA	ZZZZ010241	24160		7)**-データ辞書のチェックの説明
JA	ZZZZ010241	24170		◆チェックでチェック61からチェック66までの構成が変わります。
JA	ZZZZ010241	24180		①空白--何も構成しません。
JA	ZZZZ010241	24190		②CHECK[1]--チェック61からチェック66までをCHECK1とします。
JA	ZZZZ010241	24200		③CHECK2--チェック61からチェック66までをCHECK2とします。
JA	ZZZZ010241	24210		④SELECT1--CHECK2にSELECT文を列名1個(1)で作ります。
JA	ZZZZ010241	24220		 "SELECT DISTINCT ?CHECK62?  FROM ?CHECK61?
JA	ZZZZ010241	24230		    WHERE Z_CANCEL=' '
JA	ZZZZ010241	24240		    [AND(?CHECK63??CHECK64??CHECK65??CHECK66?)]
JA	ZZZZ010241	24250		    ORDER BY ソート順" /* ソート順はSELECT22が2で以外は1 */
JA	ZZZZ010241	24260		 ★注意：_Xデータ名は使えません。
JA	ZZZZ010241	24270		⑤SELECT21,22--CHECK2にSELECT文を列名1個(2)で作ります。
JA	ZZZZ010241	24280		 "SELECT DISTINCT ?_Q?_X?_Q?.CHECK62,?_Q?_X?_Q?.?CHECK63?
JA	ZZZZ010241	24290		   FROM ?CHECK61? ?_Q?_X?_Q?
JA	ZZZZ010241	24300		    WHERE ?_Q?_X?_Q?.Z_CANCEL=' '
JA	ZZZZ010241	24310		    [AND(?CHECK64??CHECK65??CHECK66?)]
JA	ZZZZ010241	24320		    ORDER BY ソート順" /* ソート順はSELECT22が2で以外は1 */
JA	ZZZZ010241	24330		  ○SECTIONも作ります。
JA	ZZZZ010241	24340		   "SET{?_Q?_SET?_Q??_Q?_X?_Q?.?CHECK63?=_CHECK2};"
JA	ZZZZ010241	24350		⑥SECTION--チェック61からチェック66までをSECTIONとします。
JA	ZZZZ010241	24360		⑦SECTION1--SECTIONに命令文を作ります。
JA	ZZZZ010241	24370		3"SQL_SET{}{SELECT DISTINCT ' ' FROM ?CHECK61?
JA	ZZZZ010241	24380		   WHERE ?CHECK62?='?_Q?_DATA?_Q?'
JA	ZZZZ010241	24390		    [AND(?CHECK63?)?CHECK64??CHECK65??CHECK66?)]
JA	ZZZZ010241	24400		   AND Z_CANCEL=' '}ERROR{};"
JA	ZZZZ010241	24410		 ★注意：_Xデータ名は使えません。
JA	ZZZZ010241	24420		⑧SECTION2--SECTIONに命令文を作ります。
JA	ZZZZ010241	24430		 "SQL_SET{?_Q?_SET?_Q??_Q?_X?_Q?.?CHECK63?}
JA	ZZZZ010241	24440		  {SELECT DISTINCT ?_Q?_X?_Q?.?CHECK63?
JA	ZZZZ010241	24450		   FROM ?CHECK61? ?_Q?_X?_Q?
JA	ZZZZ010241	24460		   WHERE ?_Q?_X?_Q?.?CHECK62?='?_Q?_DATA?_Q?'
JA	ZZZZ010241	24470		   [AND(?CHECK64??CHECK65??CHECK66?)]
JA	ZZZZ010241	24480		   AND ?_Q?_X?_Q?.Z_CANCEL=' '}ERROR{};"
JA	ZZZZ010241	24490		===========================================================
JA	ZZZZ010241	24500		8)**-ＣＧＩの文法
JA	ZZZZ010241	24510		◆HTMLの文字コードはすべてUTF-8と見なします。
JA	ZZZZ010241	24520		◆ITIMEWD.EXEでコマンドラインパラメータが３個以下は
JA	ZZZZ010241	24530		 CGIプログラムと判定します。  (VER20.1)
JA	ZZZZ010241	24540		 IISはパラメータにシステム名。  (VER20.1)(VER35.1)
JA	ZZZZ010241	24550		 Apacheはパラメータにシステム名と%0(Uは$0)を付けます(VER20.1)
JA	ZZZZ010241	24560		◆PATH_INFOの設定
JA	ZZZZ010241	24570		　_CGI_INFOにPATH_INFOの内容を設定します。
JA	ZZZZ010241	24580		　最後のスラッシュの次が'real'か'test'のみ有効とします。
JA	ZZZZ010241	24590		（test_はテストデータベース,real_本番データベースを使用）
JA	ZZZZ010241	24600		　続く１文字は'_'固定とします。
JA	ZZZZ010241	24610		　続く2文字を言語とします。(ja,en)
JA	ZZZZ010241	24620		　続く１文字は'_'固定とします。
JA	ZZZZ010241	24630		　_CGI_INFO_BEGINにここまでを設定します。
JA	ZZZZ010241	24640		　続く10文字をジョブ名と見なします。
JA	ZZZZ010241	24650		　_CGI_INFO_JOBに設定します。　(_JOBに設定)
JA	ZZZZ010241	24660		　最後が拡張子で先頭に'.'が付いています。
JA	ZZZZ010241	24670		　_CGI_INFO_ENDに設定されます。
JA	ZZZZ010241	24680		　例）'.../real_ja_zzzz800101.i1'
JA	ZZZZ010241	24690		　(formのaction=またはaのhref=で設定します）
JA	ZZZZ010241	24700		◆受け取ったデータはname=を'#名前'としvalue=を内容とする物
JA	ZZZZ010241	24710		　としますが、name=内に=がある場合はvalue=を無視しname=内で
JA	ZZZZ010241	24720		  name=valueとします、なお','で複数指定する事も可能です。
JA	ZZZZ010241	24730		　名前自体はすべて大文字に変換されます。
JA	ZZZZ010241	24740		　特別にname=が"_JOB"の場合は内容をジョブ名に設定します。
JA	ZZZZ010241	24750		　（複数ある場合は最後が有効となります）
JA	ZZZZ010241	24760		　メニューの認証が'X'以外はname=が"_PERSON"と"_PASSWORD"
JA	ZZZZ010241	24770		　から社員とパスワードを入力し認証を行い認証されない場合は
JA	ZZZZ010241	24780		　BODY{}を実行しません。　VER20.1
JA	ZZZZ010241	24790		◆ジョブ名は10文字で5,6文字目が80のみ有効とします。
JA	ZZZZ010241	24800		◆命令
JA	ZZZZ010241	24810		8.1)**-HTMLのHEADに書き出します。
JA	ZZZZ010241	24820		***=HEAD{内容}
JA	ZZZZ010241	24830		8.2)**-HTMLのBODYに書き出します。
JA	ZZZZ010241	24840		***=BODY{内容}
JA	ZZZZ010241	24850		***=BODY_FORM{内容}
JA	ZZZZ010241	24860		    BODY_FORMはFORMをHTMLに書きだします。
JA	ZZZZ010241	24870		    メニューの認証でパスワードが必要な場合は最後に
JA	ZZZZ010241	24880		      PERSONとPASSWORDを付加してHTMLに書きだします。
JA	ZZZZ010241	24890		      尚、BODY_FORMが無い場合はBODY_FORMを最後に書きます。
JA	ZZZZ010241	24900		    ★注意：HTTPの場合はパスワードがネットワークにそのまま流
JA	ZZZZ010241	24910		      れるのでHTTPS等で暗号化する必要があります。
JA	ZZZZ010241	24920		8.3)**-HEAD,BODY共通の説明。
JA	ZZZZ010241	24930		　HEAD{}でヘッダー部続いてBODY{}でボデー部を出力します。
JA	ZZZZ010241	24940		　この内容は小文字に変換しますので、大文字を使用する場合は
JA	ZZZZ010241	24950		　?データ名?で与えて下さい。
JA	ZZZZ010241	24960		◆標準出力の方法
JA	ZZZZ010241	24970		　処理前に<head>までを出力します。
JA	ZZZZ010241	24980		　HEAD{}でヘッダー部の出力をし、続いて最初のBODY{}で
JA	ZZZZ010241	24990		　</head><body>を付加して出力します。
JA	ZZZZ010241	25000		　最後に</body></html>が自動的に付加されます。
JA	ZZZZ010241	25010		===========================================================
JA	ZZZZ010241	25020		9)**-特殊処理用。
JA	ZZZZ010241	25030		  (ZZZZ01,ZZZZ99が先頭のジョブとファイル起動ジョブのみ可能）
JA	ZZZZ010241	25040		  (VER1は全SQL対象でしたが、VER2はSQL=のみで非互換です）
JA	ZZZZ010241	25050		　(VER3以降メニューのパーミッションがZZZZでも可能）
JA	ZZZZ010241	25060		*** JOB_PART=許可区分--許可区分を変更します。
JA	ZZZZ010241	25070		メニューの許可がZZZZでメニュー認証がX以外のみ設定可能です。
JA	ZZZZ010241	25080		*** JOB_PERMISSION=許可--許可を変更します。
JA	ZZZZ010241	25090		メニューの許可がZZZZでメニュー認証がX以外のみ設定可能です。
JA	ZZZZ010241	25100		 利用者の許可がZZZZ以外は利用者許可のみ可能です。(VER8.3)
JA	ZZZZ010241	25110		◆_PASSWORD--SET{_PASSWORD=使用者+パスワード}で暗号化。
JA	ZZZZ010241	25120		　(ZZZZ010121とZZZZ010124とインストールプログラムのみ可能)
JA	ZZZZ010241	25130		◆_HEAD--=SET{_HEAD='文字'}でタイトルバーに文字を表示します。
JA	ZZZZ010241	25140		◆_TITLE--SET{_TITLE1='文字'}で１行目に文字を表示します。
JA	ZZZZ010241	25150		◆=SET{_REAL_TEST='ALTER'}='REAL'='TEST'--本番,テストを変更。
JA	ZZZZ010241	25160		◆サーバーで実行しジョブ名がZZZZ010540の時に
JA	ZZZZ010241	25170		  (VER3でジョブ名変更）
JA	ZZZZ010241	25180		　SQL{},COMMAND{}内の*TEST*又は*REAL*又は*LINK*の文字
JA	ZZZZ010241	25190		　は設定済みパスワードで置き換えます。
JA	ZZZZ010241	25200		9.1)**-メニューデータを_JOBを元に受信します。
JA	ZZZZ010241	25210		***=SQL1_MENU{メニュー数};
JA	ZZZZ010241	25220		◆プログラム起動時パラメータを２個VERSIONとするとI\TMP上に
JA	ZZZZ010241	25230		　VERSION_MENU.TXTまたはVERSION_TIME.TXTにバージョンを
JA	ZZZZ010241	25240		　出力します。
JA	ZZZZ010241	25250		◆起動パラメータにZZZZZZ_ABORT=NOを記入するとWindowsVista等で
JA	ZZZZ010241	25260		  サービスからIMENU?.EXEを起動する場合を想定し,異常終了し
JA	ZZZZ010241	25270		  ても画面を表示してプログラムが停止しないようにし、エラーを
JA	ZZZZ010241	25280		  \I\TMP\ZZZZZZ_ABORT.TXTに書いて終了します。
JA	ZZZZ010241	25290		===========================================================
JA	ZZZZ010241	25300		10)**-ファイル起動ジョブの場合のみ有効なコマンド
JA	ZZZZ010241	25310		***=MAKE_DIR{ディレクトリ}
JA	ZZZZ010241	25320		◎ディレクトリーを作ります。
JA	ZZZZ010241	25330		===========================================================
JA	ZZZZ010241	25340		11)**-インストール時のみ使用可能な機能。
JA	ZZZZ010241	25350		◆_PASSWORD_LINK--リンクパスワードを暗号化します。
JA	ZZZZ010241	25360		◆_PASSWORD_REAL--本番パスワードを暗号化します。
JA	ZZZZ010241	25370		◆_PASSWORD_TEST--テストパスワードを暗号化します。
JA	ZZZZ010241	25380		<削除>◆_REGISTRY--SET{..=KEY+SUBKEY}でLOCALMACHINEから読む。
JA	ZZZZ010241	25390		<削除>   インストール以外でも動きます。(VER24.1)
JA	ZZZZ010241	25400		<削除>  *注意*JAVA版は動きません。
JA	ZZZZ010241	25410		◆_REGISTRY_WRITE-SET{..=SUBKEY+数値}でLOCALMACHINEに書く。
JA	ZZZZ010241	25420		  _REGISTRYで事前にKEYを設定します。
JA	ZZZZ010241	25430		  REG_DOWRDの数値データのみ書けます。
JA	ZZZZ010241	25440		  *注意*JAVA版は動きません。
JA	ZZZZ010241	25450		***=WRITE_SYSTEM{}--システムのオプションファイルを書き出す。
JA	ZZZZ010241	25460		===========================================================
JA	ZZZZ010241	25470		12)**-その他の提供ツール。
JA	ZZZZ010241	25480		12-1)**-VIEW
JA	ZZZZ010241	25490		◆?_MP_ZZZZ?ZZ_M_許可_COLUMN_VIEW
JA	ZZZZ010241	25500		◇マスタデータベース内の列情報です。（許可単位）
JA	ZZZZ010241	25510		◆?_MP_ZZZZ?ZZ_M_許可_GRANT_VIEW
JA	ZZZZ010241	25520		◇マスタデータベースの権限情報です。（許可単位）
JA	ZZZZ010241	25530		◆?_MP_ZZZZ?ZZ_M_許可_INDEX_VIEW
JA	ZZZZ010241	25540		◇マスタデータベースのインデックス情報です。（許可単位）
JA	ZZZZ010241	25550		◆?_MP_ZZZZ?ZZ_M_許可_OBJECT_VIEW
JA	ZZZZ010241	25560		◇マスタデータベースのオブジェクト情報です。（許可単位）
JA	ZZZZ010241	25570		◆?_MP_ZZZZ?ZZ_W_許可_COLUMN_VIEW
JA	ZZZZ010241	25580		◇ワークデータベース内の列情報です。（許可単位）
JA	ZZZZ010241	25590		◆?_MP_ZZZZ?ZZ_W_許可_GRANT_VIEW
JA	ZZZZ010241	25600		◇ワークデータベースの権限情報です。（許可単位）
JA	ZZZZ010241	25610		◆?_MP_ZZZZ?ZZ_W_許可_INDEX_VIEW
JA	ZZZZ010241	25620		◇ワークデータベースのインデックス情報です。（許可単位）
JA	ZZZZ010241	25630		◆?_MP_ZZZZ?ZZ_W_許可_OBJECT_VIEW
JA	ZZZZ010241	25640		◇ワークデータベースのオブジェクト情報です。（許可単位）
JA	ZZZZ010241	25650		12-2)**-クライアント用ファイルの説明。(\I\BIN?_IV?内）
JA	ZZZZ010241	25660		◆ICHARTWD.EXE
JA	ZZZZ010241	25670		◇汎用グラフ表示プログラムです。
JA	ZZZZ010241	25680		◆IPRINTWD.EXE
JA	ZZZZ010241	25690		◇汎用印刷プログラムです。
JA	ZZZZ010241	25700		◆サーバ―名_システム名.I
JA	ZZZZ010241	25710		◇サーバー別、システム別の起動用パラメータファイルです。
JA	ZZZZ010241	25720		◆I_MENU.TXT
JA	ZZZZ010241	25730		◇メニュー表示用I言語プログラムです。
JA	ZZZZ010241	25740		◆I_LANG言語W.TXT
JA	ZZZZ010241	25750		◇言語別メッセージ用ファイルです。
JA	ZZZZ010241	25760		◆IMENUWD.EXE
JA	ZZZZ010241	25770		◇クライアント用I言語実行プログラムです。(画面使用）
JA	ZZZZ010241	25780		◆IROOTWD.EXE
JA	ZZZZ010241	25790		◇管理者権限で実行させるプログラムです。
JA	ZZZZ010241	25800		12-3)**-サーバー用ファイルの説明1。\I\I.システム名\BIN内
JA	ZZZZ010241	25810		◆サーバ―名_システム名.CFG
JA	ZZZZ010241	25820		◇インストール情報ファイルです。
JA	ZZZZ010241	25830		◆サーバ―名_システム名.I
JA	ZZZZ010241	25840		◇時間起動用のパラメータファイルです。
JA	ZZZZ010241	25850		◆ITIMEWD.EXE
JA	ZZZZ010241	25860		◇サーバー用I言語実行プログラムです。（画面未使用、バッチ用）
JA	ZZZZ010241	25870		12-4)**-サーバー用ファイルの説明2。\I\I.システム名\BAT内
JA	ZZZZ010241	25880		◆ZZZZZZBACKUP(.BAT)    VER17
JA	ZZZZ010241	25890		◇データベースとシステムのバックアップ用バッチファイルです。
JA	ZZZZ010241	25900		◆ZZZZZZCPTR(.BAT)
JA	ZZZZ010241	25910		◇テストから本番にファイルを移行するバッチファイルです。
JA	ZZZZ010241	25920		◆ZZZZZZETC(.BAT)
JA	ZZZZ010241	25930		◇色々の作業をするバッチファイルです。
JA	ZZZZ010241	25940		◆ZZZZZZTIME(.BAT)
JA	ZZZZ010241	25950		◇時間起動（バッチ処理）用バッチファイルです。
JA	ZZZZ010241	25960		12-5)**-サーバー用ファイルの説明3。\I内
JA	ZZZZ010241	25970		◆?_IV?ADD.BAT
JA	ZZZZ010241	25980		◇サービス登録用バッチファイルです。
JA	ZZZZ010241	25990		◆?_IV?REMOVE.BAT
JA	ZZZZ010241	26000		◇サービス削除用バッチファイルです。
JA	ZZZZ010241	26010		◆ISRVCWD.EXE
JA	ZZZZ010241	26020		◇SERVER_BAT,_GET,_PUT実行用サービスプログラムです。
JA	ZZZZ010241	26030		12-6)**-サーバー用ファイルの説明4。\I内
JA	ZZZZ010241	26040		◆?_IV?RESCUE.BAT/.TXT
JA	ZZZZ010241	26050		◇データーベース復元用ファイルです。
JA	ZZZZ010241	26060		◆?_IV?UNINSTALL.BAT/.TXT
JA	ZZZZ010241	26070		◇システムアンインストール用ファイルです。
JA	ZZZZ010241	26080		13)エラーメッセージの主な意味。
JA	ZZZZ010241	26090		◆bad (対象) "内容"--対象の内容が正しくない。
JA	ZZZZ010241	26100		◆find (対象) "内容"--対象に内容が有る。
JA	ZZZZ010241	26110		◆equal (対象1,対象2) (内容=値)--対象の内容が同じ。
JA	ZZZZ010241	26120		◆not after (命令)--その命令の後で無い。
JA	ZZZZ010241	26130		◆not equal (対象1,対象2) (内容!=値)--対象の内容が不一致。
JA	ZZZZ010241	26140		◆not found (対象) "内容"--対象の内容が見つからない。
JA	ZZZZ010241	26150		◆not use (環境) "内容"--その環境下では使えない。
JA	ZZZZ010241	26160		◆not 種類 (対象) "内容"--対象の内容がその種類では無い。
JA	ZZZZ010241	26170		◆over (対象) (内容>値)--内容が値より大きい。
JA	ZZZZ010241	26180		◆same (対象) "内容"--対象の内容が既に同じ物が有る。
JA	ZZZZ010241	26190		◆under (対象) (内容<値)--内容が値より小さい。
JA	ZZZZ010241	26200		◆(対象) is null--対象に値が無い。
JA	ZZZZ010241	26210		◆"内容" not in(値,...) (対象)-内容が値の中に無い。
JA	ZZZZ010241	26220		◆その他のエラー--上記に該当しないエラー。
JA	ZZZZ010241	26230		===========================================================
JA	ZZZZ010241	26240		以上
JA	ZZZZ010241	26250		ALL RIGHTS RESERVED,COPYRIGHT(C)2002-2015 NOBUMICHI HARASAWA
JA	ZZZZ010242	9		<2018-10-11に保管 旧文法書>
JA	ZZZZ010242	10		I言語VER27.1 の文法書      2018年08月31日修正版
JA	ZZZZ010242	20		 　　　　　　    　　 　　 2002年04月19日作成 (作者:原沢信道)
JA	ZZZZ010242	30		=============================================================
JA	ZZZZ010242	40		 　操作で「FF *-[Enter]」とすると,目次として表示できます。
JA	ZZZZ010242	50		 　操作で「FF **[Enter]」とすると,目次と命令が表示できます。
JA	ZZZZ010242	60		 　操作で「FF ***[Enter]」とすると,命令が表示できます。
JA	ZZZZ010242	70		=============================================================
JA	ZZZZ010242	80		1)**-はじめに
JA	ZZZZ010242	90		1.1)I言語のIはInstantのIです,コンピュータのプログラムを
JA	ZZZZ010242	100		  　誰でも早く作る事ができる簡易言語付きのツール(道具)です。
JA	ZZZZ010242	110		1.2)データ(情報)はリレーショナルデータベースの
JA	ZZZZ010242	120		    テーブル(２次元の表)上に持ちます。
JA	ZZZZ010242	130		1.3)プログラム(処理)はSQLとI言語で作ります。
JA	ZZZZ010242	140		1.4)SQLに不足の機能をI言語で対応しています。
JA	ZZZZ010242	150		1.5)プログラム群の単位を10文字で表し,それをジョブと呼びます。
JA	ZZZZ010242	160		1.6)PROGRAM=の間が１つのプログラム(画面)となります。
JA	ZZZZ010242	170		1.7)'='で開始する命令の連続をセクションと呼びます。
JA	ZZZZ010242	180		1.8)メニュー起動するジョブを"メニュー起動ジョブ"と呼びます。
JA	ZZZZ010242	190		 （メニューもプログラムもデータベースから読み込みます,ただし
JA	ZZZZ010242	200		  ,メニュー表示のプログラムは\I\BINI?_IV?\I_MENU.TXTです)
JA	ZZZZ010242	210		  ジョブ名の5文字目が4以下がメニュー起動ジョブ用です。
JA	ZZZZ010242	220		  通常はジョブ名の先頭が'ZZZZ'の物を使用します。
JA	ZZZZ010242	230		　=EXE_I{ジョブ名}{パラメータ};又は
JA	ZZZZ010242	240		　=EXE{?_EXE_NAME?}{言語　?_EXE_OPTION?
JA	ZZZZ010242	250		　　[ジョブ名　付加属性　共通変数値用データ名=値 ...]};
JA	ZZZZ010242	260		  ◆?_EXE_OPTION?
JA	ZZZZ010242	270		    DB接続秒/SQL実行秒[/TRACE][/拡大] サーバー名_システム名.I
JA	ZZZZ010242	280		      (拡大で百分率を指定し一時的に画面を拡大出来ます)VER24.1
JA	ZZZZ010242	290		  ◆付加属性
JA	ZZZZ010242	300		　　　REAL--本番環境で実行します。
JA	ZZZZ010242	310		　　　REAL_TRACE--本番環境で実行履歴を取ります。
JA	ZZZZ010242	320		　　　TEST--テスト環境で実行します。
JA	ZZZZ010242	330		　　　TEST_TRACE--テスト環境で実行履歴を取ります。
JA	ZZZZ010242	340		  ◆値が次の文字の場合は'#'+英字で与えます。(_ARGで変換可能)
JA	ZZZZ010242	350		    "=#Q,%=#P,!=#E,`=#A,\=#Y,$=#D,空白=#S,#=#C
JA	ZZZZ010242	360		  ◆ツールが使用する共通変数値用データ名を下記に示します。
JA	ZZZZ010242	370		    (#ZZZZZZで始まるものはツール専用です）
JA	ZZZZ010242	380		　　#ZZZZZZ_ARG_PASS--受け渡すパス文字。
JA	ZZZZ010242	390		 　（ツール以外は扱えません）
JA	ZZZZ010242	400		　　#ZZZZZZ_ARG_PERSON--使用者。（ツールが受け取る)
JA	ZZZZ010242	410		　　#ZZZZZZ_ARG_PERSON_NAME--使用者名称。(ツールが受け取る)
JA	ZZZZ010242	420		　　#ZZZZZZ_ARG_PERMISSIN--使用者許可。(ツールが受け取る)
JA	ZZZZ010242	430		　　#ZZZZZZ_ARG_BEGIN_ENTER--CONTROL=BEGIN_ENTER設定用です。
JA	ZZZZ010242	440		　　#ZZZZZZ_ARG_JOB--ジョブ名受け渡し用です。
JA	ZZZZ010242	450		　　#ZZZZZZ_ARG_RETRY--エラー時回数分再起動します。(v7.25)
JA	ZZZZ010242	460		　　(サービス立ち上げ待ちでスタートアップでのエラー回避用)
JA	ZZZZ010242	470		　　#ZZZZZZ_ARG_SLEEP--再起動時間を秒数分遅らせます。(v7.25)
JA	ZZZZ010242	480		　　(サービス立ち上げ待ちでスタートアップでのエラー回避用)
JA	ZZZZ010242	490		　◆言語の指定で言語関連の情報をファイルから読み込みます。
JA	ZZZZ010242	500		　  ファイル名が?_IV?LANG?言語??_OS?.TXTです。
JA	ZZZZ010242	510		　  先頭はFONT=Font名,C#FontSize,C#Offest,JavaSize,JavaOffest
JA	ZZZZ010242	520		　  ,C#横幅補正,C#縦幅補正,Java横幅補正,Java縦幅補正
JA	ZZZZ010242	530		　  ,横幅文字初期値,縦幅文字初期値,拡大百分率
JA	ZZZZ010242	540		　  でクライアント単位でフォント,フォントサイズ,
JA	ZZZZ010242	550		　  文字の表示の上下位置, 画面の縦横の幅補正,
JA	ZZZZ010242	560		　  縦横の文字の初期値,拡大百分率が設定できます。
JA	ZZZZ010242	570		　  ２行目以降は言語別のメッセージです。
JA	ZZZZ010242	580		1.9)時間で起動するジョブを"時間起動ジョブ"と呼びます。
JA	ZZZZ010242	590		  ジョブ名の5文字目が5以上が時間起動ジョブ用です。
JA	ZZZZ010242	600		  ジョブ名の先頭8文字が同じジョブを連続で実行します。
JA	ZZZZ010242	610		　ジョブ名の先頭8文字をジョブグループと呼びます。
JA	ZZZZ010242	620		  ★特別に5,6文字目が8,0(ZZZZZZ_MENU1が80）の場合は
JA	ZZZZ010242	630		　　インターネットのCGI起動用ジョブと成ります。
JA	ZZZZ010242	640		  =SERVER_BAT{ZZZZZZTIME}{処理};
JA	ZZZZ010242	650		  ◆処理
JA	ZZZZ010242	660		　時 分 TODAY / LINUXキュー--時間起動予約します。
JA	ZZZZ010242	670		　(VER7.15でTODAYとLINUXキューを追加しジョブグループを
JA	ZZZZ010242	680		　 実行時に決めるように'/'に変更）
JA	ZZZZ010242	690		  時 分 NEXT 日 LINUXキュー-該当日にZZZZ9999を起動予約します。
JA	ZZZZ010242	700		　(VER7.15でLINUXのキューを追加）
JA	ZZZZ010242	710		  時 分 ジョブ　オプション [起動コンピュータ名]
JA	ZZZZ010242	720		　　　　　　　　　　　　　　　　　　--ジョブを即実行します。
JA	ZZZZ010242	730		　◆オプション
JA	ZZZZ010242	740		　　　ALL--全ジョブ（先頭８文字が同じ）を実行します。
JA	ZZZZ010242	750		　　　ONE--1ジョブのみ実行します。
JA	ZZZZ010242	760		　　　TRACE--実行履歴付で1ジョブのみ実行します。
JA	ZZZZ010242	770		　　　上記以外 "エラー内容"--エラーとなります。
JA	ZZZZ010242	780		1.10)ファイルから読むジョブを"ファイル起動ジョブ"と呼びます。
JA	ZZZZ010242	790		 　　ジョブ名は'ZZZZ000000'の固定です。
JA	ZZZZ010242	800		     ?_OS_DRIVE?\I\BIN?_IV?\?_IV?MENUW4.EXE 変数
JA	ZZZZ010242	810		 　　変数=言語 DB接続秒/SQL実行秒[/TRACE] プログラム1.TXT ..
JA	ZZZZ010242	820		     (ファイルの拡張子がI以外および変数の個数が1と0の時も
JA	ZZZZ010242	830		　　　ファイル起動ジョブと見なします、
JA	ZZZZ010242	840		　　　0の時はI.TXTの固定ファイル名です
JA	ZZZZ010242	850		　　　1個の時で拡張子を除くファイル名の最後から3文字目が
JA	ZZZZ010242	860		　　　アンダーバーの場合は最後の2文字で言語を表します）
JA	ZZZZ010242	870		1.11)文字列は「'」で囲みます。(数値は「'」で囲む必要はなし）
JA	ZZZZ010242	880		　☆誤動作防止のため文字列は次の行に継続しないようにします。
JA	ZZZZ010242	890		　　（一行で「'」を偶数個にして下さい）
JA	ZZZZ010242	900		  ☆文字列の中の「'」は2個連続して記入します。
JA	ZZZZ010242	910		1.12)16進数値は「0X数」(数は1から4桁の[0-9A-F])です。
JA	ZZZZ010242	920		1.13)データの部分指定は
JA	ZZZZ010242	930		    「データ名[先頭UNICODE位置;UNICODE文字数]」です。
JA	ZZZZ010242	940		     「;UNICODE文字数」を省略した場合は最後までです。
JA	ZZZZ010242	950		　　UNICODEはサロゲートペアと結合文字も１文字と数います。
JA	ZZZZ010242	960		　　物理的な文字数はUNICODE数より多い場合があります。
JA	ZZZZ010242	970		　　物理的な文字数以下としたい場合は
JA	ZZZZ010242	980		    「データ名[先頭UNICODE位置;;物理文字数]」とします。
JA	ZZZZ010242	990		       (画面表示上の長さではありません）
JA	ZZZZ010242	1000		    位置と文字数は引き算(-)を1個使用できます。(VER15.1)
JA	ZZZZ010242	1010		1.14.1) 「データ名@COLOR」は色を設定。(読む事は出来ません)
JA	ZZZZ010242	1020		1.14.2) 「データ名@COUNT」はUNICODEでの実際の文字数です。
JA	ZZZZ010242	1030		　　　　(サロゲートペアと結合文字も１文字とします）
JA	ZZZZ010242	1040		1.14.3) 「データ名@FORM_LENGTH」は画面表示の長さです。(BYTE)
JA	ZZZZ010242	1050		1.14.4) 「データ名@LENGTH」は実際の物理文字数です。(UNICODE)
JA	ZZZZ010242	1060		1.14.5) 「データ名@LENGTH1」は長さ１、作業データのみ変更可。
JA	ZZZZ010242	1070		1.14.6) 「データ名@LENGTH2」は長さ２、数値以外変更出来ます。
JA	ZZZZ010242	1080		1.14.7) 「データ名@MARK1」は属性1、変更はできません。
JA	ZZZZ010242	1090		1.14.8) 「データ名@MARK2」は属性2,'N'以外の変更が出来ます。
JA	ZZZZ010242	1100		1.14.9) 「データ名@MARK3」は属性3,変更も出来ます。
JA	ZZZZ010242	1110		1.14.10)「データ名@MARK4」は属性4,変更も出来ます。
JA	ZZZZ010242	1120		1.14.11)「データ名@OLD」は初期のデータの値です。
JA	ZZZZ010242	1130		       (SET=は最初のSET=の開始時に、
JA	ZZZZ010242	1140		        DATA=はSTART（操作）開始時に値が設定されます）
JA	ZZZZ010242	1150		1.14.12)「データ名@SELECT」はSELECT=の内容です。変更不可。
JA	ZZZZ010242	1160		1.14.13)「データ名@TITLE」はタイトルです。変更不可。(VER7.30)
JA	ZZZZ010242	1170		1.14.14)「データ名@TYPE1」は型1、変更も出来ます。
JA	ZZZZ010242	1180		1.14.15)「データ名@TYPE2」は型2、変更も出来ます。
JA	ZZZZ010242	1190		1.14.16)「データ名@WHERE」は_WHERE数で使用します。 (VER5.11)
JA	ZZZZ010242	1200		1.14.17)「データ名@名前」で"_名前"と同じ動きをします (VER8.4)
JA	ZZZZ010242	1210		1.14.17.01)「データ名@ARG」
JA	ZZZZ010242	1220		1.14.17.02)「データ名@CODE」
JA	ZZZZ010242	1230		1.14.17.03)「データ名@CODE39」
JA	ZZZZ010242	1240		1.14.17.04)「データ名@DATE_GOOD」
JA	ZZZZ010242	1250		1.14.17.05)「データ名@DATETIME」
JA	ZZZZ010242	1260		1.14.17.06)「データ名@DATETIME_GOOD」
JA	ZZZZ010242	1270		1.14.17.07)「データ名@DIGIT11」
JA	ZZZZ010242	1280		1.14.17.08)「データ名@EDIT_ERROR」
JA	ZZZZ010242	1290		1.14.17.09)「データ名@FULL_SIZE」
JA	ZZZZ010242	1300		1.14.17.10)「データ名@LOWER」
JA	ZZZZ010242	1310		1.14.17.11)「データ名@NEXT」
JA	ZZZZ010242	1320		1.14.17.12)「データ名@SPACE」
JA	ZZZZ010242	1330		1.14.17.13)「データ名@SPACE_ERASE」   (VER15.1)
JA	ZZZZ010242	1340		1.14.17.14)「データ名@TRIM」
JA	ZZZZ010242	1350		1.14.17.15)「データ名@UPPER」
JA	ZZZZ010242	1360		1.14.17.16)「データ名@URL_DECODE」 (VER24.1)
JA	ZZZZ010242	1370		1.14.17.17)「データ名@URL_ENCODE」 (VER24.1)
JA	ZZZZ010242	1380		1.15)「?データ名?」はデータ名の内容で置き換えます。
JA	ZZZZ010242	1390		      (☆一行で？は偶数個となります)
JA	ZZZZ010242	1400		1.16)「$データ名」は前のプログラムのデータ名です。
JA	ZZZZ010242	1410		       (この内容を直接変更することは出きません)
JA	ZZZZ010242	1420		       (尚、#,!,@,_,^で始まる変数は使用出来ません）
JA	ZZZZ010242	1430		       最初のプログラムで使用した場合は値が空白で動きます。
JA	ZZZZ010242	1440		       $無しのデータ名が無い場合$を付けて更に探します。VER18
JA	ZZZZ010242	1450		1.17)記憶用データベースをマスタデータベースと呼びます。
JA	ZZZZ010242	1460		1.18)作業用データベースをワークデータベースと呼びます。
JA	ZZZZ010242	1470		  ワークデータベース上のテーブルを作業テーブルと呼びます。
JA	ZZZZ010242	1480		（ただし、SQL Server以外は１個のデータベースとします）
JA	ZZZZ010242	1490		（DB2とPostgreSQLはスキーマ単位に分けます）
JA	ZZZZ010242	1500		(Oracleはユーザ単位に分けます,結果ユーザ２個分になります)
JA	ZZZZ010242	1510		1.19)テーブルの行の削除は一般的にはDELETEで物理削除しますが
JA	ZZZZ010242	1520		　　　、当ツールはZ_CANCELに削除時間を入れ論理削除とします。
JA	ZZZZ010242	1530		1.20)テーブルのデータ名を説明上は列名と呼びます。
JA	ZZZZ010242	1540		     I言語のデータ名から別名と列名の変換方法は以下です。
JA	ZZZZ010242	1550		     データ名を"."で区切り判定します。（VER8.6)
JA	ZZZZ010242	1560		     最後の名前が列名となります。（VER8.6)
JA	ZZZZ010242	1570		     先頭が別名と成りますが、以下の判定もします。
JA	ZZZZ010242	1580		       "."が無い場合はPROGRAM=の別名です。  (VER8.6)
JA	ZZZZ010242	1590		       "."が先頭の場合はPROGRAM=の別名です。(VER18.1)
JA	ZZZZ010242	1600		       先頭が"S"の場合は"S"を取った物が別名です。
JA	ZZZZ010242	1610		1.21)許可の扱いについて。
JA	ZZZZ010242	1620		◆許可は英字４文字で表しジョブで指定された許可のテーブル
JA	ZZZZ010242	1630		（先頭が許可と同じ）以外はそのジョブでは更新出来ません、
JA	ZZZZ010242	1640		なお、PUBLIC指定した場合はSELECTのみ出来ます。
JA	ZZZZ010242	1650		  テーブル名は許可の次に許可区分(英数字２文字)を設定します。
JA	ZZZZ010242	1660		   (VER22で列名の先頭を許可＋区分にする必要が無く成りました)
JA	ZZZZ010242	1670		◆許可は通常はZAAAからZZZZZ（先頭がZ）までを使用します。
JA	ZZZZ010242	1680		  WAAAからYZZZZまでは使用できません。
JA	ZZZZ010242	1690		  AAAAからVZZZZまではジョブ名の先頭文字も同じとし
JA	ZZZZ010242	1700		　パッケージソフト開発専用とし、
JA	ZZZZ010242	1710		　更に列名も「許可+'_'」のみ可能とします。(VER27.1)
JA	ZZZZ010242	1720		◆許可はインストール時点では２個登録されます。
JA	ZZZZ010242	1730		①ZZZY--一般用の許可で使用者ZZZZZZZYがこの許可の管理者です。
JA	ZZZZ010242	1740		        ZZZZ以外は個々の部署のシステム用です。
JA	ZZZZ010242	1750		②ZZZZ--共通用の許可で使用者ZZZZZZZZがこの許可の管理者です。
JA	ZZZZ010242	1760		        ZZZZは全社共通のシステム用です。
JA	ZZZZ010242	1770		1.22)プログラム内の"~~" は許可で最初に置き換えます。[廃止予定
JA	ZZZZ010242	1780		             "~+" は許可+区分で最初に置き換えます。[廃止予定]
JA	ZZZZ010242	1790		             "~-" は区分のみで最初に置き換えます。[廃止予定]
JA	ZZZZ010242	1800		   「★注意★1.22は将来廃止予定です。　VER22.1」
JA	ZZZZ010242	1810		1.23)データべースへの接続ユーザ。
JA	ZZZZ010242	1820		◆メニューの処理種類がINPUTのときI(INPUT,INP)ユーザを、
JA	ZZZZ010242	1830		　OUTPUTの時はO(OUTPUT,OUT)ユーザを使用します。
JA	ZZZZ010242	1840		　（ユーザは許可単位に設定されています）
JA	ZZZZ010242	1850		　IはマスタデータベースにSELECT,INSERT,UPDATE出来ます。
JA	ZZZZ010242	1860		　（SELECTとは検索の権限です）
JA	ZZZZ010242	1870		　（INSERTとはデータの挿入（新規追加）の権限です）
JA	ZZZZ010242	1880		　（UPDATEとはデータの変更の権限です）
JA	ZZZZ010242	1890		　（尚、DELETEは削除の権限ですが設定されません）
JA	ZZZZ010242	1900		　Iはワークデータベースには全権限があります。
JA	ZZZZ010242	1910		　OはマスタデータベースにSELECT権限があります。
JA	ZZZZ010242	1920		　Oはワークデータベースには全権限があります。
JA	ZZZZ010242	1930		◆ツールの処理はD(DB_OWNER,DBO)ユーザで許可ZZZZで接続します。
JA	ZZZZ010242	1940		◆リンクサーバー用としてL(LINK)ユーザがあります。
JA	ZZZZ010242	1950		1.24)先頭がZZZZ010,ZZZZ99985,ZZZZ99995,ZZZZ999996のジョブは
JA	ZZZZ010242	1960		    ツール用で使用者が'ZZZZZZZZ'のみ更新出来ます。(VER17)
JA	ZZZZ010242	1970		    (注意：ツールを再インストールすると、書き換わります)
JA	ZZZZ010242	1980		    尚,先頭が"ZZZZ01"と"ZZZZ99"は管理者専用で
JA	ZZZZ010242	1990		    許可ZZZZのみ更新可能です。
JA	ZZZZ010242	2000		  上記と別に"ZZZZ40"をサンプルシステム提供用とします。
JA	ZZZZ010242	2010		    （注意：ツールを再インストールすると、書き換わります)
JA	ZZZZ010242	2020		1.25)使用者とパスワードで利用可能なジョブが決まります。
JA	ZZZZ010242	2030		◆４種類の認証方法があります。(★VER7でルール変更）
JA	ZZZZ010242	2040		①X--全く認証が不要のジョブです。
JA	ZZZZ010242	2050		②P--使用者とパスワードをGUEST以外で登録すれば使えます。
JA	ZZZZ010242	2060		　　（メニューの許可がZZZZか使用者の許可と同じ場合有効です）
JA	ZZZZ010242	2070		　　（有効でない時でもジョブを指定すれば使えます）
JA	ZZZZ010242	2080		③J--使用者にジョブを指定して使えます。
JA	ZZZZ010242	2090		      (テスト実行はPと同じ動きをします）　(VER5.3)
JA	ZZZZ010242	2100		④A--管理者は使えます。
JA	ZZZZ010242	2110		     （メニューの許可がZZZZか使用者の許可と同じ場合有効です）
JA	ZZZZ010242	2120		 　　（有効でない時でもジョブを指定すれば使えます）
JA	ZZZZ010242	2130		 　　（処理の都度使用者とパスワードを要求されます）
JA	ZZZZ010242	2140		  ===( ジョブ指定無し認証の一覧 )==========================
JA	ZZZZ010242	2150		                         ○は本番とテストで可能。(-で表示）
JA	ZZZZ010242	2160		                         ▽はテストのみで可能。  (+で表示）
JA	ZZZZ010242	2170		                         ×は不可。　　　　　　  (*で表示）
JA	ZZZZ010242	2180		                  　許可  -ZZZZ- -ZZZY- -ZZZX-
JA	ZZZZ010242	2190		                  　認証  A P J  A P J  A P J
JA	ZZZZ010242	2200		  許可ZZZZのADMIN         ○○○ ▽▽▽ ▽▽▽
JA	ZZZZ010242	2210		  許可ZZZZのPERSON        ×○▽ ×▽▽ ×▽▽
JA	ZZZZ010242	2220		  許可ZZZZのGUEST         ××× ××× ×××
JA	ZZZZ010242	2230		  許可ZZZYのADMIN         ○○○ ○○○ ×××
JA	ZZZZ010242	2240		  許可ZZZYのPERSON        ×○▽ ×○▽ ×××
JA	ZZZZ010242	2250		  許可ZZZYのGUEST         ××× ××× ×××
JA	ZZZZ010242	2260		  ===========================================================
JA	ZZZZ010242	2270		1.26)サロゲートペアと結合文字は以下の制約条件があります。
JA	ZZZZ010242	2280		　　★DB2とMySQLはデータベースに登録出来ません。
JA	ZZZZ010242	2290		　　★結合文字を入力すると１つ前の文字に結合します。
JA	ZZZZ010242	2300		　　　従って、右端の文字に結合文字を付加する事はできません。
JA	ZZZZ010242	2310		　　★半角の結合文字は表示より実際の長さが長くなります、
JA	ZZZZ010242	2320		　　　入力項目一杯には入力出来ないので注意下さい。
JA	ZZZZ010242	2330		1.27)データベースのトランザクションについて。
JA	ZZZZ010242	2340		　　通常はSTOP_BEFOREの前でトランザクションが開始し,
JA	ZZZZ010242	2350		　　      STOP_AFTER後でトランザクションが終了します。
JA	ZZZZ010242	2360		　　自ら実行する場合はSQL{BEGIN TRANSACTION};を単独で実行し
JA	ZZZZ010242	2370		　　てトランザクションを開始し、（余分なSQL文はつけない）
JA	ZZZZ010242	2380		　　更新したい時はSQL{COMMIT TRANSACTION};を単独で実行,
JA	ZZZZ010242	2390		　　更新取りやめはSQL{ROLLBACK TRANSACTION};を単独で実行
JA	ZZZZ010242	2400		　　します。
JA	ZZZZ010242	2410		　　BEGINからCOMMITまたはROLLBACKまでは処理結果は
JA	ZZZZ010242	2420		　　データベースに反映されません。ただし、BEGIN中にユーザ
JA	ZZZZ010242	2430		　　を変更した場合はツール側でCOMMITを実行しトランザクション
JA	ZZZZ010242	2440		　　を無条件で終了します。（VER12.0)
JA	ZZZZ010242	2450		1.28)メニューでコピー１からコピー５にジョブ指定した場合は
JA	ZZZZ010242	2460		     該当ジョブを最後に順番にコピーします。
JA	ZZZZ010242	2470		     ただし、コピー2に'ZZZZZZZZZZ'を指定した場合は
JA	ZZZZ010242	2480		 コピー1のジョブのコピー１からコピー５を使用します。(VER5.10)
JA	ZZZZ010242	2490		     ('ZZZZZZZZZZ'の繰り返しは５回までしか有効になりません)
JA	ZZZZ010242	2500		1.29)作業ディレクトリを下記としますが,１日以上古い日付の物は
JA	ZZZZ010242	2510		     メニュー立ち上げ時削除するので注意して下さい。
JA	ZZZZ010242	2520		     Windowsは%SystemDreive%\I\TMPでLINUXは/home/I/TMPです。
JA	ZZZZ010242	2530		     時間起動は%SystemDreive%\I\I.システム名\TMP_?_REAL_TEST?
JA	ZZZZ010242	2540		         か/home/I/I.システム名/TMP_?_REAL_TEST?です。
JA	ZZZZ010242	2550		     (時間起動用は古い日付けも消しません）
JA	ZZZZ010242	2560		1.30)以後の説明中の「[」と「]」の間は省略可能の意味です。
JA	ZZZZ010242	2570		===========================================================
JA	ZZZZ010242	2580		2)**-テーブルの定義
JA	ZZZZ010242	2590		テーブルの定義は本来は自由ですが、プログラムを簡単にし、
JA	ZZZZ010242	2600		誤動作を防ぐため以下のように定義を規定します。
JA	ZZZZ010242	2610		2.1)テーブル名は２８文字以内です。
JA	ZZZZ010242	2620		    ★注意★Oracleは日本語が入ると設定出来る文字数が減り
JA	ZZZZ010242	2630		            エラーと成るので、注意して下さい。
JA	ZZZZ010242	2640		            尚、Firebirdは日本語が使えないので本格的なシステ
JA	ZZZZ010242	2650		            ムを作る場合は日本語は避ける事を推奨します。
JA	ZZZZ010242	2660		    テーブル名の先頭は許可名（英字４文字）です。
JA	ZZZZ010242	2670		    許可名に続いて許可区分(英数字２文字)を設定します。
JA	ZZZZ010242	2680		    テーブル名の最後は"実表"または"_TABLE"とします。
JA	ZZZZ010242	2690		    "ZZZZZZ"で始まるテーブル名はツール専用です。
JA	ZZZZ010242	2700		    "ZZZZZY","ZZZYZZ","ZZZYZY"で始まるテーブル名は雛型用です.
JA	ZZZZ010242	2710		2.2)列名は３０文字以内です。
JA	ZZZZ010242	2720		    ★注意★Oracleは日本語が入ると設定出来る文字数が減り
JA	ZZZZ010242	2730		            エラーと成るので、注意して下さい。
JA	ZZZZ010242	2740		            尚、Firebirdは日本語が使えないので本格的なシステ
JA	ZZZZ010242	2750		            ムを作る場合は日本語は避ける事を推奨します。
JA	ZZZZ010242	2760		「廃止」    列名の先頭は許可名（英字４文字）です。
JA	ZZZZ010242	2770		「廃止」    許可名に続いて部分(英数字２文字)を設定します。
JA	ZZZZ010242	2780		「廃止」    "ZZZZZZ","Z_"で始まる列名はツール専用です。
JA	ZZZZ010242	2790		「廃止」 "ZZZZZY","ZZZYZZ","ZZZYZY"で始まる列名は雛型用です。
JA	ZZZZ010242	2800		            "Z_"で始まるツールが使用している名前は使えません.
JA	ZZZZ010242	2810		            RDBMSの予約語は使えません。 (VER22.1)
JA	ZZZZ010242	2820		            データ辞書は許可単位に設定されます。 (VER22.1)
JA	ZZZZ010242	2830		          (★許可区分が異なる場合も許可単位で共通に使えます）
JA	ZZZZ010242	2840		2.10)先頭にツールで使用する列を８項目設定します。(★VER7変更)
JA	ZZZZ010242	2850		　①Z_CANCEL        CHAR(17) NOT NULL DEFAULT ' '--削除時間。
JA	ZZZZ010242	2860		　②Z_CANCEL_PERSON CHAR(8)  NOT NULL DEFAULT ' '--削除者。
JA	ZZZZ010242	2870		　③Z_CHANGE        CHAR(17) NOT NULL DEFAULT ' '--修正時間。
JA	ZZZZ010242	2880		　④Z_CHANGE_PERSON CHAR(8)  NOT NULL DEFAULT ' '--修正者。
JA	ZZZZ010242	2890		　⑤Z_ADD           CHAR(17) NOT NULL DEFAULT ' '--作成時間。
JA	ZZZZ010242	2900		　⑥Z_ADD_PERSON    CHAR(8)  NOT NULL DEFAULT ' '--作成者。
JA	ZZZZ010242	2910		　⑦Z_LAST_COMPUTER CHAR(15) NOT NULL DEFAULT ' '
JA	ZZZZ010242	2920		                    　　　　   -最後の更新コンピュータ。
JA	ZZZZ010242	2930		　⑧Z_LAST_JOB      CHAR(10) NOT NULL DEFAULT ' '
JA	ZZZZ010242	2940		　　　　　　　　　　　　　　　　　　　　-最後の更新ジョブ。
JA	ZZZZ010242	2950		2.11)ツール使用データの次から主キー
JA	ZZZZ010242	2960		 　(個々のデータを識別するためのデータ)を連続して設定します。
JA	ZZZZ010242	2970		2.12)数値は初期値を0としNULLを認めないものとします。
JA	ZZZZ010242	2980		　NULLは特別なデータ値でその値が存在していない事を意味します
JA	ZZZZ010242	2990		　、プログラムミスの原因になるので基本的には認めません。
JA	ZZZZ010242	3000		2.13)文字は初期値を' '（空白）としNULLを認めません。
JA	ZZZZ010242	3010		2.14)日付（年月日）は文字（CHAR(8))で設定するものとします。
JA	ZZZZ010242	3020		　　データベースでの日付設定はデータベース毎に動作が異なり
JA	ZZZZ010242	3030		　　プログラムミスの原因になるので基本的には使用しません。
JA	ZZZZ010242	3040		2.15)日付時間は文字（CHAR(17))で設定するものとします。
JA	ZZZZ010242	3050		 　データベースでの日付時間設定はデータベース毎に動作が異なり
JA	ZZZZ010242	3060		 　 プログラムミスの原因になるので基本的には使用しません。
JA	ZZZZ010242	3070		2.16)日付時間をDATETIMEで指定することも可能ですが、
JA	ZZZZ010242	3080		　　　思わぬ動きをする可能性があるので注意ください。
JA	ZZZZ010242	3090		     初期値を現在日付時間としNULLを認めません。
JA	ZZZZ010242	3100		2.17)型はSQL　Server(M)の型を基本とします。（VER4以降）
JA	ZZZZ010242	3110		　　　◆文字（表示は1から80文字までです）
JA	ZZZZ010242	3120		　　　[半角,固定長]--CHAR
JA	ZZZZ010242	3130		　　　[半角,可変長]--VARCHAR=M,D,I,L,P VARCHAR2=O
JA	ZZZZ010242	3140		　　　[UNICODE,固定長]--NCHAR=M,O CHAR=D,I,L,P
JA	ZZZZ010242	3150		　　　  (IはI言語で長さを３倍にします。)　VER8.3
JA	ZZZZ010242	3160		 　(Dは_SQL_CHAR_SETを付加し、RDBMSが長さを４倍にします)VER13
JA	ZZZZ010242	3170		       ★注意:全角文字は本来は１文字ですがI言語では都合により
JA	ZZZZ010242	3180		 　          ２文字で計算して下さい。
JA	ZZZZ010242	3190		　　　[UNICODE,可変長]-NVARCHAR=M NVARCHAR2=O VARCHAR=D,I,L,P
JA	ZZZZ010242	3200		　　　  (IはI言語で長さを３倍にします。)　VER8.3
JA	ZZZZ010242	3210		 　(Dは_SQL_CHAR_SETを付加し、RDBMSが長さを４倍にします)VER13
JA	ZZZZ010242	3220		  　   ★注意:全角文字は本来は１文字ですがI言語では都合により
JA	ZZZZ010242	3230		 　          ２文字で計算して下さい。
JA	ZZZZ010242	3240		　　　◆数値
JA	ZZZZ010242	3250		　　　[１０進数]--DECIMAL(少数点以下設定可能）
JA	ZZZZ010242	3260		　　　[整数,２進数]--INT (９桁以下、少数点以下設定不可)
JA	ZZZZ010242	3270		　　　[浮動小数,２進数]-FLOAT（近似値計算されます）
JA	ZZZZ010242	3280		　　　　　　　　　　（注意：事務処理用としては不向きです）
JA	ZZZZ010242	3290		　　　◆その他(思わぬ動きをする可能性あり、十分注意下さい）
JA	ZZZZ010242	3300		　　　[日付と時間]--DATETIME=M TIMESTAMP=D,I,L,O,P
JA	ZZZZ010242	3310		　　　                 (初期値は現在の時間です）
JA	ZZZZ010242	3320		　　　[日付]---DATETIME=M DATE=D,I,L,O,P
JA	ZZZZ010242	3330		　　　                 (初期値は今日の日付です）
JA	ZZZZ010242	3340		===========================================================
JA	ZZZZ010242	3350		3)**-特殊データ名
JA	ZZZZ010242	3360		注意：W以外はDATA=,SET=でデータ名としての使用はできません。
JA	ZZZZ010242	3370		3.1)W[属性]データ名
JA	ZZZZ010242	3380		　　　作業用データです。
JA	ZZZZ010242	3390		　　　宣言しないで即使用できます。
JA	ZZZZ010242	3400		　　　2文字目が数値の時は小数点以下が数値桁(1桁以上,VER7.31)
JA	ZZZZ010242	3410		　　　の数値情報になります、また、
JA	ZZZZ010242	3420		　　　2文字目がEはDATETIME,FはFLOAT,CはCHAR,以外はNCHARと
JA	ZZZZ010242	3430		      想定します。（CHAR,NCHARはVER7.5以上）
JA	ZZZZ010242	3440		3.2)#データ名--メニュー内共通変数値用データ名。
JA	ZZZZ010242	3450		 　 メニュー内ジョブ間で共通に使用するテータ名です。
JA	ZZZZ010242	3460		　　（別のメニューを起動すると値を引き継ぎません）
JA	ZZZZ010242	3470		　　いきなり使った場合は空白とみなします。
JA	ZZZZ010242	3480		　　初期値をコマンド行から"データ名=データ"で与えられます。
JA	ZZZZ010242	3490		    ★データ型は全て文字列となります。
JA	ZZZZ010242	3500		    ☆時間起動ジョブでは使えません。
JA	ZZZZ010242	3510		3.3)!データ名--コンピュータ内共通変数値用データ名。
JA	ZZZZ010242	3520		 　 コンピュータ内でジョブ間共通に使用するテータ名です。
JA	ZZZZ010242	3530		　　（別のメニューを起動しても値を引き継ぎます）
JA	ZZZZ010242	3540		　　いきなり使った場合は空白とみなします。
JA	ZZZZ010242	3550		　　データ名の長さが30(全角は２文字)以上はエラーとなります。
JA	ZZZZ010242	3560		　　データの長さが80(全角は２文字)以上はエラーとなります。
JA	ZZZZ010242	3570		  　STOP_...内では使用できません。
JA	ZZZZ010242	3580		    ★データ型は全て文字列となります。
JA	ZZZZ010242	3590		    ☆時間起動ジョブでは使えません。
JA	ZZZZ010242	3600		3.4)@データ名--共通固定値用データ名。
JA	ZZZZ010242	3610		　　決まっていて変化しないデータ用です。
JA	ZZZZ010242	3620		    ZZZZZZ_ETC_TABLEのZZZZZZ_KEY1='ZZZZZZ_@'で設定します。
JA	ZZZZ010242	3630		    ★データ型は全て文字列となります。
JA	ZZZZ010242	3640		  　☆ファイル起動ジョブでは使えません。
JA	ZZZZ010242	3650		3.5)&[テーブル別名]...--テーブル設定変数。
JA	ZZZZ010242	3660		　　テーブルの設定情報です。
JA	ZZZZ010242	3670		　　★テーブル別名は先頭に'S'(SET=で使用）は指定出来ません。
JA	ZZZZ010242	3680		　　 (X+連番を推奨します）
JA	ZZZZ010242	3690		　　PROGRAM=...,[&]テーブル別名,テーブル名または
JA	ZZZZ010242	3700		    TABLE=[&]テーブル別名,テーブル名または
JA	ZZZZ010242	3710		    =SET_TABLE{[&]テーブル別名}{テーブル名};で設定できます。
JA	ZZZZ010242	3720		  テーブル別名を省略はPROGRAM=のテーブル別名と見なします。
JA	ZZZZ010242	3730		  &[テーブル別名].TABLE--テーブル名
JA	ZZZZ010242	3740		　　(内容に?データ名？が有ると再度内容に置き換えます）
JA	ZZZZ010242	3750		  &[テーブル別名].ALL--全列名。(","区切)
JA	ZZZZ010242	3760		  &[テーブル別名].ALL_数字--全列名。
JA	ZZZZ010242	3770		　　(数は1から列数まで）
JA	ZZZZ010242	3780		  &[テーブル別名].ALL_COUNT--全列数。
JA	ZZZZ010242	3790		  &[テーブル別名].WORK--全作業列名。(","区切)
JA	ZZZZ010242	3800		  &[テーブル別名].WORK_DATA-データ作業列名。(","区切)(VER5.2)
JA	ZZZZ010242	3810		  &[テーブル別名].WORK_KEY--キー作業列名。(","区切)(VER5.2)
JA	ZZZZ010242	3820		  &[テーブル別名].WORK_数字--全作業列名。
JA	ZZZZ010242	3830		    ('W'+(属性)+'.'を先頭に付加する）
JA	ZZZZ010242	3840		    (属性はVER7.10で以下のように変更★非互換です
JA	ZZZZ010242	3850		     CHAR,VARCHRは'C'(旧はX)、NCHAR,NVARCHARは'N'(旧はX)
JA	ZZZZ010242	3860		     ,DECIMALは少数点以下の数値ただし10以上は'F'
JA	ZZZZ010242	3870		     ,INTは'0'、FLOATは'F',DATETIMEは'E')
JA	ZZZZ010242	3880		　　(数は1から列数まで）
JA	ZZZZ010242	3890		  &[テーブル別名].DATA--データ列名。(","区切)
JA	ZZZZ010242	3900		  &[テーブル別名].DATA_数字--データ列名。
JA	ZZZZ010242	3910		    (数は1からデータ列数まで）
JA	ZZZZ010242	3920		  &[テーブル別名].DATA_COUNT--データ列数。
JA	ZZZZ010242	3930		  &[テーブル別名].DATA_CREATE-データ列定義。(","区切)
JA	ZZZZ010242	3940		  &[テーブル別名].DATA_CREATE_数-主キー列定義。
JA	ZZZZ010242	3950		  &[テーブル別名].INDEX_数字--インデックス列名(","区切)
JA	ZZZZ010242	3960		　　(数は1からインデックス数まで）
JA	ZZZZ010242	3970		  &[テーブル別名].INDEX_UNIQUE_数字--ユニークのとき'UNIQUE'
JA	ZZZZ010242	3980		　　(数は1からインデックス数まで）
JA	ZZZZ010242	3990		  &[テーブル別名].INDEX_COUNT-インデックス数。
JA	ZZZZ010242	4000		  &[テーブル別名].KEY_COUNT--主キー数。
JA	ZZZZ010242	4010		  &[テーブル別名].KEY--主キー列名。(","区切)
JA	ZZZZ010242	4020		  &[テーブル別名].KEY_数字--主キー列名。
JA	ZZZZ010242	4030		  &[テーブル別名].KEY_CREATE--主キー列定義。(","区切)
JA	ZZZZ010242	4040		  &[テーブル別名].KEY_CREATE_数-主キー列定義。
JA	ZZZZ010242	4050		    (数は1から主キー数まで）
JA	ZZZZ010242	4060		  以下はデータ名毎の設定値
JA	ZZZZ010242	4070		  &[テーブル別名].DATA&列名--DATA=用のデータ名定義情報。
JA	ZZZZ010242	4080		  &[テーブル別名].DATA2&列名--.DATA&列名に対し列名のみなし。
JA	ZZZZ010242	4090		        (名前なし)
JA	ZZZZ010242	4100		  &[テーブル別名].SET&列名--SET=用のデータ名定義情報。
JA	ZZZZ010242	4110		   (型１変更,長さ指定有り,CHECK[1],2,命令群無し）
JA	ZZZZ010242	4120		  &[テーブル別名].SET2&列名--SET=用のデータ名定義情報。
JA	ZZZZ010242	4130		   (型１変更,長さ指定無し,CHECK[1],2,命令群無し）
JA	ZZZZ010242	4140		  &[テーブル別名].KEY&列名--プライムキーの場合'K'。
JA	ZZZZ010242	4150		  &[テーブル別名].DEFINE&列名--定義情報。
JA	ZZZZ010242	4160		  &[テーブル別名].NANE&列名--列名。
JA	ZZZZ010242	4170		  &[テーブル別名].LENGTH1&列名--LENGTH1。
JA	ZZZZ010242	4180		  &[テーブル別名].LENGTH2&列名--LENGTH2。
JA	ZZZZ010242	4190		  &[テーブル別名].TYPE1&列名--TYPE1。
JA	ZZZZ010242	4200		  &[テーブル別名].TYPE2&列名--TYPE2。
JA	ZZZZ010242	4210		  &[テーブル別名].CHECK&列名--CHECK[1]。(CHECK1は旧仕様)
JA	ZZZZ010242	4220		  &[テーブル別名].CHECK2&列名--CHECK2。
JA	ZZZZ010242	4230		   データディクショナリ上同じテーブル（最後の？以降が同じ）
JA	ZZZZ010242	4240		    のCHECK2は空白に変換します。
JA	ZZZZ010242	4250		  &[テーブル別名].SECTION&列名--SECTION。
JA	ZZZZ010242	4260		  &[テーブル別名].MESSAGE&列名--MESSAGE。
JA	ZZZZ010242	4270		  &[テーブル別名].TITLE&列名--TITLE。
JA	ZZZZ010242	4280		  &[テーブル別名].TABLE_TYPE&列名--テーブルのTYPE。
JA	ZZZZ010242	4290		  &[テーブル別名].TABLE_LENGTH1&列名--テーブルのLENGTH1。
JA	ZZZZ010242	4300		  &[テーブル別名].TABLE_LENGTH2&列名--テーブルのLENGTH2。
JA	ZZZZ010242	4310		  &[テーブル別名].NULL&列名--テーブルのNULL(0=NO,1=YES)。
JA	ZZZZ010242	4320		  &[テーブル別名].DEFAULT&列名--テーブルのDEFAULT値。
JA	ZZZZ010242	4330		  &[テーブル別名].CHECK&列名--ZZZZZZ_CHECKの値。
JA	ZZZZ010242	4340		  &[テーブル別名].CHECK61&列名--ZZZZZZ_CHECK61の値。
JA	ZZZZ010242	4350		  &[テーブル別名].CHECK62&列名--ZZZZZZ_CHECK62の値。
JA	ZZZZ010242	4360		  &[テーブル別名].CHECK63&列名--ZZZZZZ_CHECK63の値。
JA	ZZZZ010242	4370		  &[テーブル別名].CHECK64&列名--ZZZZZZ_CHECK64の値。
JA	ZZZZ010242	4380		  &[テーブル別名].CHECK65&列名--ZZZZZZ_CHECK65の値。
JA	ZZZZ010242	4390		  &[テーブル別名].CHECK66&列名--ZZZZZZ_CHECK66の値。
JA	ZZZZ010242	4400		  &[テーブル別名].C&列名--CREATE_TABLE値。（省略値）
JA	ZZZZ010242	4410		  &[テーブル別名].C2&列名--列名除くCREATE_TABLE値。
JA	ZZZZ010242	4420		  &[テーブル別名].C3&列名--列名除くCREATE_TABLE値。(生値）
JA	ZZZZ010242	4430		　　　　　　　　　　　　　（VER5)
JA	ZZZZ010242	4440		  &[テーブル別名].Z_CANCEL--ツール列名,有='1',無='0'(VER6.6)
JA	ZZZZ010242	4450		  &[テーブル別名].Z_CANCEL_PERSON--有='1',無='0'(VER6.6）
JA	ZZZZ010242	4460		  &[テーブル別名].Z_CHANGE--ツール列名,有='1',無='0'(VER6.6）
JA	ZZZZ010242	4470		  &[テーブル別名].Z_CHANGE_PERSON--有='1',無='0'(VER6.6）
JA	ZZZZ010242	4480		  &[テーブル別名].Z_ADD--ツール列名,有='1',無='0'(VER6.6）
JA	ZZZZ010242	4490		  &[テーブル別名].Z_ADD_PERSON--有='1',無='0'(VER6.6）
JA	ZZZZ010242	4500		  &[テーブル別名].Z_LAST_COMPUTER--有='1',無='0'(VER6.6）
JA	ZZZZ010242	4510		  &[テーブル別名].Z_LAST_JOB---有='1',無='0'(VER6.6）
JA	ZZZZ010242	4520		3.6)&予約語&...--列名設定変数。
JA	ZZZZ010242	4530		　　データの設定情報です。
JA	ZZZZ010242	4540		    DICTIONARYE=列名,...
JA	ZZZZ010242	4550		    =SET_DICTIONARY{列名,...};で設定できます。
JA	ZZZZ010242	4560		　(VER3以降複数指定可能）
JA	ZZZZ010242	4570		  &DATA_CREATE-列データ定義。(","区切)
JA	ZZZZ010242	4580		  &DATA&列名--DATA=用の列名定義情報。
JA	ZZZZ010242	4590		  &DATA2&列名--&DATA&列名に対し列名のみなし。
JA	ZZZZ010242	4600		  &SET&列名--SET=用の列名定義情報。
JA	ZZZZ010242	4610		     (長さ指定有り,長さが1の時は2とする）
JA	ZZZZ010242	4620		     (CHECK[1],CHECK2,命令群は設定されません）
JA	ZZZZ010242	4630		　&SET2&列名--SET=用の列名定義情報。
JA	ZZZZ010242	4640		     (長さ指定無し）
JA	ZZZZ010242	4650		     (CHECK[1],CHECK2,命令群は設定されません）
JA	ZZZZ010242	4660		　&DEFINE&列名--定義情報。
JA	ZZZZ010242	4670		　&NAME&列名--列名。
JA	ZZZZ010242	4680		　&LENGTH1&列名--LENGTH1。
JA	ZZZZ010242	4690		　&LENGTH2&列名--LENGTH2。
JA	ZZZZ010242	4700		　&TYPE1&列名--TYPE1。
JA	ZZZZ010242	4710		　&TYPE2&列名--TYPE2。
JA	ZZZZ010242	4720		　&CHECK&列名--CHECK[1]。 (CHECK1は旧仕様)
JA	ZZZZ010242	4730		　&CHECK2&列名--CHECK2。
JA	ZZZZ010242	4740		　&SECTION&列名--SECTION。
JA	ZZZZ010242	4750		　&MESSAGE&列名--MESSAGE。
JA	ZZZZ010242	4760		　&TITLE&列名--TITLE。
JA	ZZZZ010242	4770		　&TABLE_TYPE&列名--テーブルのTYPE。
JA	ZZZZ010242	4780		　&TABLE_LENGTH1&列名--テーブルのLENGTH1。
JA	ZZZZ010242	4790		　&TABLE_LENGTH2&列名--テーブルのLENGTH2。
JA	ZZZZ010242	4800		　&NULL&列名--テーブルのNULL(0=NO,1=YES)。
JA	ZZZZ010242	4810		　&DEFAULT&列名--テーブルのDEFAULT値。
JA	ZZZZ010242	4820		　&CHECK&列名--ZZZZZZ_CHECKの値。
JA	ZZZZ010242	4830		　&CHECK61&列名--ZZZZZZ_CHECK61の値。
JA	ZZZZ010242	4840		　&CHECK62&列名--ZZZZZZ_CHECK62の値。
JA	ZZZZ010242	4850		　&CHECK63&列名--ZZZZZZ_CHECK63の値。
JA	ZZZZ010242	4860		　&CHECK64&列名--ZZZZZZ_CHECK64の値。
JA	ZZZZ010242	4870		　&CHECK65&列名--ZZZZZZ_CHECK65の値。
JA	ZZZZ010242	4880		　&CHECK66&列名--ZZZZZZ_CHECK66の値。
JA	ZZZZ010242	4890		　&C&列名--CREATE_TABLE値。（省略値）
JA	ZZZZ010242	4900		　&C2&列名--列名除くCREATE_TABLE値。
JA	ZZZZ010242	4910		　&C3&列名--列名除くCREATE_TABLE値。（生値）（VER5)
JA	ZZZZ010242	4920		3.7)_名前--システム提供データ名。
JA	ZZZZ010242	4930		  _構成&データ名--途中に'&'が有る時は,データ名を構成します。
JA	ZZZZ010242	4940		     ("左辺データ名"＋"比較"＋"データ名または編集した値"）
JA	ZZZZ010242	4950		     ①1文字目
JA	ZZZZ010242	4960		       _=予約語指定
JA	ZZZZ010242	4970		     ②次の文字
JA	ZZZZ010242	4980		       L=LIKEその1 　 　 （値のLIKE比較で最後に%）
JA	ZZZZ010242	4990		       I=LIKEその2　 　　（値のLIKE比較で先頭と最後に%）
JA	ZZZZ010242	5000		       E=LIKEその3　　 　（値のLIKE比較で先頭に%）
JA	ZZZZ010242	5010		       V=VALUE　　　　　　(値の比較で④で比較条件を設定）
JA	ZZZZ010242	5020		       N=NAME(REMOVE込み) (名前比較で④で比較条件を設定）
JA	ZZZZ010242	5030		     ③次の文字
JA	ZZZZ010242	5040		　　　　R=REMOVE　(左辺のデータ名最後の'.'まで先頭を削除）
JA	ZZZZ010242	5050		        C=CUT     (左辺データ名無し）
JA	ZZZZ010242	5060		 　　④次の文字(③がV,Nの場合のみ)
JA	ZZZZ010242	5070		        E=EQUAL                (E :=)
JA	ZZZZ010242	5080		        G=GREATER THAN         (G :>)
JA	ZZZZ010242	5090		      　(次の文字E可能）       (GE:>=)
JA	ZZZZ010242	5100		        L=LES THAN             (l :<)
JA	ZZZZ010242	5110		      　(次の文字EまたはG可能）(LE:<=)
JA	ZZZZ010242	5120		      　                       (LG:<>)
JA	ZZZZ010242	5130		     ⑤次の文字
JA	ZZZZ010242	5140		        &=ここで構成終了
JA	ZZZZ010242	5150		     ⑥データ名が"."で始まっている場合や"."が無い場合は
JA	ZZZZ010242	5160		       PROGRAM=の別名があると想定して処理します。
JA	ZZZZ010242	5170		     (例　_L&X1.ABC--X1.ABC LIKE N'?X1.ABC?%')
JA	ZZZZ010242	5180		          (Nと引用符は型1で判断)
JA	ZZZZ010242	5190		     (例　_VRLG&X1.ABC--ABC<>N'?X1.ABC?')
JA	ZZZZ010242	5200		          (Nと引用符は型1で判断)
JA	ZZZZ010242	5210		     (例　_NGE&X1.ABC--ABC>=X1.ABC)
JA	ZZZZ010242	5220		
JA	ZZZZ010242	5230		  _関数(列名1[;列名2])--途中に'('が有る時は関数を構成します。
JA	ZZZZ010242	5240		                                         (VER18.1)
JA	ZZZZ010242	5250		      列名の代わりに「"データ名"」とするとデータ名の内容を
JA	ZZZZ010242	5260		      文字列とし前後に「'」を付加します。
JA	ZZZZ010242	5270		      列名の代わりに「(データ名)」とするとデータ名の内容を
JA	ZZZZ010242	5280		         列名とします。
JA	ZZZZ010242	5290		      列名の先頭が"."の場合はPROGRAM=の別名を付加します。
JA	ZZZZ010242	5300		     ";"の無い関数は内容をそのまま文字列として扱います。
JA	ZZZZ010242	5310		      _関数((データ名))とすると最初に内容で置き換えます。
JA	ZZZZ010242	5320		      関数目的では無い使い方をする場合も有ります。_L(,_P(,_R(
JA	ZZZZ010242	5330		      SQL関数に変換する物は先頭を"_(関数"とすると関数の左を
JA	ZZZZ010242	5340		         "_)関数"とすると関数の右を設定します。
JA	ZZZZ010242	5350		      _関数は１行内で書く必要が有ります、１行にならない場合は
JA	ZZZZ010242	5360		         _CONTINUE()で対応出来ます。
JA	ZZZZ010242	5370		  _--' 'が内容です。（VER5で追加）
JA	ZZZZ010242	5380		  _$--'$'が内容です。（VER26.1で追加）
JA	ZZZZ010242	5390		  _#--'#'が内容です。（VER26.1で追加）
JA	ZZZZ010242	5400		  _数字--DATA=の数字番目の別名.列名。(VER18.1)
JA	ZZZZ010242	5410		  _A--'@'が内容です。（VER5で追加）
JA	ZZZZ010242	5420		  _A数字--1から26までで英字の'A'から'Z'までが値。
JA	ZZZZ010242	5430		  _A_英字--'A'から'Z'までで数字の1から26までが値。
JA	ZZZZ010242	5440		  _ACOS--逆余弦のSQL関数。　VER22.1
JA	ZZZZ010242	5450		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010242	5460		  _AND_SPACE--データ辞書の条件設定で？_AND_SPACE?のみを
JA	ZZZZ010242	5470		         設定した場合は,空白は空白を,
JA	ZZZZ010242	5480		         空白以外は'AND(?_AND_SPACE?)'を設定します。(VER19.1)
JA	ZZZZ010242	5490		  _ARG--SET{_ARG=でコマンドライン用変数に変換。 VER11.1
JA	ZZZZ010242	5500		  _ASIN(数値式)--逆正弦のSQL関数。　VER22.1
JA	ZZZZ010242	5510		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010242	5520		  _ATAN(数値式)--逆正接のSQL関数。　VER22.1
JA	ZZZZ010242	5530		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010242	5540		  _ATAN2(Y数値式;X数値式)--2個の数の逆正接のSQL関数。VER22.1
JA	ZZZZ010242	5550		       (注意：DB2の場合はYとXをI言語側で入れ替えます）
JA	ZZZZ010242	5560		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010242	5570		  _AVG(数値式)--平均を求めるSQL関数(集計)。　VER22.1
JA	ZZZZ010242	5580		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010242	5590		  _C-- SQLの文字結合記号。(DB確定時設定）
JA	ZZZZ010242	5600		  _C(--SQLの文字結合の左。(MySQLは'CONCAT('以外空白)(VER18.1)
JA	ZZZZ010242	5610		       ("_(C"も同じ)VER22.1
JA	ZZZZ010242	5620		  _C)--SQLの文字結合の右。(MySQLは')'以外空白)(VER18.1)
JA	ZZZZ010242	5630		       ("_)C"も同じ)VER22.1
JA	ZZZZ010242	5640		  _CEIL(数値式)--最小整数のSQL関数。(VER22.1)
JA	ZZZZ010242	5650		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010242	5660		  _CHART--チャートプログラムのフルパス名です。(VER15.1)
JA	ZZZZ010242	5670		           (Javaでは動きません）
JA	ZZZZ010242	5680		  _CHECK_TYPE--テーブル列型CHECK用。(DB確定時設定）
JA	ZZZZ010242	5690		  _CHECK2--CHECK2の右側表示の選択値。（旧_LIST_BOX_COMMENT)
JA	ZZZZ010242	5700		  _CHECK2_TYPE1--型1(全部)CHECK用。
JA	ZZZZ010242	5710		  _CHECK2_TYPE1_CHAR--型1(半角文字)CHECK用。(VER4変更)
JA	ZZZZ010242	5720		  _CHECK2_TYPE1_DATETIME--型1(時間)CHECK用。
JA	ZZZZ010242	5730		  _CHECK2_TYPE1_DECIMAL--型1(数値)CHECK用。
JA	ZZZZ010242	5740		  _CHECK2_TYPE1_FLOAT--型1(FLOAT)CHECK用。
JA	ZZZZ010242	5750		  _CHECK2_TYPE1_INT--型1(INT)CHECK用。
JA	ZZZZ010242	5760		  _CHECK2_TYPE1_NCHAR--型1(UNICODE)CHECK用。(VER4追加)
JA	ZZZZ010242	5770		  _CHECK2_TYPE2_CHAR--型2(半角文字)CHECK用。(VER4変更)
JA	ZZZZ010242	5780		  _CHECK2_TYPE2_DECIMAL--型2(数値)CHECK用。
JA	ZZZZ010242	5790		  _CHECK2_TYPE2_NCHAR--型2(UNICODE)CHECK用。(VER4追加)
JA	ZZZZ010242	5800		  _CL--[旧]文字結合の左。（MySQLは'CONCAT('以外は空白）(VER8)
JA	ZZZZ010242	5810		  _CLICK--CLICK=で文字をSETするとキーボード入力となります。
JA	ZZZZ010242	5820		          (読み出し不可）
JA	ZZZZ010242	5830		  _CODE--SET{_で先頭が全角文字は2,半角カナは3,以外は1を返す。
JA	ZZZZ010242	5840		  _CODE39--SET{_CODE39=..}でCODE39のチェックディジット設定。
JA	ZZZZ010242	5850		  _COMPUTER--コンピュータ。
JA	ZZZZ010242	5860		      (_COMPUTER_NAMEの'-'を'_'としSQLで扱える名前）
JA	ZZZZ010242	5870		  _COMPUTER_NAME--コンピュータ名。
JA	ZZZZ010242	5880		  _CONCAT(列名1;列名2[;...])--列を結合します。(VER18.1)
JA	ZZZZ010242	5890		  _CONTINUE(内容)--_関数(内容)の内容が１行で収まらない時
JA	ZZZZ010242	5900		           事前に内容を設定出来ます。(VER24.1)
JA	ZZZZ010242	5910		           これ自身は空白値となります。
JA	ZZZZ010242	5920		  _COS(数値式)--コサインのSQL関数。(VER22.1)
JA	ZZZZ010242	5930		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010242	5940		  _COT(数値式)--コタンジェントのSQL関数。(VER22.1)
JA	ZZZZ010242	5950		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010242	5960		  _COUNTER--セクション実行時$$,$-,$+を置き換えます,初期は1。
JA	ZZZZ010242	5970		              (最後のセミコロンは付けません）
JA	ZZZZ010242	5980		      (0から999までです）
JA	ZZZZ010242	5990		  _CR--[旧]文字結合の右。（MySQLは')'以外は空白）(VER8)
JA	ZZZZ010242	6000		  _CUBE(式...)--CUBEのSQL関数。　(VER22.1)
JA	ZZZZ010242	6010		       (注意:MariaDBでは動きません）
JA	ZZZZ010242	6020		{*_CURSOR_...は廃止予定です。******************************}
JA	ZZZZ010242	6030		  _CURSOR_BEGIN--カーソルの開始設定       1/7   　(VER8.10)
JA	ZZZZ010242	6040		              (最初のDECLAREを設定します）
JA	ZZZZ010242	6050		              (最後にセミコロンは付けません）
JA	ZZZZ010242	6060		              (2件目以降は_O_DECLAREで設定します）
JA	ZZZZ010242	6070		              (PROCはこの前に?_OBJECT_AS?を付けます）
JA	ZZZZ010242	6080		  _CURSOR_CURSOR--カーソルのカーソル設定   2/7   　(VER8.10)
JA	ZZZZ010242	6090		              (カーソル用SELECT文を書きます）
JA	ZZZZ010242	6100		              (最後にセミコロンは付けません）
JA	ZZZZ010242	6110		  _CURSOR_START--カーソルの開始処理設定   3/7; 　(VER8.10)
JA	ZZZZ010242	6120		              (最初に処理する文を書きます）
JA	ZZZZ010242	6130		              (最後にセミコロンを付けます）
JA	ZZZZ010242	6140		              (複数の文を書いた時は,切れ目に';'を付けます）
JA	ZZZZ010242	6150		              (この下に?_OBJECT_MAIN?を付けて文を書きます）
JA	ZZZZ010242	6160		  _CURSOR_FETCH--カーソルのフェッチ設定   4/7　(VER8.10)
JA	ZZZZ010242	6170		              (FETCH先のデータ名をカンマ区切りで書きます）
JA	ZZZZ010242	6180		              (最後にセミコロンは付けません）
JA	ZZZZ010242	6190		  _CURSOR_LOOP--カーソルの繰り返し処理設定 5/7; (VER8.10)
JA	ZZZZ010242	6200		              (繰り返し処理を書きます）
JA	ZZZZ010242	6210		              (最後にセミコロンを付けます）
JA	ZZZZ010242	6220		              (複数の文を書いた時は,切れ目に';'を付けます）
JA	ZZZZ010242	6230		  _CURSOR_STOP--カーソルの終了処理設定    6/7; 　(VER8.10)
JA	ZZZZ010242	6240		              (最後に処理する文を書きます）
JA	ZZZZ010242	6250		              (最後にセミコロンを付けます）
JA	ZZZZ010242	6260		              (複数の文を書いた時は,切れ目に';'を付けます）
JA	ZZZZ010242	6270		  _CURSOR_END--プロシージャ用カーソル設定 7/7　(VER8.10)
JA	ZZZZ010242	6280		  _D--DECLAREの接頭文字(VER5以降）（M='@',M以外='D’）
JA	ZZZZ010242	6290		      (DB確定時設定）【廃止予定】新は_O_DATA
JA	ZZZZ010242	6300		  _DATA--当セクションの該当データ。
JA	ZZZZ010242	6310		  _DATA_ALL--DATA=のデータ名をカンマで区切ったもの。
JA	ZZZZ010242	6320		  _DATA_ALL_SQL--DATA=_DATA_ALLをSQLに対応した物。(VER18.1)
JA	ZZZZ010242	6330		                           (データ名を別名.列名に変換した物）
JA	ZZZZ010242	6340		  _DATA_COUNT--DATA=の数。(プログラム解析中は今までのDATA=数)
JA	ZZZZ010242	6350		  _DATE--SET{_DATE=..}で近くの正しい日付を返す。(_DATE_GOODへ
JA	ZZZZ010242	6360		　_DATE(CHAR型日)--DATE型の値を返す、SQL文を構成します。
JA	ZZZZ010242	6370		                                                   (VER18.1)
JA	ZZZZ010242	6380		  _DATE_GOOD--SET{_DATE_GOOD=..}で近くの正しい日付を返す。
JA	ZZZZ010242	6390		 　　　 0001-01-01から9999-12-31までの範囲。（VER7.11)
JA	ZZZZ010242	6400		  _DATETIME--SET{_DATETIME=..}で17桁の時間を23文字で表現。
JA	ZZZZ010242	6410		  _DATETIME_GOOD-SET{_で近くの正しい日付時間を返す。(VER7.11)
JA	ZZZZ010242	6420		 　　　 日付は1753-01-01から9999-12-31までの範囲。
JA	ZZZZ010242	6430		 　　　 時間は00:00:00.000から23:59:59:998までの範囲。
JA	ZZZZ010242	6440		  (DB確定時設定）
JA	ZZZZ010242	6450		　_DAY_CHAR(CHAR型日付;日数)--日数分の日付を加算するSQL文を
JA	ZZZZ010242	6460		　                                      構成します。(VER18.1)
JA	ZZZZ010242	6470		　_DAY_DATE(DATE型日付;日数)--日数分の日付を加算するSQL文を
JA	ZZZZ010242	6480		　                                      構成します。(VER18.1)
JA	ZZZZ010242	6490		  _DB--データベース名１文字。（DB確定時設定）
JA	ZZZZ010242	6500		    (D=Firebird,I=IBM-DB2,L=MriaDB(MySQL)
JA	ZZZZ010242	6510		     ,M=MicrosoftSQLSrver,O=Oracle,P=PosegreSQL)
JA	ZZZZ010242	6520		  _DB_ERROR--データベースのエラー番号。(?_DB?+エラー番号)
JA	ZZZZ010242	6530		  _DB_HEADER--データベースの先頭部分文字           (VER8.10)
JA	ZZZZ010242	6540		             (上記以外='I_?_SYSTEM?_?_REAL_TEST[1;1]?)
JA	ZZZZ010242	6550		  _DB_I_ERROR--EXIST,NOT_EXIST,DUPLICATE_KEY,ERRORの
JA	ZZZZ010242	6560		               4種類のエラーを返します。(VER8.2）
JA	ZZZZ010242	6570		  _DB_SOFT--データベースのソフト名。
JA	ZZZZ010242	6580		  _DEGREES(数値式)--ラジアンを度に変換するSQL関数。VER22.1
JA	ZZZZ010242	6590		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010242	6600		  _DIGIT11--SET{_DIGIT11=..でモジュラス11デジット1文字設定。
JA	ZZZZ010242	6610		      (1桁目から2倍、3倍とし7倍までで3倍に戻る計算値を
JA	ZZZZ010242	6620		     　11で割った余りを１１から引いた値です、ただし、
JA	ZZZZ010242	6630		   　　余りが0と１は０とします）
JA	ZZZZ010242	6640		  _DIV(数値式1;数値式2)---商を求めるSQL文。　VER22.1
JA	ZZZZ010242	6650		  _DRIVES--パソコンに設定されているドライブ文字の一覧。
JA	ZZZZ010242	6660		  _E--SQL文の区切り文字(MSSQL='';ORACLE=';')(DB確定時設定）
JA	ZZZZ010242	6670		      【廃止予定】
JA	ZZZZ010242	6680		  _EC--DECLAREの区切り文字(MSSQL=',';ORACLE=';')
JA	ZZZZ010242	6690		       (DB確定時設定) 【廃止予定】
JA	ZZZZ010242	6700		  _EDIT--SET{_EDIT=..}で右辺データの中身"?データ名?"を置換。
JA	ZZZZ010242	6710		                (変換エラーが有るとエラーになります)(VER8.10)
JA	ZZZZ010242	6720		  _EDIT_ERROR--_EDITと同じ,置換不可でもエラーとしません。
JA	ZZZZ010242	6730		[無_ENCODING_CHECK---SET{_ENCODING_CHECK=で真は1偽は0を返す。
JA	ZZZZ010242	6740		  _ENVIRONMENT--SET{_ENVIRONMENT=..}で環境変数をセット。
JA	ZZZZ010242	6750		  _ERROR--エラーのメッセージ内容。
JA	ZZZZ010242	6760		  _ESC--1以外をセットするとESCを有効としない。（終了しない）
JA	ZZZZ010242	6770		          (読み出し不可）
JA	ZZZZ010242	6780		  _EXE_NAME--起動プログラムのパス込みの名前。
JA	ZZZZ010242	6790		  _EXE_OPTION--起動プログラムの起動パラメータと起動ファイル。
JA	ZZZZ010242	6800		  _EXE_PARAM--起動パラメータ全体(/付き）。
JA	ZZZZ010242	6810		  _EXE_PARAMETER数字--起動パラメータ。
JA	ZZZZ010242	6820		  _EXE_PATH--プログラム起動時のパス。
JA	ZZZZ010242	6830		  _EXP(数値式)--指数値のSQL関数。(VER22.1)
JA	ZZZZ010242	6840		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010242	6850		  _FIND(検索対象;検索文字式)--文字式を探すSQL文。 (VER18.1)
JA	ZZZZ010242	6860		  _FIND_CHAR--SET{_FIND_CHAR=データ+捜す文字群}; (VER7.31)
JA	ZZZZ010242	6870		           データ内で文字群の文字を先頭から捜し一致した最初の
JA	ZZZZ010242	6880		           文字位置を設定します、尚無い時は０を設定します。
JA	ZZZZ010242	6890		  _FIND_CHAR_NOT--SET{_...=データ+捜す文字群}; (VER7.31)
JA	ZZZZ010242	6900		           データ内で文字群の文字を先頭から捜し不一致の最初の
JA	ZZZZ010242	6910		           文字位置を設定します、尚全て有りは０を設定します。
JA	ZZZZ010242	6920		  _FIND_CHAR_LAST--SET{_...=データ+捜す文字群}; (VER7.31)
JA	ZZZZ010242	6930		           データ内で文字群の文字を最後から捜し一致した最後の
JA	ZZZZ010242	6940		           文字位置を設定します、尚無い時は０を設定します。
JA	ZZZZ010242	6950		  _FIND_CHAR_LAST_NOT--SET{_...=データ+捜す文字群}; (VER7.31)
JA	ZZZZ010242	6960		           データ内で文字群の文字を最後から捜し不一致の最後の
JA	ZZZZ010242	6970		           文字位置を設定します、尚全て有りは０を設定します。
JA	ZZZZ010242	6980		  _FIND_COUNT--SET{_...=データ+捜す文字列}; (VER15.1)
JA	ZZZZ010242	6990		           データ内で一致する文字列の数を設定します。
JA	ZZZZ010242	7000		  _FIND_REPEAT--FIND_REPEAT命令の検索番号が設定されます。
JA	ZZZZ010242	7010		  _FIND_STRING--SET{_...=データ+捜す文字列}; (VER7.31)
JA	ZZZZ010242	7020		           データ内で文字列を先頭から捜し一致した最初の
JA	ZZZZ010242	7030		           文字位置を設定します、尚無い時は０を設定します。
JA	ZZZZ010242	7040		  _FIND_STRING_NOT--SET{_...=データ+捜す文字列}; (VER7.31)
JA	ZZZZ010242	7050		           データ内で文字列を先頭から捜し不一致の最初の
JA	ZZZZ010242	7060		           文字位置を設定します、尚全て有りは０を設定します。
JA	ZZZZ010242	7070		  _FIND_STRING_LAST--SET{_...=データ+捜す文字列}; (VER7.31)
JA	ZZZZ010242	7080		           データ内で文字列を最後から捜し一致した最後の
JA	ZZZZ010242	7090		           文字位置を設定します、尚無い時は０を設定します。
JA	ZZZZ010242	7100		  _FIND_STRING_LAST_NOT--SET{_..=データ+捜す文字列};(VER7.31)
JA	ZZZZ010242	7110		           データ内で文字列を最後から捜し不一致の最後の
JA	ZZZZ010242	7120		           文字位置を設定します、尚全て有りは０を設定します。
JA	ZZZZ010242	7130		  _FONT--デフォルトのフォント。
JA	ZZZZ010242	7140		  _FONT_SIZE--デフォルトのフォントサイズ。
JA	ZZZZ010242	7150		  _FOR--DBがD,Fは' FOR ' 以外は','。（VER8.3,_SUBSTRで使用）
JA	ZZZZ010242	7160		  _FRAMEWORK--Framework2は'2',Framework4.5は'4',JAVAは'J'。
JA	ZZZZ010242	7170		     Windowsは4、LinuxはJを基本ソフトとします。(VER9)
JA	ZZZZ010242	7180		  _FROM--DBがD,Fは' FROM '以外は','。（VER8.3,_SUBSTRで使用）
JA	ZZZZ010242	7190		　_FROM_COUNT--FROMとJOINの数です。（VER7で追加）
JA	ZZZZ010242	7200		      JOINはINNER(2)=,LEFT(2)=,RIGHT(2)=,FULL(2)=です。
JA	ZZZZ010242	7210		  _FROM_DUAL--デーブルの無いFROM。(DB確定時設定）
JA	ZZZZ010242	7220		              (MSSQL='',ORACLE='FROM DUAL')
JA	ZZZZ010242	7230		  _FROM数字--FROM以降のSQL文を組み立てます。
JA	ZZZZ010242	7240		      FROMとJOIN ONのSQL文です。(VER7で追加）
JA	ZZZZ010242	7250		     _FROM##,_FROM$$の場合は空白となります。(繰り返し無し)
JA	ZZZZ010242	7260		  _FULL_SIZE--SET{_FULL_SIZE=..で半角文字を全角に変換します。
JA	ZZZZ010242	7270		              (半角カナも全角カナに変換します)(VER7.13で追加)
JA	ZZZZ010242	7280		  _FUNC(SQLの関数名[;パラメータ;...])--SQLの関数を構成します.
JA	ZZZZ010242	7290		  _FUNC_BEGIN--FUNC開始文字。　　　 　　　　　　(VER8.10)
JA	ZZZZ010242	7300		              (M=' AS BEGIN RETURN ',O=' OS ',L='  RETURN (',
JA	ZZZZ010242	7310		               I=' LANGUAGE SQL CONTAINS SQL NO EXTERNAL
JA	ZZZZ010242	7320		                   ACTION DETERMINISTIC RETURN ',
JA	ZZZZ010242	7330		               P=' AS $SENTENCE__SENTENCE$ ',
JA	ZZZZ010242	7340		               H=' LANGUAGE SQL BEGIN RETURN '
JA	ZZZZ010242	7350		               D=FUNCは不可)
JA	ZZZZ010242	7360		  _FUNC_END--FUNC終了文字。　　　 　　　　　　(VER8.10)
JA	ZZZZ010242	7370		              (M,H=' END ',O,I=' ',L=')',D=FUNCは不可
JA	ZZZZ010242	7380		               P='  $SENTENCE__SENTENCE$ LANGUAGE SQL;')
JA	ZZZZ010242	7390		  _FUNC_RETURNS--FUNCのRETURNS。      　　　　　　(VER8.10)
JA	ZZZZ010242	7400		              ( O=' RETURN ',O以外=' RETURNS ')
JA	ZZZZ010242	7410		  _GROUP_COUNT--_DATA_COUNTと同じ。 (VER7.26)
JA	ZZZZ010242	7420		  _GROUP数字--GROUP BY以降のSQL文を組み立てます。(VER7.23)
JA	ZZZZ010242	7430		      DATA=の属性4にGを設定すると設定されます。
JA	ZZZZ010242	7440		      先頭に最初は"GROUP　BY"が付き、以降は","が付きます。
JA	ZZZZ010242	7450		      _GROUP1(##)($$)があると先頭を'GROUP BY'に戻します。
JA	ZZZZ010242	7460		      SELECT=が無い場合はデータ名から別名.列名を設定します。
JA	ZZZZ010242	7470		      SELECT=が有る場合はその内容を設定します。
JA	ZZZZ010242	7480		      _GROUP##,_GROUP$$の場合は空白となります。(繰り返し無し)
JA	ZZZZ010242	7490		  _HAVING--ここに文字を転送すると先頭にHAVINGが付けられます。
JA	ZZZZ010242	7500		         (VER7.28,COPY=@ZZZZZZ_SQLのSQL=?_HAVING?で使います）
JA	ZZZZ010242	7510		  _HHMM--時間起動時の時分(時間起動で無い時は空白）
JA	ZZZZ010242	7520		  _I--_OS_DRIVE+_P+"I"+_P+"BIN?_IV?"+_Pです。
JA	ZZZZ010242	7530		  _INP_OUT--メニューの処理種類がINP=INPUT,OUT=OUTPUT。
JA	ZZZZ010242	7540		  _INPUT--入力中の文字。(INPUT=でのみ有効)(VER8.4)
JA	ZZZZ010242	7550		  _INPUT_POSITION--入力文字位置。(INPUT=でのみ有効)(VER20.1)
JA	ZZZZ010242	7560		  _INPUT(名前;文字数;見出し)---HTMLのINPUTを組み立てます。
JA	ZZZZ010242	7570		     見出し<input type="text" name="名前"
JA	ZZZZ010242	7580		      value="#名前の内容" size="長さ" maxlength="長さ">
JA	ZZZZ010242	7590		  _INSTANCE--インスタンス名。(ファイル起動ジョブは変更可）
JA	ZZZZ010242	7600		  _IPRINT--印刷プログラムのプログラム名。(VER11.1でJava変更)
JA	ZZZZ010242	7610		  _IPRINT2-印刷プログラムの先頭パラメータ。(VER11.1,Java対応)
JA	ZZZZ010242	7620		  _IV--"I"+_VERSION1です。
JA	ZZZZ010242	7630		  _JAN--SET{_JAN=..でJANのチェックディジットを計算。
JA	ZZZZ010242	7640		  _JOB--ジョブ名。
JA	ZZZZ010242	7650		  _JOB_CGI--CGIで次に実行するジョブ名を指定します。 VER20.1
JA	ZZZZ010242	7660		  _JOB_NAME--ジョブ名称。
JA	ZZZZ010242	7670		  _JOB_PART--------ジョブの許可区分。
JA	ZZZZ010242	7680		      メニューの許可がZZZZでメニュー認証方法がX以外では
JA	ZZZZ010242	7690		  　　変更可能ですが、セクション内のみ有効です。
JA	ZZZZ010242	7700		  _JOB_PERMISSION--ジョブの許可。
JA	ZZZZ010242	7710		      メニューの許可がZZZZでメニュー認証方法がX以外では
JA	ZZZZ010242	7720		  　　変更可能ですが、セクション内のみ有効です。
JA	ZZZZ010242	7730		  利用者の許可がZZZZ以外は利用者許可のみ可能です。(VER8.3)
JA	ZZZZ010242	7740		  _JSON--JSON{}でデータ無しは'0'、全て有りは'1'　(VER24.1)
JA	ZZZZ010242	7750		         一部有りは'2'と成ります。
JA	ZZZZ010242	7760		  _JSON(データ名[;データ名...])--JSONにエンコードします。
JA	ZZZZ010242	7770		       前後に'{'と'}'が付加されるので１行で掛けない場合は
JA	ZZZZ010242	7780		       _CONTINUE(...)で対応します。
JA	ZZZZ010242	7790		       データ名の最初の.以降をキーとします。
JA	ZZZZ010242	7800		  _JSON_P(...)--キーの2文字以降小文字にします。
JA	ZZZZ010242	7810		  _JSON_L(...)--キーを小文字文字にします。
JA	ZZZZ010242	7820		  _JSON2(...)--_JSON(と同じですが内容を変換しません。
JA	ZZZZ010242	7830		  _JSON2_P(...)--JSON_P(と同じですが内容を変換しません。
JA	ZZZZ010242	7840		  _JSON2_L(...)--JSON_L(と同じですが内容を変換しません。
JA	ZZZZ010242	7850		  _L--'{'が内容。
JA	ZZZZ010242	7860		  _L(文字列)--単に文字列を小文字に変換します。VER20.1
JA	ZZZZ010242	7870		      文字列にデータ名を指定する事は出来ません。
JA	ZZZZ010242	7880		      ★注意：文字列に"+[,'{}@?"を含める事は出来ません。
JA	ZZZZ010242	7890		  _LANG--使用言語（２文字）(JA,EN）。
JA	ZZZZ010242	7900		  _LANG_SYSTEM--システム用言語名。(インストールで決定）
JA	ZZZZ010242	7910		  _LEFT_COUNT--_DATA_COUNTと同じ。 (VER7.26)
JA	ZZZZ010242	7920		  _LEFT数字--DATA=に&別名が有ると下記を設定します。
JA	ZZZZ010242	7930		     "LEFT OUTER JOIN ?DATA=のCHECK61? ?_Q?_X?Q? ON
JA	ZZZZ010242	7940		 　  ?データ名から想定した別名及び列名?
JA	ZZZZ010242	7950		　   =?_Q?_X?_Q?.？DATA=のLEFTのSQL文?
JA	ZZZZ010242	7960		     ★注意：構成後?データ名?を内容に変換します。
JA	ZZZZ010242	7970		     データ名から想定した別名及び列名は別名無しは
JA	ZZZZ010242	7980		     PROGRAM=で設定された別名、別名有りはそのまま使用するが、
JA	ZZZZ010242	7990		     先頭に'S'が有る場合は'S'を取ります,列名はドット以下と
JA	ZZZZ010242	8000		     なります。
JA	ZZZZ010242	8010		    _LEFT##,_LEFT$$の場合は空白となります。(繰り返し無し)
JA	ZZZZ010242	8020		  _LEN(文字式)--文字数を返すSQL関数。　VER22.1
JA	ZZZZ010242	8030		      (日本語も1文字で計算します、ただし,SQL Serverの場合
JA	ZZZZ010242	8040		        サロゲートペア(32ビット文字)は2文字で計算されます)
JA	ZZZZ010242	8050		  _LENB(文字式)--バイト文字数を返すSQL関数。　VER22.1
JA	ZZZZ010242	8060		      (日本語はSQL Serverは2文字で以外は3文字で計算されます)
JA	ZZZZ010242	8070		  _LIST_BOX_COMMENT-リストボックスの右側。(旧仕様VER23.1)
JA	ZZZZ010242	8080		  _LOCK1--テーブルの次に記入するロック(Ver2)。(DB確定時設定）
JA	ZZZZ010242	8090		  _LOCK2--最後に記入するロック(VER2)。(DB確定時設定）
JA	ZZZZ010242	8100		  _LOG(数値式)--自然対数のSQL関数　VER22.1
JA	ZZZZ010242	8110		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010242	8120		  _LOG10(数値式)--10の対数のSQL関数。　VER22.1
JA	ZZZZ010242	8130		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010242	8140		  _LOGIN_ID--SQL_LOGIN用ログインIDを設定します。
JA	ZZZZ010242	8150		　　　(空白時はデフォルトの管理者ログインIDです）
JA	ZZZZ010242	8160		  _LOGIN_ID_ADMIN-管理者用デフォルトログインID。
JA	ZZZZ010242	8170		      (DB確定時設定）
JA	ZZZZ010242	8180		  _LOGIN_PASSWORD-SQL_LOGIN用ログインパスワードを設定します。
JA	ZZZZ010242	8190		      (読み出し不可）
JA	ZZZZ010242	8200		  _LOWER--SET{_LOWER=..で英小文字に変換します。
JA	ZZZZ010242	8210		  _M--マスタデータベース用先頭文字。
JA	ZZZZ010242	8220		   　 M='I_？_SYSTEM?_?_REAL_TEST[1;1]?_M_?_JOB_PERMISSION?.'
JA	ZZZZ010242	8230		        +'DBO.?_JOB_PERMISSION?'
JA	ZZZZ010242	8240		  　 P,I='I_？_SYSTEM?_?_REAL_TEST[1;1]_M_?_JOB_PERMISSION?.'
JA	ZZZZ010242	8250		        +'?_JOB_PERMISSION?'
JA	ZZZZ010242	8260		     O='I_？_SYSTEM?_?_REAL_TEST[1;1]?_D_?_JOB_PERMISSION?.'
JA	ZZZZ010242	8270		        +'?_JOB_PERMISSION?'
JA	ZZZZ010242	8280		  _M_REAL--マスタテーブル本番用の先頭文字。
JA	ZZZZ010242	8290		  _MA_テーブル略称--略称を使って許可と許可区分を設定します。
JA	ZZZZ010242	8300		  _M_TEST--マスタテーブルテスト用の先頭文字。
JA	ZZZZ010242	8310		  _MENU_KIND--メニューの処理種類(INPUT,OUTPUT)
JA	ZZZZ010242	8320		  _MENU_PERMISSION--メニューの許可。（変更されない）
JA	ZZZZ010242	8330		　_MENU_SECURITY--メニューの認証方法。（X,J,P,A）
JA	ZZZZ010242	8340		  _MM--_M+_PARTに成ります。(VER8)
JA	ZZZZ010242	8350		  _MM_REAL--_M_REAL+_PARTに成ります。(VER8)
JA	ZZZZ010242	8360		  _MM_TEST--_M_TEST+_PARTに成ります。(VER8)
JA	ZZZZ010242	8370		  _MOD(数値式1;数値式2)--剰余を求めるSQL文。(VER18.1)
JA	ZZZZ010242	8380		  _MP_許可--許可の_M。（通常はメニューの許可使用）
JA	ZZZZ010242	8390		 　　（SQL　Server以外は_Mと同じになる,VER4以降）
JA	ZZZZ010242	8400		  _MP_REAL_許可--_MP_許可のREAL用。
JA	ZZZZ010242	8410		  _MP_TEST_許可--_MP_許可のTEST用。
JA	ZZZZ010242	8420		  _MX--_M...に対しテーブル名先頭の許可はありません。
JA	ZZZZ010242	8430		  _MX_...--_MP_...に対しテーブル名先頭の許可はありません。
JA	ZZZZ010242	8440		  _N--National Langage指定（M,O='N’以外空白)
JA	ZZZZ010242	8450		       (DB確定時設定）
JA	ZZZZ010242	8460		  _NAME--該当セクションのデータ名。
JA	ZZZZ010242	8470		  _NAME_SQL--_NAMEをSQLに対応した物。(VER18.1)
JA	ZZZZ010242	8480		             (データ名を別名.列名に変換した物）
JA	ZZZZ010242	8490		  _NAME数字--DATA=の数字番目のデータ名です。(VER18.1)
JA	ZZZZ010242	8500		  _NEXT--SET{_NEXT=..}で次の文字を設定。
JA	ZZZZ010242	8510		　　　　　(0->1,9->0,A->B,Z->A,A->B,Z->A)
JA	ZZZZ010242	8520		  _NEW_LINE--レコードの切れ目の文字列。
JA	ZZZZ010242	8530		  _NOW_DATE--年月日のデータベース固有現在値。(VER7.11)
JA	ZZZZ010242	8540		  _NOW0--年月日時分秒ミリ秒のデータベース固有現在値。(VER7)
JA	ZZZZ010242	8550		  _NOW17-年月日時分秒ミリ秒をCHAR(17)で表現した現在値。(VER7)
JA	ZZZZ010242	8560		  _NOW8--年月日をCHAR(8)で表現した現在値。(VER7)
JA	ZZZZ010242	8570		  _O--REPLACE_命令で設定され*O*.がこの内容で置き変わります。
JA	ZZZZ010242	8580		  _O_CD--CURSOR{}の列名のデータ名に付加する文字列。(VER18.1)
JA	ZZZZ010242	8590		         (M='@C_',M以外'C_')
JA	ZZZZ010242	8600		  _O_CS--CURSOR{}の列名のSQL文内のデータ名に付加する文字列。
JA	ZZZZ010242	8610		         (D=':C_',M='@C_',D,M以外'C_')
JA	ZZZZ010242	8620		  _O_DATA--OBJECT処理でのデーター名の先頭文字。(VER8.10)
JA	ZZZZ010242	8630		                (M=' @_',M以外=' D_'）
JA	ZZZZ010242	8640		  _O_DATA_SQL--OBJECT処理でのSQL内データー名先頭。 (VER8.10)
JA	ZZZZ010242	8650		                (D=' :D_',M=' @_',D,M以外' D_')
JA	ZZZZ010242	8660		  _O_DECLARE--OBJECT処理で2件目以降のDECLAREを設定(VER8.10)
JA	ZZZZ010242	8670		            (2件目以降のDECLAREを有るだけ繰り返し設定します）
JA	ZZZZ010242	8680		        　　    (O,P='',O,P以外='DECLARE '） (VER18.1)
JA	ZZZZ010242	8690		  _O_DEFAULT--OBJECT処理での初期値設定。　　　　　(VER8.10)
JA	ZZZZ010242	8700		               (M='=',P=':=',以外=' DEFAULT ') (VER18.1)
JA	ZZZZ010242	8710		  _O_ELSE-CURSOR処理でのELSE。　　　　　　　(VER18.1)
JA	ZZZZ010242	8720		  _O_END--OBJECT処理でのEND文字。　　　　　　　(VER8.10)
JA	ZZZZ010242	8730		               (D=' END ',D以外=' END;'）
JA	ZZZZ010242	8740		  _O_END_IF--IFのEND IF  　　　　　　　　　　　　(VER8.10)
JA	ZZZZ010242	8750		               (D,M=' ',D,M以外=' END IF;'）
JA	ZZZZ010242	8760		  _O_EQUAL--OBJECT処理でのイコール記号。  　　　(VER8.10)
JA	ZZZZ010242	8770		               (O,P=':=',O,P以外='='）
JA	ZZZZ010242	8780		  _O_FROM---OBJECT処理でのSET記号。  　　　(VER18.1)
JA	ZZZZ010242	8790		               (O,P=':=',O,P以外='='）
JA	ZZZZ010242	8800		  _O_IF--OBJECT処理でのIF。           　　 　　(VER8.10)
JA	ZZZZ010242	8810		               (D=' IF (',D以外=' IF ')
JA	ZZZZ010242	8820		  _O_IF(処理)--OCRSOR処理でのIF(BEGIN付)設定用。
JA	ZZZZ010242	8830		        次の文字をCURSOR処理用に変更します。
JA	ZZZZ010242	8840		                C. --> '' (空白)
JA	ZZZZ010242	8850		                F. --> ?_O_FD?
JA	ZZZZ010242	8860		                W. --> ?_O_WD?
JA	ZZZZ010242	8870		         C.,F.,W.の後に列名が有れば記憶します。
JA	ZZZZ010242	8880		         C.,F.,W.の後に列名が無いと記憶した物を設定します。
JA	ZZZZ010242	8890		         最後は_O_IF_ENDで閉じます。
JA	ZZZZ010242	8900		  _O_IF_END--_O_IF()のEND処理用です。
JA	ZZZZ010242	8910		    **(_O_INSERT...と_O_UPDATE...は内容を共有します)**
JA	ZZZZ010242	8920		  _O_INSERT--CURSOR処理でのINSERT用文字です。(VER18.1)
JA	ZZZZ010242	8930		  _O_INSERT(列[;..])--CURSOR処理でのINSERT用文字です。(VER18.
JA	ZZZZ010242	8940		  _O_INSERT2--_O_INSERTと同じですがZ_..関連は無し。(VER18.1)
JA	ZZZZ010242	8950		  _O_INSERT2(...)--Z_..関連は無し。(VER18.1)
JA	ZZZZ010242	8960		  _O_INTO--_O_INTO()で設定されるFirebid用INTO文です。(VER18.1
JA	ZZZZ010242	8970		          _O_INTO()を使用した時はSELECTの最後に記入します。
JA	ZZZZ010242	8980		  _O_INTO(列名1;[送り元1;..])--SELECTで受け取るデータの指定。
JA	ZZZZ010242	8990		      列名の先頭には?_O_WS?が付加され送り先と成ります。(VER18
JA	ZZZZ010242	9000		      送り元無は送り先がそのまま列名と成り送り元に成ります。
JA	ZZZZ010242	9010		      _O_INTOにFirebird用INTO文を設定します。
JA	ZZZZ010242	9020		  _O_IN1--OBJECT処理での変数設定用1。 　　 　　(VER8.10)
JA	ZZZZ010242	9030		              (H=' IN ',H以外=' ')
JA	ZZZZ010242	9040		  _O_IN2--OBJECT処理での変数設定用1。 　　 　　(VER8.10)
JA	ZZZZ010242	9050		              (O=' IN ',O以外=' ')
JA	ZZZZ010242	9060		  _O_NEW--OBJECT処理でのTRIG新レコード別名
JA	ZZZZ010242	9070		          (M=' @_NEW_',O=' :NEW.',I,H=' XNEW.',D,L,P=' NEW.')
JA	ZZZZ010242	9080		  _O_OLD--OBJECT処理でのTRIG旧レコード別名
JA	ZZZZ010242	9090		          (M=' @_OLD_',O=' :OLD.',I,H=' XOLD.',D,L,P=' OLD.')
JA	ZZZZ010242	9100		  _O_SET--OBJECT処理での設定文字。　　　　　　(VER8.10)
JA	ZZZZ010242	9110		               (M,I,L,H= ' SET ',O,P,D=' ')
JA	ZZZZ010242	9120		  _O_SET(処理)--CURSOR処理でのSET設定用です。
JA	ZZZZ010242	9130		                次の文字をCURSOR処理用に変更します。
JA	ZZZZ010242	9140		                   (=) --> ?_O_FROM?
JA	ZZZZ010242	9150		                    C. --> '' (空白)
JA	ZZZZ010242	9160		                    F. --> ?_O_FD?
JA	ZZZZ010242	9170		                    W. --> ?_O_WD?
JA	ZZZZ010242	9180		           C.,F.,W.の後に列名が有れば記憶します。
JA	ZZZZ010242	9190		           C.,F.,W.の後に列名が無いと記憶した物を設定します。
JA	ZZZZ010242	9200		           最後は_O_IF_ENDで閉じます。
JA	ZZZZ010242	9210		  _O_SQL--前の_O_SQL()で設定した内容です。
JA	ZZZZ010242	9220		  _O_SQL(処理)--CURSOR処理でのSQL内設定用です。
JA	ZZZZ010242	9230		           次の文字をCURSOR処理用に変更します。
JA	ZZZZ010242	9240		                C. --> '' (空白)
JA	ZZZZ010242	9250		                F. --> ?_O_FS?
JA	ZZZZ010242	9260		                W. --> ?_O_WS?
JA	ZZZZ010242	9270		           C.,F.,W.の後に列名が有れば記憶します。
JA	ZZZZ010242	9280		           C.,F.,W.の後に列名が無いと記憶した物を設定します。
JA	ZZZZ010242	9290		           _O_SQLに該当文字列が設定されます。
JA	ZZZZ010242	9300		  _O_TABLE数字--CURSOR処理のテーブ名。
JA	ZZZZ010242	9310		  _O_THEN--OBJECT処理でのIFのTHEN(VER8.10)
JA	ZZZZ010242	9320		               (M=' ',D=') THEN ',M,D以外=' THEN '）
JA	ZZZZ010242	9330		  _O_UPDATE_ADD--CURSOR処理のUPDATE(作成)用文字です。
JA	ZZZZ010242	9340		  _O_UPDATE_ADD(列1[;...])-- CURSORでのUPDATE用文字です。
JA	ZZZZ010242	9350		  _O_UPDATE_ADD2--Z_...関連が無し。
JA	ZZZZ010242	9360		  _O_UPDATE_ADD2(列1[;...])--Z_...関連が無し。
JA	ZZZZ010242	9370		  _O_UPDATE_CHANGE--CURSOR処理のUPDATE（修正）用文字です。
JA	ZZZZ010242	9380		  _O_UPDATE_CHANGE(..)--CURSOR処理のUPDATE(修正)用文字です。
JA	ZZZZ010242	9390		  _O_UPD_CHA--_O_UPDATE_CHANGE()の短縮版です。(VER22.1)
JA	ZZZZ010242	9400		  _O_UPD_CHA(..)--_O_UPDATE_CHANGE(..)の短縮版です。(VER22.1)
JA	ZZZZ010242	9410		  _O_UPDATE_CHANGE2--Z_...関連が無し。
JA	ZZZZ010242	9420		  _O_UPDATE_CHANGE2(..)--Z_...関連が無し。
JA	ZZZZ010242	9430		  _O_UPD_CHA2(..)--_O_UPDATE_CHANGE2()の短縮版です。(VER22.1)
JA	ZZZZ010242	9440		  _O_WD--CURSOR{}のデータ名に付加する文字列。   (VER18.1)
JA	ZZZZ010242	9450		        (M='@W_',M以外'W_')
JA	ZZZZ010242	9460		  _O_WS--CURSOR{}のSQL文内のデータ名に付加する文字列。(VER18)
JA	ZZZZ010242	9470		        (D=':W_',M='@W_',D,M以外'W_')
JA	ZZZZ010242	9480		  _O_WHERE--CURSOR処理のキー条件WHERE文。
JA	ZZZZ010242	9490		  _O_WHERE2--_O_WHEREと同じで"AND Z_CANCEL=' '"が有りません。
JA	ZZZZ010242	9500		  _OBJECT_AS--OBJECT処理でデータ定義の後に記入。　(VER8.10)
JA	ZZZZ010242	9510		               (M,O=' AS ',M,O以外=' '）
JA	ZZZZ010242	9520		               (PROCでデータ宣言の次に入れます）
JA	ZZZZ010242	9530		               (FUNCとTRIGとVIEWでは使いません）
JA	ZZZZ010242	9540		  _OBJECT_BEGIN--OBJECT処理での開始処理。      　(VER8.10)
JA	ZZZZ010242	9550		               (PROCは?_OBJECT_AS?の次に入れます）
JA	ZZZZ010242	9560		               (TRIGでは先頭に入れます）
JA	ZZZZ010242	9570		               (FUNCとVIEWでは使いません）
JA	ZZZZ010242	9580		      (P=' AS $SENTENCE__SENTENCE$ ',D=' ',P,D以外=' BEGIN ')
JA	ZZZZ010242	9590		  _OBJECT_END--OBJECT処理での最後処理。      　(VER8.10)
JA	ZZZZ010242	9600		               (PROCとTRIGは最後に入れます）
JA	ZZZZ010242	9610		               (FUNCとVIEWでは使いません）
JA	ZZZZ010242	9620		          (P=" END; $SENTENCE__SENTENCE$ LANGUAGE 'PLPGSQL'",
JA	ZZZZ010242	9630		           O=' END;END;',D=' END ',M,L,I,H=' END;END '）
JA	ZZZZ010242	9640		  _OBJECT_MAIN--OBJECT処理での処理の開始に入れます(VER8.10)
JA	ZZZZ010242	9650		               (全て=' BEGIN ')
JA	ZZZZ010242	9660		  _ORDER数-ORDER BY以降のSQL文を組み立てます。
JA	ZZZZ010242	9670		       先頭に最初は"ORDER BY"で以降は","が設定されます。
JA	ZZZZ010242	9680		       _ORDER1(##)($$)があると先頭を'ORDER BY'に戻します。
JA	ZZZZ010242	9690		       DATA=の属性3が'C'の時は設定されません。（VER7.23)
JA	ZZZZ010242	9700		       DATA=の属性3が'D'の時はDESCを付加します。(VER7.23)
JA	ZZZZ010242	9710		      _ORDER##,_ORDER$$の場合は空白となります。(繰り返し無し)
JA	ZZZZ010242	9720		  _ORDER_COUNT--'K'が有りかつ'C'が無い時と'A','D'がある時は
JA	ZZZZ010242	9730		                 その時の最大番号、無しの時は_DATA_COUNT。
JA	ZZZZ010242	9740		      (A,C,DはVER7.23)(VER3以降有効)
JA	ZZZZ010242	9750		  _OS--OSの名前。（１文字,W=WINDOWS,U=LINUX)
JA	ZZZZ010242	9760		   (VER2以降有効）
JA	ZZZZ010242	9770		  _OS_DRIVE--OSのシステムが存在するドライブ(C:等)。
JA	ZZZZ010242	9780		  _OS_VERSION--OSのバージョン。（１文字)
JA	ZZZZ010242	9790		  _P--パスの区切り文字。
JA	ZZZZ010242	9800		  _P(文字列)--単に文字列を先頭大文字以外小文字に変換します。
JA	ZZZZ010242	9810		  _PAGE_SW--ページ表示の開始で空白となる。（変更可能）
JA	ZZZZ010242	9820		  _PART--メニューの許可区分。
JA	ZZZZ010242	9830		  _PASS_DAY--パスワード通過日。(DD)
JA	ZZZZ010242	9840		  _PATH--カレントパス。（作業中のパス）
JA	ZZZZ010242	9850		  _PERMISSION--使用者の許可(セキュリティー後)。
JA	ZZZZ010242	9860		  _PERSON--使用者(セキュリティー後)。
JA	ZZZZ010242	9870		  _PERSON_NAME--使用者名(セキュリティー後)。
JA	ZZZZ010242	9880		   (ただし、_PERMISSIONが'ZZZZ'
JA	ZZZZ010242	9890		    または_MENU_PERMISSIONが'ZZZZ'
JA	ZZZZ010242	9900		　　または_PERMISSIONが_MENU_PERMISSIONと同じ時）
JA	ZZZZ010242	9910		　_PI--円周率（3.14159265358979)の固定値 VER22.1
JA	ZZZZ010242	9920		　_PP--_MENU_PERMISSION+_PARTが内容です。　(VER22.1)
JA	ZZZZ010242	9930		　_PP1--_MENU_PERMISSIONが内容です。　(VER22.1)
JA	ZZZZ010242	9940		　_PP2--_PARTが内容です。　(VER22.1)
JA	ZZZZ010242	9950		  _PROC--プロシージャー起動命令。　　　　　　　(VER8.10)
JA	ZZZZ010242	9960		         (D='EXCUTE PROCEDURE',M='EXEC',DM以外='CALL')
JA	ZZZZ010242	9970		  _PROC_L--プロシージャー左カッコ。　　　　　　　(VER8.10)
JA	ZZZZ010242	9980		              (M=' ',=M以外='(')
JA	ZZZZ010242	9990		  _PROC_R--プロシージャー右カッコ。　　　　　　　(VER8.10)
JA	ZZZZ010242	10000		              (M=' ',M以外=')')
JA	ZZZZ010242	10010		  _PROGRAM_COUNT--PROGRAM{}の検索又は更新の件数。(VER23.1)
JA	ZZZZ010242	10020		  _PROGRAM_DATA--DATA=のキー以外更新データ名をカンマで区切。
JA	ZZZZ010242	10030		  (データ名の途中に"."が有る場合は別名と判断し"."までを削除）
JA	ZZZZ010242	10040		  _PROGRAM_KEY--DATA=及びSET=のキーデータ名をカンマで区切。
JA	ZZZZ010242	10050		  (データ名の途中に"."が有る場合は別名と判断し"."までを削除）
JA	ZZZZ010242	10060		  _PROGRAM_NO--プログラム番号。
JA	ZZZZ010242	10070		  _Q--'?'が内容。
JA	ZZZZ010242	10080		  _R--'}'が内容。
JA	ZZZZ010242	10090		  _R(文字列;置換前文字列;置換後文字列)---文字を置き換えます。
JA	ZZZZ010242	10100		     文字列は(データ名)でデータ名の内容にする事も出来ます。
JA	ZZZZ010242	10110		  _RADIANS(数値式)--度をラジアンに変換するSQL関数。VER22.1
JA	ZZZZ010242	10120		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010242	10130		  _RAND()--乱数のSQL文。VER22.1
JA	ZZZZ010242	10140		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010242	10150		  _RANDOM---1から最大数までの乱数を発生します。VER20.1
JA	ZZZZ010242	10160		            SET{_RANDOM=最大数];で最大値を設定出来ます。
JA	ZZZZ010242	10170		            最大数の初期値は100です。
JA	ZZZZ010242	10180		  _READ_DATA--READ_NEXTのレコード全体の内容。(VER24.1)
JA	ZZZZ010242	10190		  _READ1_DATA--READ1_NEXTのレコード全体の内容。
JA	ZZZZ010242	10200		  _READ2_DATA--READ2_NEXTのレコード全体の内容。
JA	ZZZZ010242	10210		  _REAL_TEST--本番かテストかの判定。 ('REAL','TEST')。
JA	ZZZZ010242	10220		   (★注意：本番時は変更可能ですがセクション内のみ有効です）
JA	ZZZZ010242	10230		　_RECEIVE--RECEIVE{}のメッセージ内容。
JA	ZZZZ010242	10240		　_RECEIVE_COMPUTER_NAME--RECEIVE{}のコンピュータ名。
JA	ZZZZ010242	10250		  _RECEIVE_JOB--RECEIVE{}のジョブ。
JA	ZZZZ010242	10260		  _RECEIVE_LANG--RECEIVE{}の言語。
JA	ZZZZ010242	10270		　_RECEIVE_PERSON--RECEIVE{}の使用者。
JA	ZZZZ010242	10280		　_RECEIVE_SW--RECEIVE{}でのEnterは"1"。
JA	ZZZZ010242	10290		  _RECEIVE_SYSTEM--RECEIVE{}のシステム。
JA	ZZZZ010242	10300		◆_REGISTRY--SET{..=KEY+SUBKEY}でLOCALMACHINEから読む。
JA	ZZZZ010242	10310		   インストール以外でも動きます。(VER24.1)
JA	ZZZZ010242	10320		  *注意*JAVA版は動きません。
JA	ZZZZ010242	10330		　_REPEAT--指定文字を繰り返すSQLの関数です。(VER6.3,廃止予定)
JA	ZZZZ010242	10340		　_REPEAT(文字;数値)文字を数値分繰り返すSQL文です。(V22.1）
JA	ZZZZ010242	10350		　(MはREPLICATE,OはLPAD,IとPはREPEATとなります）
JA	ZZZZ010242	10360		  _RESTORE_DB--リストアーしたデータベース名の付加文字です。
JA	ZZZZ010242	10370		         D(Firebird)とI(DB2)に対しRESTORE_DB_を付加した命令と
JA	ZZZZ010242	10380		         CONTROL=RESTORE_DBはSQL=にこの内容が付加されます。
JA	ZZZZ010242	10390		        (VER18.1)
JA	ZZZZ010242	10400		  _RETURN_SQL--1を設定すると選択戻りで再検索を実行。
JA	ZZZZ010242	10410		          (読み出し不可）
JA	ZZZZ010242	10420		  _ROLLUP(式...)--ROLLUPのSQL関数。　(VER22.1)
JA	ZZZZ010242	10430		  _ROUNDUP(値1;値2)--数値を切り上げるSQL文にします。VER22.1
JA	ZZZZ010242	10440		  _S--'#'が内容です。(VER5で追加)
JA	ZZZZ010242	10450		  _SECURITY--使用者の認証区分。(セキュリティー後)(VER7)
JA	ZZZZ010242	10460		    'ADMIN'=管理者用(A使用可能）
JA	ZZZZ010242	10470		    (ただし_MENU_PERMISSIONが'ZZZZ'か_PERMISSIONと同じ時有効)
JA	ZZZZ010242	10480		  　'PERSON'=使用者用（P使用可能）
JA	ZZZZ010242	10490		    (ただし_MENU_PERMISSIONが'ZZZZ'か_PERMISSIONと同じ時有効)
JA	ZZZZ010242	10500		  　'GUEST'=ゲスト用（XとJのJOB登録のみ使用可能）
JA	ZZZZ010242	10510		  _SELECT_COUNT--_DATA_COUNTと同じ。 (VER7.26)
JA	ZZZZ010242	10520		  _SELECT数字--SELECT以降のSQL文を組み立てます。
JA	ZZZZ010242	10530		     先頭に'SELECT1’が'SELECT 'で、以外は','が付きます。
JA	ZZZZ010242	10540		     SELECT=がない場合はデータ名から別名.列名が設定します。
JA	ZZZZ010242	10550		     SELECT=が有る場合はその内容が設定されます。
JA	ZZZZ010242	10560		     _SELECT##($$)は"SELECT ' '"となります。(繰り返し無し）
JA	ZZZZ010242	10570		  (VER2.2以降有効)
JA	ZZZZ010242	10580		  _SERVER--サーバー 。
JA	ZZZZ010242	10590		  　（_SERVER_NAMEの'-'を'_'としSQLで扱える名前）
JA	ZZZZ010242	10600		  _SERVER_NAME--サーバー名 。(サーバーのコンピュータ名）
JA	ZZZZ010242	10610		　_SET--SET=の開始時'S'が設定されます。（以外は空白)(VER5.11)
JA	ZZZZ010242	10620		　_SET1--値設定1(MSQL='SELECT',以外='')(DB確定時設定）
JA	ZZZZ010242	10630		         【廃止予定】新は_O_SET
JA	ZZZZ010242	10640		  _SET2--値設定2(MSQL='=',以外=':=')(DB確定時設定）
JA	ZZZZ010242	10650		         【廃止予定】新は_O_EQUAL
JA	ZZZZ010242	10660		  _SET_COUNT--SET=の数。(プログラム解析中はここまでのSET=数)
JA	ZZZZ010242	10670		　_SETUP--セットアップ名。(インストールプログラムのみ変更可)
JA	ZZZZ010242	10680		  _SIN(数値式)--サインのSQL関数。(VER22.1)
JA	ZZZZ010242	10690		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010242	10700		  _SPACE--SET{_SPACE=..}で空白(0X20)>文字を空白に置換。
JA	ZZZZ010242	10710		  _SPACE_ERASE--SET{_SPACE_ERASE=..}で全ての空白を削除。V1.51
JA	ZZZZ010242	10720		　_SPLIT_COUNT--SPLIT_...の分割件数。 (旧仕様）
JA	ZZZZ010242	10730		　_SPLIT_CHAR_COUNT--SPLIT_CHAR{}.の分割件数。 (VER22.1）
JA	ZZZZ010242	10740		　_SPLIT_FORM_COUNT--SPLIT_FORM{}.の分割件数。 (VER22.1）
JA	ZZZZ010242	10750		  _SQL--直近で実行されたSQL文。
JA	ZZZZ010242	10760		  _SQL_OLD--２回前に実行されたSQL文。
JA	ZZZZ010242	10770		========( 以下組み込まれていない、保留)====
JA	ZZZZ010242	10780		  _SQL_3_SW--0の時修正データ無し。
JA	ZZZZ010242	10790		　　(CONTROL=PROGRAMか3.PROGRAMが記入されている時のみ
JA	ZZZZ010242	10800		　　　　　　　　　　　　　　　　　　　STOP_AFTERで有効)
JA	ZZZZ010242	10810		       (通常は「修正無し」でSTOP_AFTER処理実行されず）
JA	ZZZZ010242	10820		==========================================
JA	ZZZZ010242	10830		  _SQL_CHAR_SET--Firebirdは'CHARACTER SET UNICODE_FSS'で、
JA	ZZZZ010242	10840		                  Firebird以外は空白です。(VER8.3)
JA	ZZZZ010242	10850		  _SQL_COLUMN--SQL=受信カラム数。($も使えます）
JA	ZZZZ010242	10860		  _SQL_COUNT--SQL=受信データ件数。($も使えます）
JA	ZZZZ010242	10870		  _SQL_COUNT_123--SQL更新データ件数。(SQL{}で設定）
JA	ZZZZ010242	10880		  _SQL_DATETIME--時間を表現する型定義。(DB確定時設定）
JA	ZZZZ010242	10890		  _SQL_FILE--SQL_FILE{}のファイル名。(_JOB+_HHMM)
JA	ZZZZ010242	10900		  _SQL_FILE_COLUMN--SQL_FILE{}受信カラム数。
JA	ZZZZ010242	10910		  _SQL_FILE_COUNT--SQL_FILE{}受信データ件数。
JA	ZZZZ010242	10920		  _SQL_LENGTH--SQLの長さを返す関数。(DB確定時設定）
JA	ZZZZ010242	10930		  _SQL_LIMIT--最初のSQ=,SQL1,SQL2,FILEの受信件数を指定。
JA	ZZZZ010242	10940		          (読み出し不可）
JA	ZZZZ010242	10950		　　　　   　処理後0(無制限)に戻る。
JA	ZZZZ010242	10960		  _SQL_NCHAR--NCHARを表現する型定義。(DB確定時設定）
JA	ZZZZ010242	10970		  _SQL_NVARCHAR--NVARCHARを表現する型定義。(DB確定時設定）
JA	ZZZZ010242	10980		  _SQL_PERMISSION--SQL=の許可。 (VER6.6)
JA	ZZZZ010242	10990		    メニューの許可がZZZZでメニュー認証がX以外で変更可能です。
JA	ZZZZ010242	11000		    利用者の許可がZZZZ以外は利用者許可のみ可能です。(VER8.3)
JA	ZZZZ010242	11010		  _SQL_REPEAT_COLUMN--SQL_REPEAT受信カラム数。
JA	ZZZZ010242	11020		  _SQL_REPEAT_COUNT--SQL_REPEAT受信データ件数。
JA	ZZZZ010242	11030		  _SQL_SET_COLUMN--SQL_SET受信カラム数。
JA	ZZZZ010242	11040		  _SQL_SET_COUNT--SQL_SET受信データ件数。
JA	ZZZZ010242	11050		  _SQL_VALUE_数字--SQL=の受信データの##番目。($も使えます）
JA	ZZZZ010242	11060		  _SQL_VARCHAR--VARCHARを表現する型定義。(DB確定時設定）
JA	ZZZZ010242	11070		　　(数は１から、VER3以降可能）
JA	ZZZZ010242	11080		  _SQL1_COLUMN--SQL1受信カラム数。
JA	ZZZZ010242	11090		  _SQL1_COUNT--SQL1受信データ件数。
JA	ZZZZ010242	11100		  _SQL2_COLUMN--SQL2受信カラム数。
JA	ZZZZ010242	11110		  _SQL2_COUNT--SQL2受信データ件数。
JA	ZZZZ010242	11120		  _SQRT(数値式)--平方根のSQL関数。(VER22.1)
JA	ZZZZ010242	11130		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010242	11140		  _START--選択処理(0),更新処理(1,2,3)。
JA	ZZZZ010242	11150		  _STDEVP(数値式)--母集団の標準偏差のSQL関数(集計)。(VER22.1)
JA	ZZZZ010242	11160		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010242	11170		  _STDEVS(数値式)--標本の標準偏差のSQL関数(集計)。(VER22.1)
JA	ZZZZ010242	11180		       注意:DB2(I)では動きません。
JA	ZZZZ010242	11190		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010242	11200		  _STRING_A_Z--AからZまでの文字列です。(VER7.31)
JA	ZZZZ010242	11210		  _STRING_0_9--0から9までの文字列です。(VER7.31)
JA	ZZZZ010242	11220		  _SUBSTR--SQLの部分文字列を抜き出す関数名。(DB確定時設定）
JA	ZZZZ010242	11230		            　　　  (MSSQL='SUBSTRING',ORACLE='SUBSTR'）
JA	ZZZZ010242	11240		   (関数内は','区切ではなく_FROMと_FORを使って下さい,VER8.3)
JA	ZZZZ010242	11250		  _SUBSTR(列文字名;先頭位置名;文字数名)--部分文字列を抜き出す
JA	ZZZZ010242	11260		            　　　　　        SQL関数を構成します。(VER18.1)
JA	ZZZZ010242	11270		  _SYSTEM--システム名。
JA	ZZZZ010242	11280		  _SYSTEM_NAME-システム名称。
JA	ZZZZ010242	11290		  _T--PROGRAM=で指定のテーブル別名。（先頭の&はなし）
JA	ZZZZ010242	11300		  _TABLE--PROGRAM=で指定のテーブル名。
JA	ZZZZ010242	11310		  　(内容に?データ名？が有ると再度内容に置き換えます）
JA	ZZZZ010242	11320		  _TAN(数値式)--タンジェントのSQL関数。(VER22.1)
JA	ZZZZ010242	11330		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010242	11340		  _TILDE--'~'が内容です。（'~'1個）（VE15.1で追加）
JA	ZZZZ010242	11350		  _TMP--作業ディレクトリ。(最後に区切り文字が付きます)(VER9)
JA	ZZZZ010242	11360		  _TEXT数値--１個前の命令の原文。（数値は１から何番目を意味）
JA	ZZZZ010242	11370		  (注意：元のままで保存され使用時変数を置き換えます)
JA	ZZZZ010242	11380		  (注意：セクション内でのみ有効です)
JA	ZZZZ010242	11390		  (注意："BACK","BEEP","COMPUTE","COMPUTE_CUT"
JA	ZZZZ010242	11400		   ,"DIR_NEXT","DIR_DIR_NEXT","ERROR","EXIT","EXIT2","EXIT3"
JA	ZZZZ010242	11410		  ,"IF","IF_NOT","IF_FILE","IF_FILE_NOT"
JA	ZZZZ010242	11420		  ,"IF_TABLE",,"IF_TABLE_NOT","JUMP","MESSAGE","NOP"
JA	ZZZZ010242	11430		  ,"OUTPUT_CLEAR","READ1_CLOSE","READ1_NEXT"
JA	ZZZZ010242	11440		  ,"READ2_CLOSE","READ2_NEXT"/*,"RECEIVE_CANCEL"*/
JA	ZZZZ010242	11450		  ,"SET","SLEEP","SQL1_FIRST","SQL1_NEXT"
JA	ZZZZ010242	11460		  ,"SQL2_FIRST","SQL2_NEXT","TIMER",TIMER_BEEP"
JA	ZZZZ010242	11470		  ,"WRITE1","WRITE1_CLOSE","WRITE2","WRITE2_CLOSE"
JA	ZZZZ010242	11480		       ではセットされません）
JA	ZZZZ010242	11490		　　（VER2以降可能）
JA	ZZZZ010242	11500		  _TIMEOUT_CONNECT--SQL接続のタイムアウトの秒数。(DB接続秒）
JA	ZZZZ010242	11510		  _TIMEOUT_SQL--SQL実行のタイムアウトの秒数。(SQL実行秒)
JA	ZZZZ010242	11520		          1を転送するとトレースを再開。
JA	ZZZZ010242	11530		　　　　（トレースは実行中の命令をファイルに書きます）
JA	ZZZZ010242	11540		  _TODAY--SERVERの今日の年月日(数字8桁)。
JA	ZZZZ010242	11550		         （注意：その時点の日付です、処理中に変化する)
JA	ZZZZ010242	11560		  _TODAY_CLIENT--CLIENTの今の年月日(数字8桁)。
JA	ZZZZ010242	11570		  _TODAY_TIME--SERVERの今日の年月日時分秒ミリ秒(数字17桁)。
JA	ZZZZ010242	11580		         （注意：その時点の日付時間です、処理中に変化する)
JA	ZZZZ010242	11590		  _TODAY_TIME_CLIENT--CLIENTの今の年月日時分秒ミリ秒
JA	ZZZZ010242	11600		　　　　　　　　　　　　　　　　　　　　　　　(数字17桁)。
JA	ZZZZ010242	11610		  _TRACE--0を転送するとトレースを中止。
JA	ZZZZ010242	11620		          (読み出し不可）
JA	ZZZZ010242	11630		  _TRIM--SET{_TRIM=...};で前後の空白を取ります。(VER6.2)
JA	ZZZZ010242	11640		　_TRUNC(元値;桁位置)--元値を桁位置で切り捨るSQL関数.VER18.1
JA	ZZZZ010242	11650		  _TILDE--'~'が内容です。（'~'1個）（VE15.1で追加）
JA	ZZZZ010242	11660		  _TT--'~~'が内容です。（'~'２個）（VE5で追加）
JA	ZZZZ010242	11670		  _UNION数値--_UNION1と_UNION##,_UNION$$は空白以外はUNION。
JA	ZZZZ010242	11680		  _UNION_ALL数値-_UNION_ALL1,..##,..$$は空白以外はUNION ALL。
JA	ZZZZ010242	11690		  _URL--URL{}で受信したファイル名を設定します。(VER18.1)
JA	ZZZZ010242	11700		  _URL_DECODE---SET{_URL_DECODE=..でURLデコードをします.VER24
JA	ZZZZ010242	11710		      (_URL_ENCODE_DECODEの文字コードでデコードします)
JA	ZZZZ010242	11720		  _URL_ENCODE---SET{_URL_ENCODE=..でURLエンコードします.VER24
JA	ZZZZ010242	11730		      (_URL_ENCODE_DECODEの文字コードでエンコードします)
JA	ZZZZ010242	11740		  _URL_ENCODE_ECODE---URLエンコードの文字コードを設定します。
JA	ZZZZ010242	11750		      (初期値はUTF-8です)
JA	ZZZZ010242	11760		  _UPPER--SET{_UPPER=..で英大文字に変換します。
JA	ZZZZ010242	11770		  _USER--現在のユーザ名。
JA	ZZZZ010242	11780		  _USER_DOMAIN--現在のドメイン名。
JA	ZZZZ010242	11790		  _UTF8_GET--I,Lは3,Dは4以外は1。(VER8.3,3)(VER13,L=3,D=4)
JA	ZZZZ010242	11800		  _UTF8_SET--Iは3以外は1。     (VER8.3)
JA	ZZZZ010242	11810		  _VARIABLE--常に用意されている変数として使えます。(VER23.1)
JA	ZZZZ010242	11820		  _VERSION1--バージョン1。(1番目,常に7)
JA	ZZZZ010242	11830		  _VERSION2--バージョン2。(2番目)
JA	ZZZZ010242	11840		  _VARP(数値式)-----母集団の分散のSQL関数(集計)。(VER22.1)
JA	ZZZZ010242	11850		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010242	11860		  _VARS(数値式)-----標本の分散のSQL関数(集計)。(VER22.1)
JA	ZZZZ010242	11870		       注意:DB2(I)では動きません。
JA	ZZZZ010242	11880		       (ORACLEのODP.NETでのオーバフローエラー回避対応中）
JA	ZZZZ010242	11890		  _W--ワークデータベース先頭文字。(★VER6.5で内容を変更)
JA	ZZZZ010242	11900		   M='I_?_SYSTEM?_?_REAL_TEST[1;1]?_W_?_JOB_PERMISSION?.DBO.'
JA	ZZZZ010242	11910		       +'?_JOB_PERMISSION?'+_INP_OUT[1;1]
JA	ZZZZ010242	11920		   P,I,L='I_?_SYSTEM?_?_REAL_TEST[1;1]?_W_?_JOB_PERMISSION?.'
JA	ZZZZ010242	11930		       +'?_JOB_PERMISSION?'+_INP_OUT[1;1]
JA	ZZZZ010242	11940		   O='I_?_SYSTEM?_?_REAL_TEST?_?_INP_OUT[1;1]?'
JA	ZZZZ010242	11950		       +'_?_INP_OUT[1;1]?_?_JOB_PERMISSION?.'
JA	ZZZZ010242	11960		       +'?_JOB_PERMISSION?'+_INP_OUT[1;1]
JA	ZZZZ010242	11970		  _W_REAL--ワークデータベース本番用の先頭文字。
JA	ZZZZ010242	11980		　_W_TEST--ワークデータベーステスト用の先頭文字。
JA	ZZZZ010242	11990		  _W_INP--ワークデータベース先頭文字。
JA	ZZZZ010242	12000		          (_W_Iも同じVER8)
JA	ZZZZ010242	12010		  _W_REAL_INP--ワークデータベース本番用の先頭文字。
JA	ZZZZ010242	12020		　_W_TEST_INP--ワークデータベーステスト用の先頭文字。
JA	ZZZZ010242	12030		  _W_OUT--ワークデータベース先頭文字。
JA	ZZZZ010242	12040		          (_W_Oも同じVER8)
JA	ZZZZ010242	12050		  _W_REAL_OUT--ワークデータベース本番用の先頭文字。
JA	ZZZZ010242	12060		　_W_TEST_OUT--ワークデータベーステスト用の先頭文字。
JA	ZZZZ010242	12070		　_WEEK_CHAR(CHAR型日付)--曜日を返すSQL文を構成します。
JA	ZZZZ010242	12080		　                    (1=日曜日,7=土曜日)         (VER18.1)
JA	ZZZZ010242	12090		　_WEEK_DATE(DATE型日付)--曜日を返すSQL文を構成します。
JA	ZZZZ010242	12100		　                        (1=日曜日,7=土曜日)      (VER18.1)
JA	ZZZZ010242	12110		  _WP_許可--ワークデータベース先頭文字。
JA	ZZZZ010242	12120		  _WP_REAL_許可--ワークデータベース本番用の先頭文字。
JA	ZZZZ010242	12130		　_WP_TEST_許可--ワークデータベーステスト用の先頭文字。
JA	ZZZZ010242	12140		  _WP_INP_許可--ワークデータベース先頭文字。
JA	ZZZZ010242	12150		          (_WP_I_許可も同じVER8)
JA	ZZZZ010242	12160		  _WP_OUT_許可--ワークデータベース先頭文字。
JA	ZZZZ010242	12170		          (_WP_O_許可も同じVER8)
JA	ZZZZ010242	12180		  _WP_REAL_INP_許可--ワークデータベース本番用の先頭文字。
JA	ZZZZ010242	12190		          (_WP_REAL_I_許可も同じVER8)
JA	ZZZZ010242	12200		  _WP_REAL_OUT_許可--ワークデータベース本番用の先頭文字。
JA	ZZZZ010242	12210		　_WP_TEST_INP_許可--ワークデータベーステスト用の先頭文字。
JA	ZZZZ010242	12220		          (_WP_TEST_I_許可も同じVER8)
JA	ZZZZ010242	12230		　_WP_TEST_OUT_許可--ワークデータベーステスト用の先頭文字。
JA	ZZZZ010242	12240		          (_WP_TEST_O_許可も同じVER8)
JA	ZZZZ010242	12250		  _WMI--SET{_WMI=マネージメントオブジェクト名+アイテム名}
JA	ZZZZ010242	12260		　　　　　　　　　　　　　　　　　　でWMI情報を設定。
JA	ZZZZ010242	12270		  *注意*JAVA版は動きません。
JA	ZZZZ010242	12280		  _WHERE_COUNT--_SET_COUNTと同じ。 (VER7.26)
JA	ZZZZ010242	12290		　_WHERE数字--WHERE以降のSQL文を組み立てます。
JA	ZZZZ010242	12300		    VER6:
JA	ZZZZ010242	12310		    該当データの@WHEREの内容を設定します。
JA	ZZZZ010242	12320		    ①@WHEREが空白の場合は空白を設定します。
JA	ZZZZ010242	12330		    ②空白でない時は"?_WHERE_AND?+' ('+@WHEREの内容+')'"
JA	ZZZZ010242	12340		      を設定し_WHERE_ANDが'AND'になります。
JA	ZZZZ010242	12350		    ③別名に'*'が有っても@WHEREを設定すれば採用されます。
JA	ZZZZ010242	12360		  _WHERE_AND--'WHERE'または'AND'が設定されます。
JA	ZZZZ010242	12370		     SQL=開始,"_WHERE1","WHERE##"($$)で'WHERE'になります。
JA	ZZZZ010242	12380		     _WHERE数が有効,_WHERE_ANDが使われた場合'AND'になります。
JA	ZZZZ010242	12390		     _WHERE##,_WHERE$$の場合は空白となります。
JA	ZZZZ010242	12400		  _WINDOW--ウインドウの識別番号です。(数字２桁）
JA	ZZZZ010242	12410		  _WORK--サーバー内ファイル名用 (★VER8.3,VER6.5で変更）
JA	ZZZZ010242	12420		   （サーバー内でユニークな文字列）。
JA	ZZZZ010242	12430		    メニュー起動の場合
JA	ZZZZ010242	12440		　(?_JOB_PERMISSION?__?_INP_OUT[1;1]?M?_COMPUTER??_WINDOW?)
JA	ZZZZ010242	12450		     時間起動の場合
JA	ZZZZ010242	12460		  (?_JOB_PERMISSION?__?_INP_OUT[1;1]?T?_JOB??_HHMM?)
JA	ZZZZ010242	12470		   　注意：複数使用を想定し英字１文字を末尾へ付加の事。
JA	ZZZZ010242	12480		  _WORK_TABLE--作業テーブル用 (★VER8.3,VER6.5で変更）
JA	ZZZZ010242	12490		     使用する場合はAから英字1文字を末尾へ付加してください。
JA	ZZZZ010242	12500		 　　（数字はインデックス名と重複するので必ず英字にする事）
JA	ZZZZ010242	12510		 　　（消し忘れで作業テーブルが沢山残らないようにする為）
JA	ZZZZ010242	12520		 　　（_WORK_TABLE+"__"はCURSOR{},SQL_CURSOR{}で使用します）
JA	ZZZZ010242	12530		　_WX--_Wに対しテーブル名先頭の許可名以降はありません。
JA	ZZZZ010242	12540		　_WX_...--_W_に対しテーブル名先頭の許可名以降はありません。
JA	ZZZZ010242	12550		  _WW--_Wの_INP_OUT[1;1]の前に_PARTを含めます。(VER8)
JA	ZZZZ010242	12560		  _XML--XML{}でデータ無しは'0'、全て有りは'1'　(VER24.1)
JA	ZZZZ010242	12570		         一部有りは'2'と成ります。
JA	ZZZZ010242	12580		  _XML(データ名1[;データ名2...])--XMLにエンコードします。
JA	ZZZZ010242	12590		      データ名2以降は属性として扱われます。
JA	ZZZZ010242	12600		      データ名の最初の.以降を要素名または属性名とします。
JA	ZZZZ010242	12610		  _XML_L(...)--_XMLと同じでデータ名が小文字です。
JA	ZZZZ010242	12620		  _XML_P(...)--_XMLと同じでデータ名2文字以降小文字です。
JA	ZZZZ010242	12630		  _XML2(...)--_XML(と同じですが内容を変換しません。
JA	ZZZZ010242	12640		  _XML2_L(...)--_XML_Pと同じですが内容を変換しません。
JA	ZZZZ010242	12650		  _XML2_P(...)--_XML_P(と同じですが内容を変換しません。
JA	ZZZZ010242	12660		　_X--SET=,DATA=の属性内の別名、変更も出来ます(VER5.11）
JA	ZZZZ010242	12670		  VER6:SET=,DATA=の開始で別名を設定しますが空白の時は
JA	ZZZZ010242	12680		       データ名の先頭文字とし、最初にSが有ると取ります。
JA	ZZZZ010242	12690		  _YEN--内容が'\'です。
JA	ZZZZ010242	12700		  _Z_ALL_NAME--Ｚ項目群全項目名。
JA	ZZZZ010242	12710		  _Z_ALL_NAME_VALUE--Ｚ項目群全項目名を引用符で囲った物。
JA	ZZZZ010242	12720		  (VER3以降可能）
JA	ZZZZ010242	12730		  _Z_INSERT_NAME--Ｚ項目群INSERT用NAME。
JA	ZZZZ010242	12740		  _Z_INSERT_VALUE--Ｚ項目群INSERT用VALUE。
JA	ZZZZ010242	12750		  _Z_UPDATE_ADD--Ｚ項目群UPDATE作成用SET。
JA	ZZZZ010242	12760		  _Z_UPDATE_CHANGE--Ｚ項目群UPDATE修正用SET。
JA	ZZZZ010242	12770		  _Z_UPDATE_CANCEL--Ｚ項目群UPDATE削除用SET。
JA	ZZZZ010242	12780		3.8)
JA	ZZZZ010242	12790		  ^リンク名（VER5で仕様変更）
JA	ZZZZ010242	12800		　@ZZZZZZ_LINK_リンク名_？_REAL_TEST[1;1]?_?_JOB_PERMISSION?
JA	ZZZZ010242	12810		　　の内容の前にI_?_SYSTEM?_を付加したものです。
JA	ZZZZ010242	12820		 ^リンク名_パーミッション（VER5で仕様変更）
JA	ZZZZ010242	12830		　@ZZZZZZ_LINK_リンク名_？_REAL_TEST[1;1]?_パーミッション
JA	ZZZZ010242	12840		　　の内容の前にI_?_SYSTEM?_を付加したものです。
JA	ZZZZ010242	12850		===========================================================
JA	ZZZZ010242	12860		4)**-行制御命令
JA	ZZZZ010242	12870		★「+」を「-」にすると採用条件が反対になります。
JA	ZZZZ010242	12880		★「備考」は空白以降で判定するので特に注意下さい。
JA	ZZZZ010242	12890		★2個連続で書いた場合はAND（かつ）の判定をしますが,
JA	ZZZZ010242	12900		  「|」を付加した場合は前後をOR（又は）で判定します。
JA	ZZZZ010242	12910		   ただし、一般の動きとは異なり、ANDよりもORの判定を
JA	ZZZZ010242	12920		         先に実行するように動きますので注意して下さい。
JA	ZZZZ010242	12930		  (VER7.7よりの機能）
JA	ZZZZ010242	12940		4.01)**-先頭が「*」は備考で採用しません。
JA	ZZZZ010242	12950		*** *備考
JA	ZZZZ010242	12960		4.02)**-OS名が同じ時採用します。
JA	ZZZZ010242	12970		*** OS名1文字+...
JA	ZZZZ010242	12980		　(WINDOWS="W", LINUX="U")
JA	ZZZZ010242	12990		4.03)**-データベース名が同じ場合採用します。
JA	ZZZZ010242	13000		*** データベース名1文字+
JA	ZZZZ010242	13010		  (MSSQL="M",ORACLE="O",IBM DB2="I",POSTGRESQL="P",MYSQL='L')
JA	ZZZZ010242	13020		4.04)**-言語が同じ時採用します。
JA	ZZZZ010242	13030		*** 言語2文字+...
JA	ZZZZ010242	13040		  (日本語="JA",英語="EN")
JA	ZZZZ010242	13050		4.05.1)**-REPEAT=の回数と同じ時採用します。
JA	ZZZZ010242	13060		*** 数字+...
JA	ZZZZ010242	13070		  "0"の時はREPEAT=の繰り返しがない時に採用します。
JA	ZZZZ010242	13080		4.05.2)**-REPEAT0=又はREPEAT2=の回数と同じ時採用します。
JA	ZZZZ010242	13090		*** $数字+...
JA	ZZZZ010242	13100		  (REPEAT0=内の場合はREPEAT0=の回数が優先となります）
JA	ZZZZ010242	13110		  "$0"の時はREPEAT0=とREPEAT2=の繰り返しがない時採用します。
JA	ZZZZ010242	13120		4.06.1)**-テスト時のみ時採用します。
JA	ZZZZ010242	13130		*** TEST+...
JA	ZZZZ010242	13140		4.06.2)**-PROGRAM=INPUTの時採用します。
JA	ZZZZ010242	13150		*** INPUT+...
JA	ZZZZ010242	13160		4.06.3)**-PROGRAM=OUTPUTの時採用します。
JA	ZZZZ010242	13170		*** OUTPUT+...
JA	ZZZZ010242	13180		4.06.4)**-PROGRAM=NOTの時採用します。
JA	ZZZZ010242	13190		*** NOT+...
JA	ZZZZ010242	13200		4.06.5)**-メニューがINPUTの時採用します。
JA	ZZZZ010242	13210		*** MENU_INPUT+...
JA	ZZZZ010242	13220		4.06.6)**-メニューがOUTPUTの時採用します。
JA	ZZZZ010242	13230		*** MENU_OUTPUT+...
JA	ZZZZ010242	13240		4.07.1)**-%名前が+（無設定時も+）の時採用します。
JA	ZZZZ010242	13250		*** %名前+...
JA	ZZZZ010242	13260		　MINUS=%名前か?SET{%名前='-'}で不採用に設定されます。
JA	ZZZZ010242	13270		　PLUS=%名前か?SET{%名前='+'}で採用に設定されます。
JA	ZZZZ010242	13280		  ZZZZZZ_ETC_TABLEのZZZZZZ_KEY1='ZZZZZZ_%'で初期値を
JA	ZZZZ010242	13290		     設定できます。
JA	ZZZZ010242	13300		  下記は特別にI言語がPROGRAM=で設定し
JA	ZZZZ010242	13310		     COPY=@ZZZZZZ_SQLで使用されます。(VER7.28)
JA	ZZZZ010242	13320		     %Z_CANCEL_SELECTはOUTPUTが'-'で以外は'+'になります。
JA	ZZZZ010242	13330		     %Z_CANCEL_WHERE はOUTPUTが'+'で以外は'-'になります,
JA	ZZZZ010242	13340		      ただし、PROGRAM=のテーブルにZ_CANCEL無は'-'です。(V8.6)
JA	ZZZZ010242	13350		     %ZZZZZZ_SQL_SELECTは'+'になります。
JA	ZZZZ010242	13360		     %ZZZZZZ_SQL_FROM  は'+'になります。
JA	ZZZZ010242	13370		     %ZZZZZZ_SQL_LEFT  は'+'になります。
JA	ZZZZ010242	13380		     %ZZZZZZ_SQL_WHERE は'+'になります。
JA	ZZZZ010242	13390		     %ZZZZZZ_SQL_GROUP は'+'になります。
JA	ZZZZ010242	13400		     %ZZZZZZ_SQL_HAVINGは'+'になります。
JA	ZZZZ010242	13410		     %ZZZZZZ_SQL_ORDER は'+'になります。
JA	ZZZZ010242	13420		     (注意:PROGRAM=で設定されるのでSET{}では変更できません）
JA	ZZZZ010242	13430		4.07.2)**-行制御命令の「%名前+」の行を不採用に設定します。
JA	ZZZZ010242	13440		*** MINUS=%名前 [備考]
JA	ZZZZ010242	13450		△行制御命令の「%名前+」の行を不採用に設定します。
JA	ZZZZ010242	13460		　名前には先頭に必ず"%"を付けて下さい。
JA	ZZZZ010242	13470		4.07.3)**-行制御命令の「%名前+」の行を採用し設定します。
JA	ZZZZ010242	13480		*** PLUS=%名前 [備考]
JA	ZZZZ010242	13490		　名前には先頭に必ず"%"を付けて下さい。
JA	ZZZZ010242	13500		4.08.1)**-次のREPEAT=まで初期値を１づつ加算し繰り返します。
JA	ZZZZ010242	13510		*** REPEAT=[終了値][,初期値] [備考]
JA	ZZZZ010242	13520		  初期値無しは1です。
JA	ZZZZ010242	13530		  終了値が0または無しの場合はREPEAT=の終了です。
JA	ZZZZ010242	13540		  行中の"##"を数値"#-"を数値-1を"#+"を数値+1で置き換えます。
JA	ZZZZ010242	13550		　値はデータ名も指定可能です。
JA	ZZZZ010242	13560		　値を演算子１個（+-*/%)まで使用する事ができます。
JA	ZZZZ010242	13570		　REPEAT0=も終了と見なします。
JA	ZZZZ010242	13580		　=以降は最初の空白以降は全て備考とみなします。
JA	ZZZZ010242	13590		4.08.2)**-次のREPEAT0=まで初期値を１づつ加算し繰り返します。
JA	ZZZZ010242	13600		*** REPEAT0=[終了値][,初期値] [備考] (V7.23)
JA	ZZZZ010242	13610		  行中の"$$"を数値"$-"を数値-1を"$+"を数値+1で置き換えます。
JA	ZZZZ010242	13620		  REPEAT=がこの中で使えます。
JA	ZZZZ010242	13630		　=以降は最初の空白以降は全て備考とみなします。
JA	ZZZZ010242	13640		4.08.3)**-REPEAT=内で更に繰り返しをします。
JA	ZZZZ010242	13650		*** REPEAT2=[終了値][,初期値] [備考]
JA	ZZZZ010242	13660		  行中の"$$"を数値"$-"を数値-1を"$+"を数値+1で置き換えます,
JA	ZZZZ010242	13670		  ただし、REPEAT0=の中ではREPEAT0=の数値が優先されます。
JA	ZZZZ010242	13680		  次のREPEAT=,REPEAT0=も終了とみなします。
JA	ZZZZ010242	13690		　=以降は最初の空白以降は全て備考とみなします。
JA	ZZZZ010242	13700		4.09.1)**-次のNAME=までの行に名前を付けます。
JA	ZZZZ010242	13710		*** NAME=[名前] [備考]
JA	ZZZZ010242	13720		  名前なしの場合は名前の終了です。
JA	ZZZZ010242	13730		  =と名前の間に空白を入れないで下さい。（空白以降は備考）
JA	ZZZZ010242	13740		4.09.2)**-NAME=の中で更に名前を部分設定します。
JA	ZZZZ010242	13750		*** NAME2=[名前] [備考]
JA	ZZZZ010242	13760		　NAME=も終了と見なします。
JA	ZZZZ010242	13770		  =と名前の間に空白を入れないで下さい。（空白以降は備考）
JA	ZZZZ010242	13780		4.09.3)**-この位置に名前で指定された行を単純にコピーします。
JA	ZZZZ010242	13790		*** COPY=名前 [備考]
JA	ZZZZ010242	13800		    名前はすでに前方で設定されている必要があります。
JA	ZZZZ010242	13810		    名前の先頭に'@'を付けた場合は本番用データベース上の
JA	ZZZZ010242	13820		  ZZZZZZ_ETC_TABLEのZZZZZZ_KEY1='ZZZZZZ_COPY'で設定されている
JA	ZZZZ010242	13830		  ZZZZZZ_KEY2の先頭25文字と一致する物をCOPYします。(VER7.26)
JA	ZZZZ010242	13840		4.10.1)**-COMMENT_ENDまで備考とみなし行を採用しません。
JA	ZZZZ010242	13850		*** COMMENT_BEGIN [備考]
JA	ZZZZ010242	13860		4.10.2)**-COMMENT2_ENDまで備考とみなし行を採用しません。
JA	ZZZZ010242	13870		*** COMMENT2_BEGIN [備考]                       (VER8.10)
JA	ZZZZ010242	13880		    COMMENT_ENDが現れた場合も備考の終了となります。
JA	ZZZZ010242	13890		4.10.3)**-備考（COMENNT_BEGINとCOMMENT2_END)の終了です。
JA	ZZZZ010242	13900		*** COMMENT_END [備考]
JA	ZZZZ010242	13910		4.10.4)**-備考（COMENNT2_BEGIN)の終了です。
JA	ZZZZ010242	13920		*** COMMENT2_END [備考]                        (VER8.10)
JA	ZZZZ010242	13930		===========================================================
JA	ZZZZ010242	13940		5)**-定義命令
JA	ZZZZ010242	13950		5.00)**-時間起動ジョブではCONTROL=と=のみ使えます。
JA	ZZZZ010242	13960		5.01)**-プログラムの種類とテーブル名を指定します。
JA	ZZZZ010242	13970		*** PROGRAM=[処理種類][,&テーブル別名,テーブル名]
JA	ZZZZ010242	13980		*** FROM=&テーブル別名,テーブル名] (VER6.2)
JA	ZZZZ010242	13990		  OUTPUT-データの検索処理(画面に表示）をするプログラム。
JA	ZZZZ010242	14000		  INPUT--データの更新処理(削除,作成,修正)をするプログラム。
JA	ZZZZ010242	14010		  NOT--検索処理でも更新処理でもないプログラム。
JA	ZZZZ010242	14020		  メニュー起動の処理種類は省略できます。（メニュー設定値）
JA	ZZZZ010242	14030		　ファイル起動の処理種類は省略できます。（NOTと判定）
JA	ZZZZ010242	14040		  テーブル名を指定するとINPUTの更新処理テーブルとなります。
JA	ZZZZ010242	14050		  テーブル別名は"&X1"とする事を推奨します。
JA	ZZZZ010242	14060		  テーブル別名の先頭には"&"を必ず付けて下さい。
JA	ZZZZ010242	14070		  テーブル別名が空白の時は&X1とみなします。 VER18.1
JA	ZZZZ010242	14080		  PROGRAM=は時間起動処理では使えません。
JA	ZZZZ010242	14090		  FROM=は時間起動処理以外で使えません。
JA	ZZZZ010242	14100		5.02)**-プログラムを制御する場合に使用します。
JA	ZZZZ010242	14110		*** CONTROL=制御
JA	ZZZZ010242	14120		  複数指定する場合はカンマで区切ります。
JA	ZZZZ010242	14130		  0--選択でそのデータを選択し次のプログラムに移ります。
JA	ZZZZ010242	14140		  1--削除の機能を抑止します。
JA	ZZZZ010242	14150		  1_PROGRAM--削除処理を迂回します。 （VER8.3)
JA	ZZZZ010242	14160		  1_TABLE--削除時別テーブルにキー情報があるか確認します。
JA	ZZZZ010242	14170		　（VER4より有効）
JA	ZZZZ010242	14180		  2--作成の機能を抑止します。
JA	ZZZZ010242	14190		  2_PROGRAM--作成処理を迂回します。 （VER8.3)
JA	ZZZZ010242	14200		  2_KEY--作成時キー項目による存在確認処理を迂回します。
JA	ZZZZ010242	14210		     (属性２がO「入力しない」、N「非表示」の時は迂回します）
JA	ZZZZ010242	14220		  3--修正の機能を抑止します。
JA	ZZZZ010242	14230		  3_PROGRAM--修正処理を迂回します。（VER8.3)
JA	ZZZZ010242	14240		  BEGIN_ENTER--最初に「Enter」を実行します。
JA	ZZZZ010242	14250		  CUBE--_DBがI,M,O,Pの時_GROUP1に"CUBE("を付加し,付加した時
JA	ZZZZ010242	14260		        _ORDER1を")"とし_ORDER2以降は空白とします。VER22.1
JA	ZZZZ010242	14270		           (注意:MariaDBでは動きません）
JA	ZZZZ010242	14280		  ERROR--エラー発生時命令が無くても異常終了せず。
JA	ZZZZ010242	14290		 （通常は命令がないと異常終了します）
JA	ZZZZ010242	14300		  (「@データ名」が無くてもエラーにしません）
JA	ZZZZ010242	14310		  ERROR_SQL--SQL=でエラー発生時異常終了せず。
JA	ZZZZ010242	14320		  IF_ERROR--VER16以前のエラー時セミコロンまで移動で動きます。
JA	ZZZZ010242	14330		  JUDGE--「PROGRAM=NOT」で更新確認を迂回します。
JA	ZZZZ010242	14340		  MAX--SQL=により表示された行のみ操作できます。
JA	ZZZZ010242	14350		  PROGRAM--「PROGRAM=INPUT」と「NOT」の場合更新処理を迂回。
JA	ZZZZ010242	14360		　PROGRAM_ERROR-更新処理でレコード無しに関係なく処理します。
JA	ZZZZ010242	14370		　　　　　　　　削除でレコード無し--何もしないで終了。
JA	ZZZZ010242	14380		  　　　　　　　修正でレコード無し--作成して終了。
JA	ZZZZ010242	14390		　  　　　　　　作成でレコード有り--修正して終了。
JA	ZZZZ010242	14400		  PROGRAM_TEST-本番処理でテストテーブルにも更新処理を実行。
JA	ZZZZ010242	14410		  (STOP_...処理もreal_testを'TEST'で実行後本番処理をします）
JA	ZZZZ010242	14420		  RESTORE_DB--SQL=D(Firebird)とI(DB2)に対しSQL=の
JA	ZZZZ010242	14430		     データベース名に_RESTORE_DBを付加します。 (VER18.1)
JA	ZZZZ010242	14440		  ROLLUP--_DBがI,M,O,Pの時_GROUP1に"ROLLUP("を付加し,付加した
JA	ZZZZ010242	14450		        _ORDER1を")"とし_ORDER2以降は空白とします。VER22.1
JA	ZZZZ010242	14460		  SAME--データ辞書のテーブルとPROGRAM=のテーブル名が同じ
JA	ZZZZ010242	14470		        場合でもチェックの対象とします。
JA	ZZZZ010242	14480		 　★注意:SAMEを指定した以降のTABLE=とDICTIONARY=で有効です。
JA	ZZZZ010242	14490		  SCROLL--画面１行表示不可の時横スクロールで１行表示します。
JA	ZZZZ010242	14500		          未記入で１画面に入り切らない時横スクロールします。
JA	ZZZZ010242	14510		  SMTP--SMTP命令で確認画面を表示しません。
JA	ZZZZ010242	14520		　WIDTH--画面横幅を８０文字で固定します。
JA	ZZZZ010242	14530		　HIGH--画面縦幅を２５行で固定とします。
JA	ZZZZ010242	14540		◆以下はメニューの認証方法が'A'か許可が'ZZZZ'の時有効です。
JA	ZZZZ010242	14550		　(VER8.3で条件変更）
JA	ZZZZ010242	14560		  SQL_DBO--SQL=をDユーザ(管理者)で実行します。
JA	ZZZZ010242	14570		             (SQL_Dも同じです。VER8)
JA	ZZZZ010242	14580		　SQL_OUT--SQL=をOユーザで実行します。
JA	ZZZZ010242	14590		             (SQL_Oも同じです。VER8)
JA	ZZZZ010242	14600		　SQL_LOGIN--SQL=をLOGINユーザで実行します。
JA	ZZZZ010242	14610		　SQL_TEST--SQL=をテスト環境で実行します。
JA	ZZZZ010242	14620		5.03)**-表示のライン数を指定値で固定します。
JA	ZZZZ010242	14630		*** LINE=行数
JA	ZZZZ010242	14640		5.04.1)**-検索で各結合方法でJOINをします。
JA	ZZZZ010242	14650		*** INNER=&テーブル別名,テーブル名[,&相手別名,インデックス]
JA	ZZZZ010242	14660		*** LEFT=&テーブル別名,テーブル名[,&相手別名,インデックス]
JA	ZZZZ010242	14670		*** RIGHT=&テーブル別名,テーブル名[,&相手別名,インデックス]
JA	ZZZZ010242	14680		*** FULL=&テーブル別名,テーブル名[,&相手別名,インデックス]
JA	ZZZZ010242	14690		*** INNER2=&テーブル別名,テーブル名[,&相手別名,インデックス]
JA	ZZZZ010242	14700		*** LEFT2=&テーブル別名,テーブル名[,&相手別名,インデックス]
JA	ZZZZ010242	14710		*** RIGHT2=&テーブル別名,テーブル名[,&相手別名,インデックス]
JA	ZZZZ010242	14720		*** FULL2=&テーブル別名,テーブル名[,&相手別名，インデックス]
JA	ZZZZ010242	14730		*** COMMA=&テーブル別名,テーブル名        (VER7.30)
JA	ZZZZ010242	14740		   2が付いている物は条件判定でZ_CANCEL=' ' を付けません。
JA	ZZZZ010242	14750		   インデックスが'*'の場合ONのキー比較を付けません。(VER7.23)
JA	ZZZZ010242	14760		   (注意：MariaDB(L)の場合FULL,FULL2は動きません）
JA	ZZZZ010242	14770		5.04.2)**-相手のJOINキー名が異なる場合に指定します。
JA	ZZZZ010242	14780		*** JOIN_KEY=相手一致キー名[,...]
JA	ZZZZ010242	14790		  COMMA=では記入出来ません。
JA	ZZZZ010242	14800		5.04.3)**-JOIN ON に追加する条件を書きます。
JA	ZZZZ010242	14810		*** JOIN_ON=比較条件   (VER7.23で追加、JOIN_WHERE改名）
JA	ZZZZ010242	14820		  COMMA=では記入出来ません。
JA	ZZZZ010242	14830		5.04.4)**-テーブル情報を設定します。
JA	ZZZZ010242	14840		*** TABLE=&テーブル別名,テーブル名
JA	ZZZZ010242	14850		  テーブル別名は先頭に"&"を必ず付けて下さい。
JA	ZZZZ010242	14860		5.04.5)**-列情報を設定します。
JA	ZZZZ010242	14870		*** DICTIONARY=列名,...
JA	ZZZZ010242	14880		  (VER3以降は複数指定可能です）
JA	ZZZZ010242	14890		5.05.1)**-開始時に実行する命令群を以下に記入します。
JA	ZZZZ010242	14900		*** BEGIN [備考]
JA	ZZZZ010242	14910		5.05.2)**-開始と終了時に実行する命令群を以下に記入します。
JA	ZZZZ010242	14920		*** BEGIN_END [備考]
JA	ZZZZ010242	14930		5.05.3)**-更新または選択開始時に実行する命令群を記入します。
JA	ZZZZ010242	14940		*** START [備考]
JA	ZZZZ010242	14950		5.05.4)**-更新前に実行する命令群を以下に記入します。
JA	ZZZZ010242	14960		*** STOP_BEFORE [備考]
JA	ZZZZ010242	14970		  (VER5以降有効）
JA	ZZZZ010242	14980		  開始前にSQL{BEGIN TRANSACTION};が実行されています。
JA	ZZZZ010242	14990		5.05.5)**-更新後に実行する命令群を以下に記入します。
JA	ZZZZ010242	15000		*** STOP_AFTER [備考]
JA	ZZZZ010242	15010		  (VER5以降有効、STOPも可であるがVER4以前と互換のため）
JA	ZZZZ010242	15020		  終了後にSQL{COMMIT TRANSACTION};が実行されています。
JA	ZZZZ010242	15030		5.05.6)**-終了時に実行する命令群を以下に記入します。
JA	ZZZZ010242	15040		*** END [備考]
JA	ZZZZ010242	15050		　選択で次のプログラムに行くときはEND処理はしません。
JA	ZZZZ010242	15060		　(注意：プログラムでエラーが発生しても無視され
JA	ZZZZ010242	15070		　       エラー以降の処理は実行されません）
JA	ZZZZ010242	15080		5.05.7)**-DATA=の表示に色を設定する処理を記入します。
JA	ZZZZ010242	15090		*** COLOR [備考]
JA	ZZZZ010242	15100		  SET=の表示はセクション内でプログラムしてください。
JA	ZZZZ010242	15110		5.06.1.1)**-INPUTとOUTPUTで検索前に入力や表示をします。
JA	ZZZZ010242	15120		-------------
JA	ZZZZ010242	15130		*** SET=[{属性}]データ名{定義}[{チェック1}[{チェッ2}
JA	ZZZZ010242	15140		 [{メッセージ}[{?CHECK?}[{?CHECK61?}[{LEFTのSQL文 }]]]]]]
JA	ZZZZ010242	15150		 [{{命令群}}][タイトル]
JA	ZZZZ010242	15160		     画面表示は最大で10行分表示までです。
JA	ZZZZ010242	15170		     一行に書く必要がありますが全てを書く事は文字数が少ないで
JA	ZZZZ010242	15180		       出きません、変数で与える場合を想定した文法です。
JA	ZZZZ010242	15190		     SET=のデータ名はDATA=のデータ名と区別するため,基本の命名
JA	ZZZZ010242	15200		       方法は'S'+別名+'.'+列名(先頭にSを付ける)とします,
JA	ZZZZ010242	15210		       尚,別名がPROGRAM=で指定した別名は省略出来,且つ,'S'+'.'
JA	ZZZZ010242	15220		       も省略出来、列名のみとする事が出来ます。
JA	ZZZZ010242	15230		     PROGRAM=NOTでは使用出来ません。
JA	ZZZZ010242	15240		5.06.1.2)**-検索の表示、更新の入力として使用します。
JA	ZZZZ010242	15250		*** DATA=[{属性}]データ名{定義}[{チェック1}[{チェッ2}
JA	ZZZZ010242	15260		 [{メッセージ}[{?CHECK?}[{?CHECK61?}[{{LEFTのSQL文}]]]]]]
JA	ZZZZ010242	15270		 [{{命令群}}][タイトル]
JA	ZZZZ010242	15280		     DATA=のデータ名の基本の命名方法は別名+'.'+列名とします,
JA	ZZZZ010242	15290		       尚、別名がPROGRAM=で指定した別名は省略出来,
JA	ZZZZ010242	15300		       '.'+列名とする事が出来ます。
JA	ZZZZ010242	15310		5.06.1.3)**-SET=でもDATA=でも無い作業用です。（時間起も可能）
JA	ZZZZ010242	15320		*** WORK=データ名{定義}
JA	ZZZZ010242	15330		　（WORKはVER5以上）
JA	ZZZZ010242	15340		5.06.1.4)**-SET=,DATA=,WORK=共通の説明です。
JA	ZZZZ010242	15350		　画面の表示又は更新の表示上の文字長は最大８０文字までです。
JA	ZZZZ010242	15360		 「$データ名」は前のプログラムの同名のデータが初期値です。
JA	ZZZZ010242	15370		　 (PROGRAM=INPUT,OUTPUTのDATA=では使えません）
JA	ZZZZ010242	15380		  （このデータのデータ名は$を除いた名前となります）
JA	ZZZZ010242	15390		●属性:
JA	ZZZZ010242	15400		　属性は
JA	ZZZZ010242	15410		 {[属性1][属性2][属性3][属性4][属性5],[別名],[右空白数],[色]}
JA	ZZZZ010242	15420		 　を指定。
JA	ZZZZ010242	15430		  (属性1と属性2,3,4,5の間にはコンマが無いので注意の事）
JA	ZZZZ010242	15440		　属性無しの時は省略できます。
JA	ZZZZ010242	15450		  属性1が"K"はキーデータで更新時のキーになります,SET=でも可。
JA	ZZZZ010242	15460		　(SET=の時属性3が無くても一致比較(=)になります）(VER22.1)
JA	ZZZZ010242	15470		  属性1が"*"は更新対象になりません,SET=は不要です。
JA	ZZZZ010242	15480		  属性2が"O"は更新時入力対象になりません。
JA	ZZZZ010242	15490		　(SET=の時属性3が無くても一致比較(=)になります）
JA	ZZZZ010242	15500		  属性2が"N"はデータを画面上に表示しません。
JA	ZZZZ010242	15510		  属性2が"/"はEnter以外は入力完了しません、
JA	ZZZZ010242	15520		    (DATA=の最後の入力データは自動的に設定します。)
JA	ZZZZ010242	15530		  属性2が"#"は下矢印キーでの移動を停止します。(VER7.17)
JA	ZZZZ010242	15540		    (SET=の最後の入力データは自動的に設定します。)
JA	ZZZZ010242	15550		  属性2が"!"は最後の'/'や'#'の自動設定を回避します。
JA	ZZZZ010242	15560		  属性3はSET=の場合_WHERE数用で
JA	ZZZZ010242	15570		　 "=","<",">","<=",">=","<>","L","I","E"が設定できます。
JA	ZZZZ010242	15580		　（陽にLIKEとしたい場合は"L","I","E"を設定します
JA	ZZZZ010242	15590		　　"L"は最後に%が付きます、"I"は先頭と最後に%が付きます、
JA	ZZZZ010242	15600		　　"E"は先頭に%が付きます)
JA	ZZZZ010242	15610		  属性3はDATA=の場合_ORDER数用です。 (VER7.23)
JA	ZZZZ010242	15620		    "A"はASENDING,"D"はDESENDINGで_ORDER_COUNTも設定します。
JA	ZZZZ010242	15630		    "C"はCUTで設定しません。
JA	ZZZZ010242	15640		  属性4はDATA=の場合_GROUP数用で (VER7.23)
JA	ZZZZ010242	15650		    "G"を設定すると_GROUP数にデータ名かSELECT=値を
JA	ZZZZ010242	15660		    設定します。
JA	ZZZZ010242	15670		  属性5は数値の1から9までで長さ１を数値分増やします。(V8.6)
JA	ZZZZ010242	15680		  　SET=のセクション開始時点で@WHEREに比較文字を設定します。
JA	ZZZZ010242	15690		  　(データ入力直後に設定されるのでセクション内でデータを
JA	ZZZZ010242	15700		  　 変更しても反映されないので@WHERE自体を変更します）
JA	ZZZZ010242	15710		  @WHEREは文字の場合"データ名 LIKE '?データ名?%"が基本です。
JA	ZZZZ010242	15720		  @WHEREは数値の場合"データ名>=?データ名?"が基本です。
JA	ZZZZ010242	15730		  @WHEREは属性2がOの場合は一致比較が基本です。
JA	ZZZZ010242	15740		  @WHEREはSELECT=が有ると左辺をこの内容で置き換えます。
JA	ZZZZ010242	15750		  　★注意：ただし、データが空白の時は空白となります。
JA	ZZZZ010242	15760		　別名は細かな動きをします。(VER5.11で変更）
JA	ZZZZ010242	15770		　VER6:
JA	ZZZZ010242	15780		　別名は以下のルールで運用します。
JA	ZZZZ010242	15790		　◎データー辞書のCHECKが'SELECT1','SELECT21','SELECT21D'
JA	ZZZZ010242	15800		　  ,'SELECT22','SELECT22D','SECTION1','SECTION2'の場合。
JA	ZZZZ010242	15810		　  (LISTBOX1','LISTBOX21','LISBOX21D,'LISTBOX22','LISTBOX22D
JA	ZZZZ010242	15820		　   は中止 VER22.1)
JA	ZZZZ010242	15830		  　①'&'+別名でデーター辞書の指定が有効となります。
JA	ZZZZ010242	15840		  　  &無しは全てが無効となります。
JA	ZZZZ010242	15850		  　②先頭に'*'を付加した場合は備考項目設定無しとします。
JA	ZZZZ010242	15860		  　  (入力時点でのチェック機能は有効です）
JA	ZZZZ010242	15870		      SET=は実行開始で@WHEREに空白を転送します。
JA	ZZZZ010242	15880		      (_WHERE数の初期値が空白となります）
JA	ZZZZ010242	15890		  　  SELECT2..での_SQL_COMMENT転送命令を無視します。
JA	ZZZZ010242	15900		  　  SECTION2の判定処理で備考項目への転送をしません。
JA	ZZZZ010242	15910		  　  _LEFT数を空白にします。
JA	ZZZZ010242	15920		  　③DATA=で先頭に'@'を付加した場合は_LEFT数を空白とします。
JA	ZZZZ010242	15930		  　④SET=で先頭に'#'を付加した場合は'*'とほぼ同じですが、
JA	ZZZZ010242	15940		   　　 @WHEREに空白を転送する作業は実行しません。
JA	ZZZZ010242	15950		 ◎データー辞書のCHECKが'CHECK[1]','CHECK2','SECTION'の場合。
JA	ZZZZ010242	15960		  　①'@'が有るとデーター辞書の指定が無効となります。
JA	ZZZZ010242	15970		  　  (DATA=内で指定した内容を無視する）(VER7.31)
JA	ZZZZ010242	15980		    ②SET=は'*'が有ると@WHEREに空白を転送します。
JA	ZZZZ010242	15990		　右空白数は初期１です、２以上を指定下さい。
JA	ZZZZ010242	16000		　色はW(白        ,R255G255B255)
JA	ZZZZ010242	16010		   　,Y(黄色      ,R255G255B128)
JA	ZZZZ010242	16020		   　,E(茶色      ,R255G192B127)
JA	ZZZZ010242	16030		     ,R(赤        ,R255G128B192）
JA	ZZZZ010242	16040		　   ,L(明るい灰色,R224G224B224）
JA	ZZZZ010242	16050		　   ,P(紫        ,R192G128B255)
JA	ZZZZ010242	16060		　   ,G(緑        ,R128G255B128)
JA	ZZZZ010242	16070		     ,B(青        ,R128G192B255)
JA	ZZZZ010242	16080		   　,D(暗い灰色  ,R128G128B128)
JA	ZZZZ010242	16090		   　,N(背景色)です。
JA	ZZZZ010242	16100		　尚、R数G数B数（数は0から255）での設定も出来ます。（VER7.17)
JA	ZZZZ010242	16110		　    (注意：文字の色は変更出来ません）
JA	ZZZZ010242	16120		●定義：
JA	ZZZZ010242	16130		  定義は{[長さ1],[長さ2],[型1],[型2]｝を指定。
JA	ZZZZ010242	16140		  長さ１は数値の場合有効桁数です。
JA	ZZZZ010242	16150		                 （画面表示幅は計算されます）
JA	ZZZZ010242	16160		  長さ１は数値以外の場合画面上の表示幅の文字数です、
JA	ZZZZ010242	16170		　　　　ただし、型１がDとTとEは標示幅が補正されます。
JA	ZZZZ010242	16180		　　　　★注意:全角文字は２文字として計算して下さい。
JA	ZZZZ010242	16190		  長さ2は型が数値は小数点以下の桁数で,数値以外は最小文字数。
JA	ZZZZ010242	16200		  型1が数値でない時,型2に"I"を記入すると"I"と"O"が入力不可。
JA	ZZZZ010242	16210		  型1が数値でない時,型2に"L"を記入すると,英小文字も可。
JA	ZZZZ010242	16220		  型1が数値でない時,型2に"R"を記入すると,英小文字も可ですが、
JA	ZZZZ010242	16230		      大文字は小文字に、小文字は大文字に変換します。VER15.1
JA	ZZZZ010242	16240		  型1が数値でない時,型2に"K"を記入すると,かな文字も可。
JA	ZZZZ010242	16250		  型1が数値でない時,型2に"*"を記入すると非表示(*表示)。
JA	ZZZZ010242	16260		  型1が数値でない時,型2に"#"を記入すると"L"+"*"となります。
JA	ZZZZ010242	16270		  型1が数値でない時,型2に"X"を記入すると"{"と"}"が入力不可。
JA	ZZZZ010242	16280		  型1が"9"場合は数字のみ入力可能。（数値としては扱いません）
JA	ZZZZ010242	16290		  型１を一覧で説明します。
JA	ZZZZ010242	16300		　☆ 注意:型1,2は入力データの判定のみで使用します、
JA	ZZZZ010242	16310		　　　　　したがって,SET等転送命令では判定されません。
JA	ZZZZ010242	16320		　☆ 注意:型1が!以外は英小文字
JA	ZZZZ010242	16330		　　　　　　　　　,カタカナは型2の指定が無いと使えません。
JA	ZZZZ010242	16340		　☆ 注意:互換とは汎用機(EBCDIC)との変換が問題なく行えます。
JA	ZZZZ010242	16350		 （互換）     9.  　+--正の数値  （０は非表示）
JA	ZZZZ010242	16360		                       (型2がZ,Eは'0'も表示） (EはVER6)
JA	ZZZZ010242	16370		                       (型2がC,Eは','を非表示)(EはVER6)
JA	ZZZZ010242	16380		 （互換）     9.- 　--正負の数値（０は非表示）
JA	ZZZZ010242	16390		                       (型2がZ,Eは'0'も表示)  (EはVER6)
JA	ZZZZ010242	16400		                       (型2がC,Eは','を非表示)(EはVER6)
JA	ZZZZ010242	16410		 （互換）     9   　D--年月日(CHAR(8)）
JA	ZZZZ010242	16420		　　　   　　　（"@ZZZZZZ_DATE_言語"の値で表示方法が異る）
JA	ZZZZ010242	16430		 　　　　　   　　　　（Y-はYYYY-MM-DDで表示、初期値）
JA	ZZZZ010242	16440		 　　　　　   　　　　（M-はMM-DD-YYYYで表示）
JA	ZZZZ010242	16450		 　　　　　   　　　　（D/はDD/MM/YYYYで表示）
JA	ZZZZ010242	16460		 （互換）     9   　E--時間(DATETIME用)
JA	ZZZZ010242	16470		                    F--FLOAT（浮動少数数点）。
JA	ZZZZ010242	16480		 （互換）     9     T--時間(CHAR(17))
JA	ZZZZ010242	16490		 （互換）     9   　9--数字のみ（０から９）
JA	ZZZZ010242	16500		                       （注意：型は数値ではありません）
JA	ZZZZ010242	16510		 （互換）    A9   　A--英字と数字のみ
JA	ZZZZ010242	16520		 （互換）(特)A9.- 　B--バーコード３９対象文字
JA	ZZZZ010242	16530		 （互換）    A9 - 　C--CODE用ASCII文字(英字と数字とハイフ)
JA	ZZZZ010242	16540		       　 空%A9.-   H--半角文字全て。
JA	ZZZZ010242	16550		       　   %A9.-   I--ファイル名に出来る半角文字全て。
JA	ZZZZ010242	16560		　　　 　　　　　　　　( \/:*?"<>|'を除く)
JA	ZZZZ010242	16570		        全      　　J--全角文字のみ。(IME付き)
JA	ZZZZ010242	16580		（互換）    _A9   　M--英字データ名用。
JA	ZZZZ010242	16590		                   　　(英字,数字,アンダーバー）
JA	ZZZZ010242	16600		　　　　　　　　　　　（先頭に数字とアンダーバーは設定不可）
JA	ZZZZ010242	16610		        全  _A9   　N--全角文字含む英字データ名用。
JA	ZZZZ010242	16620		 （互換） 空%A9.- 　S--汎用機（EBCDIC)互換半角文字。
JA	ZZZZ010242	16630		                       (DATA=で空白の場合Sと同じになります)
JA	ZZZZ010242	16640		 （互換）   %A9.- 　U--空白除く汎用機（EBCDIC)互換半角文字。
JA	ZZZZ010242	16650		            %A9.- 　V--空白除く半角文字。
JA	ZZZZ010242	16660		 （互換）    A  　　Z--英字のみ
JA	ZZZZ010242	16670		 　　   全空%A9.- 　* --全角文字含む全ての文字。(IME付き)
JA	ZZZZ010242	16680		        全空%A9.- 　/--全角文字含む全ての文字。(IME無）
JA	ZZZZ010242	16690		                       (SET=で空白の場合／と同じになります)
JA	ZZZZ010242	16700		        全空%A9.- 　!--無条件で全ての文字。(IME無)
JA	ZZZZ010242	16710		　　　　　　　　　　　（★注意: 英小文字,半角カナも可能））
JA	ZZZZ010242	16720		        全空%A9.- 　:--ファイル名として使える文字。(IME無）
JA	ZZZZ010242	16730		
JA	ZZZZ010242	16740		  チェック1,チェック2,メッセージ,タイトルは下と同じ意味です。
JA	ZZZZ010242	16750		（通常は1行に書き切れないのでディクショナリからの設定用です）
JA	ZZZZ010242	16760		（タイトルが無い場合はデータ名を採用）
JA	ZZZZ010242	16770		5.06.2.1)**-カンマ区切りで値を一致または範囲判定します。
JA	ZZZZ010242	16780		*** CHECK[1]=値１,値2,(値1,値2),(値1,値2),...(CHECK=はV14.1)
JA	ZZZZ010242	16790		    （値1,値2）で範囲判定をします。  (値１から値２までOK)
JA	ZZZZ010242	16800		    します。  (値１から値２までOK)
JA	ZZZZ010242	16810		     CHECK2=が有るとCHECK2側が有効となります。
JA	ZZZZ010242	16820		     指定するとSET=,DATA=の設定値が置き換えられます。
JA	ZZZZ010242	16830		5.06.2.2)**-値と説明の繰り返しで一致判定をします。
JA	ZZZZ010242	16840		*** CHECK2=値１，説明１，値２，説明２,．．．
JA	ZZZZ010242	16850		 「SELECT 」で始まっている場合はSQLを実行します。
JA	ZZZZ010242	16860		 「SELECT 」の場合は説明が無くても動きます。（列名１個）
JA	ZZZZ010242	16870		 「SELECT 」の場合でデータが１件も無い場合は次に行けません。
JA	ZZZZ010242	16880		  指定するとSET=,DATA=の設定値が置き換えられます。
JA	ZZZZ010242	16890		5.06.2.3)入力時に文字の判定をします。
JA	ZZZZ010242	16900		*** INPUT=入力文字チェックプログラム (VER8.4)
JA	ZZZZ010242	16910		  _INPUTの入力文字で判定し,エラーの時はERRORを実行します。
JA	ZZZZ010242	16920		5.06.2.4)**-入力時に画面の２行目にメッセージを表示します。
JA	ZZZZ010242	16930		*** MESSAGE=メッセージ
JA	ZZZZ010242	16940		  指定するとSET=,DATA=の設定値が置き換えられます。
JA	ZZZZ010242	16950		  START内でも指定出来ます。　VER23.1
JA	ZZZZ010242	16960		5.06.2.5)**-見出として表示します。
JA	ZZZZ010242	16970		*** TITLE=タイトル
JA	ZZZZ010242	16980		  指定するとSET=,DATA=の設定値が置き換えられます。
JA	ZZZZ010242	16990		5.06.2.6)**-_SELECT数?と?_GROUP数?の値を式として設定します。
JA	ZZZZ010242	17000		*** SELECT=式
JA	ZZZZ010242	17010		-------------
JA	ZZZZ010242	17020		5.07)**-INPUTとOUTPUTで検索（SELECT)するSQL文を記入します。
JA	ZZZZ010242	17030		*** SQL=ＳＱＬ文
JA	ZZZZ010242	17040		5.08)**-命令を記入します。
JA	ZZZZ010242	17050		*** =命令群
JA	ZZZZ010242	17060		  DATA=,SET=,SQL=,BEGIN,START,STOP_BEFORE,STOP_AFTR,END
JA	ZZZZ010242	17070		　,BEGIN_END,COLORの下に記入できます。
JA	ZZZZ010242	17080		　DATA=やSET=は上から順番に必ず実行するので、上に指定されてい
JA	ZZZZ010242	17090		　るデータ名の内容は確定している事として使えます。
JA	ZZZZ010242	17100		　更新ではDATA=の命令が条件により下記のように実行されません。
JA	ZZZZ010242	17110		     　           作成 修正 削除  (×＝実行しない）
JA	ZZZZ010242	17120		     キー項目　 　 ○   ×   ×
JA	ZZZZ010242	17130		     キー項目以外  ○   ○   ×
JA	ZZZZ010242	17140		5.09.1)**-画面の１行の左側をデザイン、先頭から表示しします。
JA	ZZZZ010242	17150		*** FORM[1]=画面                 (FROM=はVER14.1)
JA	ZZZZ010242	17160		  通常は使用しませんが,陽に画面を構成したい場合使用します。
JA	ZZZZ010242	17170		  データの位置は"@"の連続で指定します。
JA	ZZZZ010242	17180		  DATA=の属性2が"N"の場合は@は不要です。
JA	ZZZZ010242	17190		　右の空白は無視します,空白が必要な場合は?_?等を記入します。
JA	ZZZZ010242	17200		5.09.2)**-FORM[1]同じですが、繰り返しの先頭位置の指定します。
JA	ZZZZ010242	17210		*** FORM0=画面
JA	ZZZZ010242	17220		　(通常は最初に"@"が現れた行を繰り返しの先頭位置にします）
JA	ZZZZ010242	17230		5.09.3)**-右側残りの位置を構成し表示します。
JA	ZZZZ010242	17240		*** FROM2=画面
JA	ZZZZ010242	17250		5.10)**-表示データ位置でクリックした時の命令を記入します。
JA	ZZZZ010242	17260		*** CLICK=命令群
JA	ZZZZ010242	17270		5.11)**-_SELECT1のSELECTと式の間にこの文字を追加します。
JA	ZZZZ010242	17280		*** SQL_SELECT=DISTINCT等 (VER7.23)
JA	ZZZZ010242	17290		===========================================================
JA	ZZZZ010242	17300		6)**-命令
JA	ZZZZ010242	17310		☆☆下記内容はVER16以前の仕様でVER17以降ではCONTROL=IF_ERROR
JA	ZZZZ010242	17320		    を付けた場合の動きと成ります。(VER17で全面改訂）
JA	ZZZZ010242	17330		   (☆CONTROL=IF_ERRORが有る時で..;..か;が無い命令で
JA	ZZZZ010242	17340		    エラーがない時";"（セミコロン）まで移動します。
JA	ZZZZ010242	17350		    ☆エラーで;まで移動しない場合命令が無いと異常終了します
JA	ZZZZ010242	17360		    異常終了を無視する場合は陽にNOP{}を付加して下さい。
JA	ZZZZ010242	17370		    ★CONTINUE_を命令の先頭につけるとエラー無しで;に行く
JA	ZZZZ010242	17380		    命令が;に行かないで,すぐ後を続けて実行します。尚、
JA	ZZZZ010242	17390		    エラーが発生してた場合は異常終了となります。 VER15.1)
JA	ZZZZ010242	17400		☆命令は";"で区切ることを推奨します。(;は余分に有っても無視)
JA	ZZZZ010242	17410		☆IF_ERROR_を命令の先頭につけるとエラーが無い時セミコロン(;)
JA	ZZZZ010242	17420		  まで移動します。ただし、BACK,EXIT,IF,JUMPで始まるか
JA	ZZZZ010242	17430		  _NEXTで終わる命令には使えません。VER17
JA	ZZZZ010242	17440		☆RESTORE_DB_を命令の先頭につけるとD(Firebird)とI(DB2)に対し
JA	ZZZZ010242	17450		  _RESTORE_DBをデータベース名に付加します。(VER18.1)
JA	ZZZZ010242	17460		☆認証がAか許可がZZZZの時命令の先頭に下記を付加出来ます。
JA	ZZZZ010242	17470		★DBO_を命令の先頭につけると--Dユーザで実行します。
JA	ZZZZ010242	17480		  (尚,メニューの処理種類がOUTPUTと認証がXは使えません)VER25.1
JA	ZZZZ010242	17490		★LOGIN_を命令の先頭につけると-LOGINユーザで実行します。
JA	ZZZZ010242	17500		★OUT_を命令の先頭につけると--Oユーザで実行します。
JA	ZZZZ010242	17510		☆命令の区切りは"{*:;"で判定し"{"の時は"}"まで判定しません,
JA	ZZZZ010242	17520		　ただし"}"判定時"'"を発見した場合は次の"'"まで判定しません。
JA	ZZZZ010242	17530		☆注意：SQL=の下の命令は操作直後にも実行されます。
JA	ZZZZ010242	17540		6.00)**-アスタリスク(*)が最後の場合は備考と見なします。
JA	ZZZZ010242	17550		*** 備考*
JA	ZZZZ010242	17560		6.01)**-名札を指定します。
JA	ZZZZ010242	17570		*** 名札:
JA	ZZZZ010242	17580		6.02)**-前方の直近の名札に移動します。
JA	ZZZZ010242	17590		***=BACK{[名札]}
JA	ZZZZ010242	17600		     名札が空白の場合は前方のセミコロンまで移動します。(VER17
JA	ZZZZ010242	17610		6.03)**-バッチファイルを実行します。
JA	ZZZZ010242	17620		***=BAT_SERVER{バッチファイル[,パラメータ]} <新>
JA	ZZZZ010242	17630		***=BAT_SERVER{バッチファイル}{パラメータ}  <旧>
JA	ZZZZ010242	17640		  実行結果のエラーの判定を作業ディレクトリ上の
JA	ZZZZ010242	17650		  ?_WORK?.EXITで判定するので正常終了時はバッチファイル
JA	ZZZZ010242	17660		  内で!!!と書き換えて下さい。(VER17)
JA	ZZZZ010242	17670		   (WINDOWS=%SYSTEMDRIVE%\I\I.%4\TMP_%3\%5.EXIT)
JA	ZZZZ010242	17680		   (LINUX=/home/I/I.%4/TMP_%3/%5.EXIT)
JA	ZZZZ010242	17690		  文字列に"../"又は"..\"が有るとエラーになります。
JA	ZZZZ010242	17700		  パラメータは先頭に無条件で下記５個が付加されます。(VER17)
JA	ZZZZ010242	17710		    ?_IV? ?_LANG_SYSTEM? ?_REAL? ?_SYSTEM? ?_WORK?
JA	ZZZZ010242	17720		  ☆メニュー起動ジョブでは使えません。
JA	ZZZZ010242	17730		  ☆ファイル起動ジョブでは使えません。
JA	ZZZZ010242	17740		6.04)**-ビープ音を出します。
JA	ZZZZ010242	17750		***=BEEP{}
JA	ZZZZ010242	17760		6.05)**-システムコマンドを実行し、終了を待ちます。
JA	ZZZZ010242	17770		***=COMMAND{システムコマンド名 パラメータ}
JA	ZZZZ010242	17780		  [中止]文字列に"../"又は"..\"が有るとエラーになります。VER18
JA	ZZZZ010242	17790		　☆時間起動ジョブでは使えません。
JA	ZZZZ010242	17800		　コマンドにエラーが有っても無視さるので注意して下さい。VER18
JA	ZZZZ010242	17810		6.06)**-計算をします。
JA	ZZZZ010242	17820		***=COMPUTE{左辺データ=右辺データ1+右辺データ2,..}
JA	ZZZZ010242	17830		***=COMPUTE{左辺データ+=右辺データ,..}
JA	ZZZZ010242	17840		***=COMPUTE_CUT{左辺データ=右辺データ1+右辺データ2,..}
JA	ZZZZ010242	17850		***=COMPUTE_CUT{左辺データ+=右辺データ,..}
JA	ZZZZ010242	17860		  +=は最初に自分を計算対象にします。
JA	ZZZZ010242	17870		  演算子は+以外に-(減算),*（掛け算),/（割り算）
JA	ZZZZ010242	17880		  %（割り算の余り,VER7.31）が出来ます。
JA	ZZZZ010242	17890		  左辺が数値の時COMPUTEは四捨五入します。
JA	ZZZZ010242	17900		  左辺が数値の時COMPUTE_CUTは切捨てます。
JA	ZZZZ010242	17910		　左辺が文字の時は結果をそのままとします。（VER5以降）
JA	ZZZZ010242	17920		6.07)**-ファイルをコピーします。
JA	ZZZZ010242	17930		***=COPY_FILE{転送先ファイル名,転送元ファイル名}  <新>
JA	ZZZZ010242	17940		***=COPY_FILE{転送先ファイル名}{転送元ファイル名} <旧>
JA	ZZZZ010242	17950		　★転送先が最初です間違えないようにして下さい。
JA	ZZZZ010242	17960		  ☆時間起動ジョブでは使えません。
JA	ZZZZ010242	17970		6.08)**-旧テーブル名と同じ定義のテーブルを作ります。
JA	ZZZZ010242	17980		***=COPY_TABLE{新テーブル名,旧テーブル名[,NOT又はSQL文} <新>
JA	ZZZZ010242	17990		***=COPY_TABLE{新テーブル名}{旧テーブル名}{[NOTかSQL文]}<旧>
JA	ZZZZ010242	18000		　NOTを指定するとデータをコピーしません。
JA	ZZZZ010242	18010		  NOTにNOT以外を書くとSQL文に付加します。(テーブル別名はI)
JA	ZZZZ010242	18020		  「NOTかSQL文」が空白の場合全件コピーします。
JA	ZZZZ010242	18030		6.09)**-インデックスを作ります。
JA	ZZZZ010242	18040		***=CREATE_INDEX{テーブル名,インデックス番号,[UNIQUE],   <新>
JA	ZZZZ010242	18050		      キー名,..}
JA	ZZZZ010242	18060		***=CREATE_INDEX{テーブル名}{インデックス番号}{キー名,..}<旧>
JA	ZZZZ010242	18070		***   {[UNIQUE]}
JA	ZZZZ010242	18080		  インデックス番号は数値で0から9までです。
JA	ZZZZ010242	18090		6.10)**-オブジェクトを作ります。
JA	ZZZZ010242	18100		***=CREATE_OBJECT{オブジェクト名,対象,定義}    <新>
JA	ZZZZ010242	18110		***=CREATE_OBJECT{オブジェクト名}{対象}{定義}  <旧>
JA	ZZZZ010242	18120		　対象はVIEW,FUNC,FUNCTION,PROC,PROCEDURE,TRIG,TRIGGERです。
JA	ZZZZ010242	18130		6.11)**-テーブルを作ります。
JA	ZZZZ010242	18140		***=CREATE_TABLE{テーブル名[,主キー列定義,.]} <新>
JA	ZZZZ010242	18150		*** {[データ定義,.]}
JA	ZZZZ010242	18160		***=CREATE_TABLE{テーブル名}{[主キー列定義,.]} <旧>
JA	ZZZZ010242	18170		***   {[データ定義,.]}   (VER6.2)
JA	ZZZZ010242	18180		（VER6.2でCREATE_TABLE1の1を取りました、互換の為1も残します)
JA	ZZZZ010242	18190		  先頭にツール使用列を作成します。
JA	ZZZZ010242	18200		 列名に予約語を使うとエラーと成ります。(VER22.1)
JA	ZZZZ010242	18210		　定義は次のようにカンマ区切りで記入します。
JA	ZZZZ010242	18220		　　①列名,長さ１
JA	ZZZZ010242	18230		　　　SQLServerとOracleはNCHARとなります。(VER4以前はCHAR）
JA	ZZZZ010242	18240		    　DB2とPostgreSQLは今まで通りCHAR。
JA	ZZZZ010242	18250		　　②列名,型定義　　　　　　　（長さが不要な物)
JA	ZZZZ010242	18260		      I(INT),F(FLOAT),E(DATETIME),DATE
JA	ZZZZ010242	18270		　　③列名,型定義,長さ　　　 　（長さが１個必要な物)
JA	ZZZZ010242	18280		      C(CHAR),V(VARCHAR),N(NCHAR),NV(NVARCHAR)
JA	ZZZZ010242	18290		      ★注意:全角文字は２文字として長さを計算して下さい。
JA	ZZZZ010242	18300		　　④列名,型定義,長さ１,長さ２（長さが２個必要な物）
JA	ZZZZ010242	18310		      D(DECIMAL)
JA	ZZZZ010242	18320		    ⑤列名,*          (定義情報はディクショナリから設定）
JA	ZZZZ010242	18330		***=CREATE_TABLE2{テーブル名[,主キー列定義,..]}  <新>
JA	ZZZZ010242	18340		***=CREATE_TABLE2{テーブル名}{[主キー列定義,..]}  <旧>
JA	ZZZZ010242	18350		***   {[データ列定義,..]}
JA	ZZZZ010242	18360		    CREATE_TABLEに対し先頭にツール使用列を作成しません。
JA	ZZZZ010242	18370		***=CREATE_TABLE0{テーブル名[,主キー列定義,..]}  <新>
JA	ZZZZ010242	18380		***=CREATE_TABLE0{テーブル名}{[主キー列定義,..]}  <旧>
JA	ZZZZ010242	18390		***   {[データ列定義,..]}    VER22.1
JA	ZZZZ010242	18400		    CREATE_TABLEに対し予約語判定をしません。
JA	ZZZZ010242	18410		6.XX)**-カーソルによるSQL処理を実行します。
JA	ZZZZ010242	18420		***=CURSOR{テーブル名1[,..]}{列名1,[K,A,D,][,..]}
JA	ZZZZ010242	18430		***  {WHERE句}{作業データ定義1[,..]}
JA	ZZZZ010242	18440		***  {キー割れ開始処理}{１件処理}{キー割れ終了処理}
JA	ZZZZ010242	18450		                                                   (VER18.1)
JA	ZZZZ010242	18460		  テーブル名1をカーソル用のテーブルとして使います。
JA	ZZZZ010242	18470		  テーブル名を「_O_TABLE数字」に設定します。
JA	ZZZZ010242	18480		  列名の次のKはキー割れのキー項目の指定です。(ORDER BYも設定)
JA	ZZZZ010242	18490		  キー項目を元に「_O_WHERE[2]」を設定します。
JA	ZZZZ010242	18500		  Kが１個も無いとキー割れ判定処理をしません。
JA	ZZZZ010242	18510		  列名の次がAかDはORDER BYのASCかDESCで無しは指定しません。
JA	ZZZZ010242	18520		  列名の先頭に?_O_FD?を付加した物をSQL文外の作業名とします。
JA	ZZZZ010242	18530		  列名の先頭に?_O_FS?を付加した物をSQL文内の作業名とします。
JA	ZZZZ010242	18540		  列名の先頭に?_O_F??を付加した物はFETCHで内容が設定されます
JA	ZZZZ010242	18550		  列名の先頭に?_O_WD?を付加した物をSQL文外の作業名とします。
JA	ZZZZ010242	18560		  列名の先頭に?_O_WS?を付加した物をSQL文内の作業名とします。
JA	ZZZZ010242	18570		  列名の先頭に?_O_W??を付加した物は作業用データと成ります。
JA	ZZZZ010242	18580		  FETCHのテーブルには別名としてX1が付いています。
JA	ZZZZ010242	18590		  作業データ定義はCREATE_TABLEと同じ記入方法です。
JA	ZZZZ010242	18600		  作業データ定義名の先頭に?_C_WD?と?_C_WS?を付加します。
JA	ZZZZ010242	18610		  SQL文の最後には必ず";"を記入して下さい。
JA	ZZZZ010242	18620		  キー割れ開始処理ではキー項目の?_O_W??にも値が設定され
JA	ZZZZ010242	18630		      キー割れの判定に使われます。
JA	ZZZZ010242	18640		  WHERE条件に「Z_CANCEL=' '」が設定されます。
JA	ZZZZ010242	18650		  Lは?_WORK_TABLE?__()プロシージャーを作成します。
JA	ZZZZ010242	18660		  Pは?_WORK_TABLE?__()ファンクションを作成します。
JA	ZZZZ010242	18670		***=CURSOR2{テーブル名1[,...]}{列名1 [K,A,D,][,..]}
JA	ZZZZ010242	18680		***  {WHERE句}{変数名1 データ型[,..]}
JA	ZZZZ010242	18690		***  {キー割れ開始処理}{１件処理}{キー割れ終了処理}
JA	ZZZZ010242	18700		    FETCHに対しWHERE条件に「Z_CANCEL=' '」を設定しません。
JA	ZZZZ010242	18710		6.12.1.1)**-ディレクトリのファイル名一覧の設定をします。
JA	ZZZZ010242	18720		***=DIR{ディレクトリ}
JA	ZZZZ010242	18730		　ディレクトリが空白の時は作業ディレクトリになります。
JA	ZZZZ010242	18740		6.12.1.2)**-ファイル名一覧の次の１件を転送します.
JA	ZZZZ010242	18750		***=DIR_NEXT{ファイル名データ[,日付データ]}..;..
JA	ZZZZ010242	18760		  ファイルがあると";"まで移動します。
JA	ZZZZ010242	18770		  日付データは書き換えられた時の日付です。
JA	ZZZZ010242	18780		6.12.2.1)**-ディレクトリのディレクトリ名一覧の設定をします。
JA	ZZZZ010242	18790		***=DIR_DIR{ディレクトリ}
JA	ZZZZ010242	18800		　ディレクトリが空白の時は作業ディレクトリになります。
JA	ZZZZ010242	18810		6.12.2.2)**-ディレクトリ名一覧の次の１件を転送します。
JA	ZZZZ010242	18820		***=DIR_DIR_NEXT{ディレクトリ名}..;..
JA	ZZZZ010242	18830		  ディレクトリがあると";"まで移動します。
JA	ZZZZ010242	18840		6.13)**-インデックスを削除します。
JA	ZZZZ010242	18850		***=DROP_INDEX{テーブル名[,インデクス番号]}   <新>
JA	ZZZZ010242	18860		***=DROP_INDEX{テーブル名}{インデクス番号}   <旧>
JA	ZZZZ010242	18870		　インデックス番号が空白時は全インデックスを削除します。
JA	ZZZZ010242	18880		　インデックスが存在しない場合も正常終了します。
JA	ZZZZ010242	18890		6.14)**-オブジェクトを削除します。
JA	ZZZZ010242	18900		***=DROP_OBJECT{オブジェクト名,対象}  〈新>
JA	ZZZZ010242	18910		***=DROP_OBJECT{オブジェクト名}{対象}  <旧>
JA	ZZZZ010242	18920		　対象はVIEW,FUNC,FUNCTION,PROC,PROCEDURE,TRIG,TRIGGERです。
JA	ZZZZ010242	18930		　オブジェクトが存在しない場合も正常終了します。
JA	ZZZZ010242	18940		6.15)**-テーブルをデータベースから消去します。
JA	ZZZZ010242	18950		***=DROP_TABLE{テーブル名}
JA	ZZZZ010242	18960		　テーブルが存在しない場合も正常終了します。
JA	ZZZZ010242	18970		6.16.1)**-作業ディレクトリ上のファイルを消します。
JA	ZZZZ010242	18980		***=ERASE_FILE{ファイル名}
JA	ZZZZ010242	18990		  ファイルがない場合は何もしません。
JA	ZZZZ010242	19000		6.16.1)**-作業ディレクトリ上のディレクトリを消します。
JA	ZZZZ010242	19010		***=ERASE_DIR{ディレクトリ}                        VER13.1
JA	ZZZZ010242	19020		[中止].Iで終わる名前はI言語関連とみなしエラーとします VER16
JA	ZZZZ010242	19030		  ディレクトリがない場合は何もしません。
JA	ZZZZ010242	19040		6.17)**-メッセージをエラー（赤で表示）として表示します。
JA	ZZZZ010242	19050		***=ERROR{メッセージ}
JA	ZZZZ010242	19060		　メニュー起動、ファイル起動ジョブの場合再入力となります。
JA	ZZZZ010242	19070		　時間起動の場合異常終了します。
JA	ZZZZ010242	19080		6.18.1)**-プログラムを実行し、終了を待ちません。
JA	ZZZZ010242	19090		***=EXE{プログラム名[,パラメータ}}  <新>
JA	ZZZZ010242	19100		***=EXE{プログラム名}{パラメータ}   <旧>
JA	ZZZZ010242	19110		  文字列に"../"又は"..\"が有るとエラーになります。
JA	ZZZZ010242	19120		  ☆時間起動ジョブでは使えません。
JA	ZZZZ010242	19130		6.18.2)**-自分自身のプログラムを実行し、終了を待ちません。
JA	ZZZZ010242	19140		***=EXE_I{ジョブ名[,固有パラメータ]}  <新>
JA	ZZZZ010242	19150		***=EXE_I{ジョブ名}{[固有パラメータ]} <旧>
JA	ZZZZ010242	19160		  ☆時間起動ジョブでは使えません。
JA	ZZZZ010242	19170		6.18.3)**-プログラムを実行し、終了を待ちます。
JA	ZZZZ010242	19180		***=EXE_WAIT{プログラム名[,パラメータ]} <新>
JA	ZZZZ010242	19190		***=EXE_WAIT{プログラム名}{パラメータ}  <旧>
JA	ZZZZ010242	19200		  ☆時間起動ジョブでは使えません。
JA	ZZZZ010242	19210		6.19.1)**-セクションを終了し名前のデータの入力に進みます。
JA	ZZZZ010242	19220		***=EXIT{[名前]}
JA	ZZZZ010242	19230		  名前が空白の時はセッションを終了します。
JA	ZZZZ010242	19240		  先にしか進めないので前のデータの名前は指定出来ません。
JA	ZZZZ010242	19250		  名前が"_END"の時このプログラムを終了します。
JA	ZZZZ010242	19260		  名前が数値の時その番号のプログラムに戻ります。
JA	ZZZZ010242	19270		　（数値のみでは進む事は出来ません）
JA	ZZZZ010242	19280		　（０はメニューに戻ります）
JA	ZZZZ010242	19290		   (注：メニュー(I_MENU.TXT)内では１でジョブに行きます）
JA	ZZZZ010242	19300		   (注：メニュー(I_MENU.TXT)内では０で終了します）
JA	ZZZZ010242	19310		  名前が+1の時次のプログラムに行きます。
JA	ZZZZ010242	19320		    (BEGIN,START,SET=,DATA=,STOP_BEFOER,STOP_AFTER  (VER8.10)
JA	ZZZZ010242	19330		     ではEXIT{+1};の次の命令に戻ります。)
JA	ZZZZ010242	19340		  　(注意:END,SQL,COLOR,INPUT=では使用できません)   (VER8.10)
JA	ZZZZ010242	19350		 　 (注意:EXIT{+1};の戻で_REAL_TESTは初期化されます)
JA	ZZZZ010242	19360		6.19.2)**-セクションを終了しの名前のデータの入力後に進みます.
JA	ZZZZ010242	19370		***=EXIT2{[名前]}
JA	ZZZZ010242	19380		  エラーが発生した場合,以前のSET=,DATA=で再入力になります。
JA	ZZZZ010242	19390		  (該当データでは入力は行われない）
JA	ZZZZ010242	19400		  名前が空白の時は次のデータに移動します。 VER14.1
JA	ZZZZ010242	19410		  移動先の属性２が'O'か'N'の時はエラーとします。 VER14.1
JA	ZZZZ010242	19420		  ★注意：CHECK[1]=,CHECK2=のチェックはしないので注意下さい。
JA	ZZZZ010242	19430		6.19.3)**-セクションを終了しの名前のデータの入力後に進みます.
JA	ZZZZ010242	19440		***=EXIT3{[名前]}
JA	ZZZZ010242	19450		  エラーが発生した場合,名前のSET=,DATA=で再入力になります。
JA	ZZZZ010242	19460		  名前が空白の時は次のデータに移動します。 VER14.1
JA	ZZZZ010242	19470		  移動先の属性２が'O'か'N'の時はエラーとします。 VER14.1
JA	ZZZZ010242	19480		  ★注意：CHECK[1]=,CHECK2=のチェックはしないので注意下さい。
JA	ZZZZ010242	19490		6.20)**-名前+連番の中のデータを検索します。　VER20.1
JA	ZZZZ010242	19500		***=FIND_REPEAT{名前,検索};   <新>
JA	ZZZZ010242	19510		***=FIND_REPEAT{名前}{検索};  <旧>
JA	ZZZZ010242	19520		  名前+'_COUNT'に件数を設定する必要が有ります。
JA	ZZZZ010242	19530		  _FIND_REPEATに検索出来た場合は連番を以外は０を設定します。
JA	ZZZZ010242	19540		6.21.1)**-オブジェクトに対し標準の権限を設定します。
JA	ZZZZ010242	19550		***=GRANT{オブジェクト名,対象[,PUBLIC,LINK]}   <新>
JA	ZZZZ010242	19560		***=GRANT{オブジェクト名}{[対象]}{[PUBLIC,LINK]} <旧>
JA	ZZZZ010242	19570		　対象が空白時または"TABLE"はテーブル用です。
JA	ZZZZ010242	19580		  　該当許可とZZZZのINPにSELECT,UPDATE,INSERT権限を与えます。
JA	ZZZZ010242	19590		  　(注意：DELETE権限は有りません）
JA	ZZZZ010242	19600		  　該当許可とZZZZのOUTにSELECT権限を与えます。
JA	ZZZZ010242	19610		　対象が"VIEW"はビュー用でSELECT権限のみ設定します。(VER8.10)
JA	ZZZZ010242	19620		　対象が"FUNC"または"FUNCTION"はファンクション用です。
JA	ZZZZ010242	19630		　対象が"PROC"または"PROCEDURE"はプロシージャ用です。
JA	ZZZZ010242	19640		　対象が"SELECT"はSELECT権限のみ設定します。
JA	ZZZZ010242	19650		　PUBLICを記入すると全ユーザにSELECT権限または
JA	ZZZZ010242	19660		　　"EXCUTE"を設定します。
JA	ZZZZ010242	19670		　PUBLICをLINKとするとLNKユーザのみにSELECT権限を設定します。
JA	ZZZZ010242	19680		　PUBLICを空白にするとPUBLIC及びLINK権限を解除します。
JA	ZZZZ010242	19690		6.21.2)**-他の許可のユーザにオブジェクトの権限を設定します。
JA	ZZZZ010242	19700		***=GRANT_PERMISSION{オブジェクト,許可,対象[,ユーザ]} <新>
JA	ZZZZ010242	19710		***=GRANT_PERMISSION{オブジェクト}{[対象]}{許可}{[ユーザ]}<旧
JA	ZZZZ010242	19720		　ユーザが空白は"I"と"O"と"D"に設定します。
JA	ZZZZ010242	19730		  ユーザが"L"は"L"のみに設定します。
JA	ZZZZ010242	19740		　SELECTまたはEXECUTEのみの設定となります。
JA	ZZZZ010242	19750		　(LNKはVER3よりの機能、BETA06から仕様変更)
JA	ZZZZ010242	19760		　(VER4より仕様変更)
JA	ZZZZ010242	19770		6.22)**-グラフを表示するプログラムを起動します。VER15.1
JA	ZZZZ010242	19780		***=ICHART{チャート名,[オプション],[付加],SQL1[;SQL2;..]}<新>
JA	ZZZZ010242	19790		***=ICHART{チャート名[,オプション]}{[付加]}{SQL1[;SQL2;..]}旧
JA	ZZZZ010242	19800		  ☆時間起動ジョブでは使えません。
JA	ZZZZ010242	19810		  オプション無しはグラフを表示します。
JA	ZZZZ010242	19820		  オプションをDATAとするとひな形データでグラフを表示します。
JA	ZZZZ010242	19830		  オプションをHELPとするとヘルプを表示します。
JA	ZZZZ010242	19840		  オプションをVERSIONとするとVERSIONファイルを作ります。
JA	ZZZZ010242	19850		  オプションをSETTINGとするとSETTINGファイルを作ります。
JA	ZZZZ010242	19860		  付加は同じプログラム内で複数のグラフを出したい場合に
JA	ZZZZ010242	19870		  ファイル名にこの文字を付加して重複を防ぎます。
JA	ZZZZ010242	19880		  SQLはX値,Y値,Y2値...の順でSELECTします。
JA	ZZZZ010242	19890		6.23.1)**-左辺右辺を比較し条件が成立しない時";"に移動します。
JA	ZZZZ010242	19900		***=IF{左辺データ=右辺データ[,[左辺データ]=右辺データ,.]}..;.
JA	ZZZZ010242	19910		　（VER4で仕様を変更しました）
JA	ZZZZ010242	19920		6.23.2)**-左辺右辺を比較し条件が成立した時";"に移動します。
JA	ZZZZ010242	19930		***=IF_NOT{左辺データ=右辺データ.....}..;.. (VER7.31)
JA	ZZZZ010242	19940		6.23.3)**-IF{,IF_NOT{の共通の説明です。
JA	ZZZZ010242	19950		  比較演算子"!="(不一致),"<"(より大),">"(より小)も使えます。
JA	ZZZZ010242	19960		  "/"は左辺を前方比較、'%'が左辺を後方比較します。(VER7.31)
JA	ZZZZ010242	19970		  "!/"と"!%"で否定比較も出来ます。(VER22.1)
JA	ZZZZ010242	19980		  ","は「又は」（OR)を意味です。
JA	ZZZZ010242	19990		　左辺データが左と同じ場合は省略できます。
JA	ZZZZ010242	20000		　★IF...命令にIF...命令があると「かつ」（AND)を意味します。
JA	ZZZZ010242	20010		  ★基本は左辺データの型(文字か,数値か)を使用して比較しまが、
JA	ZZZZ010242	20020		　　左辺が＃,！,＠で始まる時は右辺のデータの型を使用します。
JA	ZZZZ010242	20030		　（VER3以降採用）
JA	ZZZZ010242	20040		6.23.4)**-ファイルが読み込みで開ない時";"まで移動します。
JA	ZZZZ010242	20050		***=IF_FILE{ファイル名}..;..
JA	ZZZZ010242	20060		6.23.5)**-ファイルが読み込みで開く時";"まで移動します。
JA	ZZZZ010242	20070		***=IF_FILE_NOT{ファイル名}..;..   (VER7.31)
JA	ZZZZ010242	20080		6.23.6)**-データ名が無い時";"まで移動します。
JA	ZZZZ010242	20090		***=IF_NAME{データ名}..;..
JA	ZZZZ010242	20100		6.23.7)**-データ名が有る時";"まで移動します。
JA	ZZZZ010242	20110		***=IF_NAME_NOT{データ名}..;..     (VER7.31)
JA	ZZZZ010242	20120		6.22.8)**-テーブルが無い時";"まで移動します。
JA	ZZZZ010242	20130		***=IF_TABLE{テーブル名}..;..
JA	ZZZZ010242	20140		6.23.9)**-テーブルが有る時";"まで移動します。
JA	ZZZZ010242	20150		***=IF_TABLE_NOT{テーブル名}..;.. (VER7.31)
JA	ZZZZ010242	20160		6.24)**-データを１件インサートします。
JA	ZZZZ010242	20170		***=INSERT{テーブル名,データ名,...}  <新>
JA	ZZZZ010242	20180		***=INSERT{テーブル名}{データ名,...} <旧>
JA	ZZZZ010242	20190		　データ名に文字列,数値を直接指定する事は出来ません。
JA	ZZZZ010242	20200		  Z_ADD,Z_ADD_PERSON,Z_LAST_JOB,Z_LAST_COMPUTER
JA	ZZZZ010242	20210		　　　　　　　　　　　　　　　　　　もINSERTします。
JA	ZZZZ010242	20220		  注意:INSERTで実行するので論理削除データには対応出来ません。
JA	ZZZZ010242	20230		  データ名は=で初期値を設定できます。VER23.1
JA	ZZZZ010242	20240		6.25)**-ファイルのデータをインサートします。
JA	ZZZZ010242	20250		***=INSERT_FILE{テーブル名,ファイル名,エンコード,列名,..}<新>
JA	ZZZZ010242	20260		***=INSERT_FILE{テーブル名}{列名,...}   <旧>
JA	ZZZZ010242	20270		　　　{ファイル名}{[エンコード]}
JA	ZZZZ010242	20280		　(レコード区切り指定はU又はWでVER7.15以上）
JA	ZZZZ010242	20290		  Z_ADD,Z_ADD_PERSON,Z_LAST_JOB,Z_LAST_COMPUTER
JA	ZZZZ010242	20300		　　　　　　　　　　　　　　　　　　もINSERTします。
JA	ZZZZ010242	20310		　エンコード無指定はバイト順マーク (BOM)無しのUTF-8です。
JA	ZZZZ010242	20320		　(バイト順マーク (BOM)無しはVER17.15以降可能）
JA	ZZZZ010242	20330		　(★VER7.14以前とは非互換です）
JA	ZZZZ010242	20340		　エンコードの代表例は下記です。
JA	ZZZZ010242	20350		　　UTF-8(BOM付き)、SHIFT_JIS、EUC-JP。
JA	ZZZZ010242	20360		　　尚、"/"とした場合はOSのデフォルト値を使用します。
JA	ZZZZ010242	20370		　　(VER7.14以前のエンコード無指定とBOMを除き同じです）
JA	ZZZZ010242	20380		  注意:INSERTで実行するので論理削除データには対応出来ません。
JA	ZZZZ010242	20390		6.26)**-印刷又は画面表示するプログラムを起動します。VER15.1
JA	ZZZZ010242	20400		***=IPRINT{[プリント名],[オプション],[付加],[SQL文]}<新>
JA	ZZZZ010242	20410		***=IPRINT{[プリント名][,オプション]}{[付加]}{[SQL文]}<旧>
JA	ZZZZ010242	20420		  ☆時間起動ジョブでは使えません。      VER15.1
JA	ZZZZ010242	20430		  オプション無し又はPRINTは印刷をします。
JA	ZZZZ010242	20440		  オプションをDISPLAYとすると画面に表示します。
JA	ZZZZ010242	20450		  オプションをDATAとするとひな形データで画面に表示します。
JA	ZZZZ010242	20460		  オプションをHELPとするとヘルプを表示します。
JA	ZZZZ010242	20470		  オプションをVERSIONとするとVERSIONファイルを作ります。
JA	ZZZZ010242	20480		  付加は同じプログラムで複数の印刷をしたい場合に
JA	ZZZZ010242	20490		  ファイル名にこの文字を付加して重複を防ぎます。
JA	ZZZZ010242	20500		  プリント名が空白はファイルを作らないので次の名前で作って
JA	ZZZZ010242	20510		  下さい。"?TMP??_JOB??_WINDOW?IPRINT?付加?2.TXT”VER20.1
JA	ZZZZ010242	20520		  SQL文が空白はファイルを作らないので次の名前で作って
JA	ZZZZ010242	20530		  下さい。"?TMP??_JOB??_WINDOW?IPRINT?付加?1.TXT”VER20.1
JA	ZZZZ010242	20540		6.27)**-後方の直近の名札に移動します。
JA	ZZZZ010242	20550		***=JUMP{[名札]}
JA	ZZZZ010242	20560		  名札が空白は後方の２個目のセミコロンまで移動します。VER17
JA	ZZZZ010242	20570		6.28)**-メッセージを表示または時間起動ではログに書きます。
JA	ZZZZ010242	20580		***=MESSAGE{メッセージ}
JA	ZZZZ010242	20590		6.29)**-リンク用SQL文を組み立てます。
JA	ZZZZ010242	20600		***=LINK_SET{データ名}{SELECTからFROMまで}{テーブル名}{別名}
JA	ZZZZ010242	20610		***   {WHERE以下}  (VER3以降）
JA	ZZZZ010242	20620		  データベースリンクの不具合を迂回するためSQL文の組みなおし
JA	ZZZZ010242	20630		  をします、SQL ServerではOPENQUERYを使用します。
JA	ZZZZ010242	20640		6.30)**-何もしません。
JA	ZZZZ010242	20650		***=NOP{}
JA	ZZZZ010242	20660		◎何もしません。
JA	ZZZZ010242	20670		6.31.1)**-SQL=の代わりに表示データを１件追加します。
JA	ZZZZ010242	20680		***=OUTPUT{データ名,..}   (VER3より可能）
JA	ZZZZ010242	20690		  データ名の数は全て同じ数にして下さい。(異なると誤動作します
JA	ZZZZ010242	20700		  注意：表示される時間は都合により更新されません。
JA	ZZZZ010242	20710		6.31.2)**-OUTPUT=用表示データをクリアーします。
JA	ZZZZ010242	20720		***=OUTPUT_CLEAR{}   (VER3より可能）
JA	ZZZZ010242	20730		6.32)**-テーブルを該当データで更新又は検索します。
JA	ZZZZ010242	20740		[廃止]***=PROGRAM{テーブル名}{キー名,..}{データ名,..}{操作}
JA	ZZZZ010242	20750		[廃止]***=PROGRAM2{テーブル名}{キー名,..}{データ名,..}{操作}
JA	ZZZZ010242	20760		***=PROGRAM{操作,テーブル名,データ名...}{キー名,..}{条件}<新>
JA	ZZZZ010242	20770		***=PROGRAM2{操作,テーブル名,データ名...}{キー名,..}{条件}<新
JA	ZZZZ010242	20780		★注意★新旧でキー名とデータ名の順番が違います注意して下さい.
JA	ZZZZ010242	20790		***=PROGRAM2{操作}{データ名,..}{テーブル名}{キー名,..}  <旧>
JA	ZZZZ010242	20800		***  {条件}
JA	ZZZZ010242	20810		***=PROGRAM{操作}{データ名,..}{テーブル名}{キー名,..} <旧>
JA	ZZZZ010242	20820		***  {条件}
JA	ZZZZ010242	20830		***=PROGRAM2{操作}{データ名,..}{テーブル名}{キー名,..}  <旧>
JA	ZZZZ010242	20840		***  {条件}
JA	ZZZZ010242	20850		★注意:VER13.1で条件を付加しオペランドの順番を変更しました。
JA	ZZZZ010242	20860		    (PROGRAM2はVER7.22で追加)
JA	ZZZZ010242	20870		　PROGRAM2はZ_で始まるデータ名を使わない作業テーブル用です。
JA	ZZZZ010242	20880		    (削除は論理削除ではなくDELETEで物理削除されます）
JA	ZZZZ010242	20890		  　(Z_CANCELは、当然考慮されないので注意下さい。）
JA	ZZZZ010242	20900		　操作が０はデータ名にデータをセットし、(VER5で追加）
JA	ZZZZ010242	20910		  この時件数が０件の場合はデータ名に空が設定されます。
JA	ZZZZ010242	20920		　操作が１は１件のキー名一致データを削除します。
JA	ZZZZ010242	20930		　（更新相手が1件でないとエラーになります）
JA	ZZZZ010242	20940		　操作が２はデータを追加します。
JA	ZZZZ010242	20950		　操作が３は１件のキー名一致データを修正します。
JA	ZZZZ010242	20960		　操作にNを付加した場合処理処対象がないと何もしません。
JA	ZZZZ010242	20970		　 (N=not)
JA	ZZZZ010242	20980		　（２で相手がある、１，３で相手がない、は何もしないで終了）
JA	ZZZZ010242	20990		　操作にEを付加した場合は処理処対象がなくても処理します。
JA	ZZZZ010242	21000		　(E=exchange)
JA	ZZZZ010242	21010		　（２で相手があるは修正します、３で相手が無いは作成します)
JA	ZZZZ010242	21020		　（１で相手が無いは何もしません）
JA	ZZZZ010242	21030		　操作にPを付加した場合いは相手が2件以上でも処理します。
JA	ZZZZ010242	21040		　 (P=plural)
JA	ZZZZ010242	21050		　（操作が１と３のみ有効です、相手が0件はエラーになります）
JA	ZZZZ010242	21060		　操作PにEを付加した場合いは相手が0件の時何もしません。
JA	ZZZZ010242	21070		　キー名、データ名に"."が付いている時はSQLの列名は最後の"."
JA	ZZZZ010242	21080		　　より後の名前が採用されます。
JA	ZZZZ010242	21090		　_PROGRAM_COUNTに操作が０は検索以外は更新件数を設定します。
JA	ZZZZ010242	21100		　(更新件数はVER23.1で設定）
JA	ZZZZ010242	21110		　注意：データ名は必ず事前に存在する必要があります。
JA	ZZZZ010242	21120		　キー名とデータ名は=で初期値を設定できます。VER23.1
JA	ZZZZ010242	21130		　条件が有ると" AND (条件）"をWHEREに追加します。VER23.1
JA	ZZZZ010242	21140		6.33.1)**-読み込みファイルを開きます。
JA	ZZZZ010242	21150		***=READ_OPEN{名前,ファイル名[,エンコード]} <新>  (VER24.1)
JA	ZZZZ010242	21160		***=READ1_OPEN{ファイル名}{[エンコード]}    <旧>
JA	ZZZZ010242	21170		***=READ2_OPEN{ファイル名}{[エンコード]}    <旧>
JA	ZZZZ010242	21180		  READ_OPENはジョブ単位以外はプログラム単位に使えます。
JA	ZZZZ010242	21190		  エンコード無しはバイト順マーク無しUTF-8と判断します。
JA	ZZZZ010242	21200		  (注意：VER7.15で非互換となりました,今まではファイルの
JA	ZZZZ010242	21210		   エンコードでした。）
JA	ZZZZ010242	21220		  エンコードを'/'とするとファイルのエンコードで判定します。
JA	ZZZZ010242	21230		  (ただし、バイト順マーク無しはWINDOWSではSHIFT_JIS、
JA	ZZZZ010242	21240		   LinuxではUTF-8と判断します。バイト順マークが有る場合は
JA	ZZZZ010242	21250		   UTF-8と判断し,以外は指定する必要があります,VER7.15）
JA	ZZZZ010242	21260		   可能な限りエンコードは陽に指定する事を推奨します。
JA	ZZZZ010242	21270		6.33.2)**-読み込みファイルの次の１行をデータ名に転送します。
JA	ZZZZ010242	21280		***=READ_NEXT{名前,データ名,..}..;.. <新>
JA	ZZZZ010242	21290		***=READ1_NEXT{データ名,..}..;..   <旧>
JA	ZZZZ010242	21300		***=READ2_NEXT{データ名,..}..;..   <旧>
JA	ZZZZ010242	21310		  データの区切りは拡張子がCSVは','でそれ以外はタブとします。
JA	ZZZZ010242	21320		  データがある場合は";"まで移動します。
JA	ZZZZ010242	21330		6.33.3)**-読み込みファイルを閉じます。
JA	ZZZZ010242	21340		***=READ_CLOSE{名前}  <新>
JA	ZZZZ010242	21350		***=READ1_CLOSE{}   <旧>
JA	ZZZZ010242	21360		***=READ2_CLOSE{}   <旧>
JA	ZZZZ010242	21370		6.34.1)**-非同期でコンピュータからのメッセージを待ちます。
JA	ZZZZ010242	21380		***=RECEIVE{番号}
JA	ZZZZ010242	21390		  非同期でメッセージを待ち、受信で終了し[Enter]を入力します。
JA	ZZZZ010242	21400		　 番号はSENDで指定した番号と同じ番号を待ちます。
JA	ZZZZ010242	21410		　 同時に複数番号の受信は待てません。
JA	ZZZZ010242	21420		　★注意：エラーになるので回避して下さい。
JA	ZZZZ010242	21430		　★注意：使用中はリストボックスを表示しないでください。
JA	ZZZZ010242	21440		　☆時間起動ジョブでは使えません。
JA	ZZZZ010242	21450		6.34.2)**-RECEIVEと同じですが,来た時ビープ音を出します。
JA	ZZZZ010242	21460		***=RECEIVE_BEEP{番号}
JA	ZZZZ010242	21470		　☆時間起動ジョブでは使えません。
JA	ZZZZ010242	21480		6.35.1)**-テーブルに対しキー項目を元にデータを置き換えます。
JA	ZZZZ010242	21490		★警告：列にTEXT型があるとその列は更新されません。
JA	ZZZZ010242	21500		　（理由：SQL文の比較が正しく判定しないため）
JA	ZZZZ010242	21510		★注意：<新><旧>でキー列名とデータ列名の順番が違います。
JA	ZZZZ010242	21520		***=REPLACE_ALL{出力テーブル名,入力テーブル名,データ列名,..}
JA	ZZZZ010242	21530		***   {キー列名,..}{出力条件}{入力条件} <新>
JA	ZZZZ010242	21540		***=REPLACE_ALL{出力テーブル名}{入力テーブル名}   <旧>
JA	ZZZZ010242	21550		***   {キー列名,..}{データ列名,..}{出力条件}{入力条件}
JA	ZZZZ010242	21560		  出力テーブルのみにある物は出力条件が無ければ削除されます。
JA	ZZZZ010242	21570		  Z_CANCELが' 'でない物は削除データと見なします。
JA	ZZZZ010242	21580		  出力条件の列名は"*O*."を前につけて下さい。
JA	ZZZZ010242	21590		　(VER2以降:PostgreSQLは"テーブル名."以外は"O."になります）
JA	ZZZZ010242	21600		  ★注意：出力条件使用の列名はキー列名に有るもののみです。
JA	ZZZZ010242	21610		  入力条件の列名は"I."を前につけて下さい。
JA	ZZZZ010242	21620		6.35.2)**-REPLACE_ALLと同等入力のZ_CANCEL判定しません。
JA	ZZZZ010242	21630		***=REPLACE_ALL2{出力テーブル名,入力テーブル名,データ列名,..}
JA	ZZZZ010242	21640		***   {キー列名,..}{出力条件}{入力条件} <新>
JA	ZZZZ010242	21650		***=REPLACE_ALL2{出力テーブル名}{入力テーブル名}  <旧>
JA	ZZZZ010242	21660		***   {キー列名,..}{データ列名,..}{出力条件}{入力条件}
JA	ZZZZ010242	21670		6.35.3)**-キー項目で入力テーブルにある物だけを置き換えます。
JA	ZZZZ010242	21680		***=REPLACE_PART{出力テーブル名,入力テーブル名,データ列名,..}
JA	ZZZZ010242	21690		***   {キー列名,..}{出力条件}{入力条件}  <新>
JA	ZZZZ010242	21700		***=REPLACE_PART{出力テーブル名}{入力テーブル名}  <旧>
JA	ZZZZ010242	21710		***   {キー列名,..}{データ列名,..}{出力条件}{入力条件}
JA	ZZZZ010242	21720		　 入力テーブルにない物は何もしません。
JA	ZZZZ010242	21730		　 Z_CANCELが' 'でない物は削除データと見なします。
JA	ZZZZ010242	21740		6.35.3)**-REPLACE_PARTと同等で入力のZ_CANCEL判定をしません。
JA	ZZZZ010242	21750		***=REPLACE_PART2{出力テーブル名,入力テーブル名,データ列,..}
JA	ZZZZ010242	21760		*** {キー列名,..}{出力条件}{入力条件} <新>
JA	ZZZZ010242	21770		***=REPLACE_PART2{出力テーブル名}{入力テーブル名}  <旧>
JA	ZZZZ010242	21780		*** {キー列名,..}{データ列名,..}{出力条件}{入力条件} (VER5.2)
JA	ZZZZ010242	21790		6.35.4)**-REPLACE_PARTの作成部分のみ実行します。
JA	ZZZZ010242	21800		***=REPLACE_PART_ADD{出力テーブル名,入力テーブル名}<新>
JA	ZZZZ010242	21810		***   ,データ列名,..}{キー列名,..}{出力条件}{入力条件}
JA	ZZZZ010242	21820		***=REPLACE_PART_ADD{出力テーブル名}{入力テーブル名}
JA	ZZZZ010242	21830		***   {キー列名,..}{データ列名,..}{出力条件}{入力条件}
JA	ZZZZ010242	21840		6.35.5)**-REPLACE_PART_ADDと同等入力のZ_CANCEL判定をしません
JA	ZZZZ010242	21850		***=REPLACE_PART_ADD2{出力テーブル名,入力テーブル名  <新>
JA	ZZZZ010242	21860		***   ,データ列名,..}{キー列名,..}{出力条件}{入力条件}
JA	ZZZZ010242	21870		***=REPLACE_PART_ADD2{出力テーブル名}{入力テーブル名}  <旧>
JA	ZZZZ010242	21880		***   {キー列名,..}{データ列名,..}{出力条件}{入力条件}
JA	ZZZZ010242	21890		                                               (VER5.2)
JA	ZZZZ010242	21900		6.35.6)**-REPLACE_PARTの修正部分のみ実行します。
JA	ZZZZ010242	21910		***=REPLACE_PART_CHANGE{出力テーブル名,入力テーブル名　<新>
JA	ZZZZ010242	21920		***   ,データ列名,..}{キー列名,..}{出力条件}{入力条件}
JA	ZZZZ010242	21930		***=REPLACE_PART_CHANGE{出力テーブル名}{入力テーブル名}  <旧>
JA	ZZZZ010242	21940		***   {キー列名,..}{データ列名,..}{出力条件}{入力条件}
JA	ZZZZ010242	21950		6.35.7)**-REPLACE_PART_CHANGE同等入力Z_CANCEL判定をしません。
JA	ZZZZ010242	21960		***=REPLACE_PART_CHANGE2{出力テーブル名,入力テーブル名 <新>
JA	ZZZZ010242	21970		***   ,データ列名,..}{キー列名,..}{出力条件}{入力条件}
JA	ZZZZ010242	21980		***=REPLACE_PART_CHANGE2{出力テーブル名}{入力テーブル名} <旧>
JA	ZZZZ010242	21990		***   {キー列名,..}{データ列名,..}{出力条件}{入力条件}
JA	ZZZZ010242	22000		                                               (VER5.2)
JA	ZZZZ010242	22010		6.35.8)**-REPLACE_PARTの削除部分のみ実行します。
JA	ZZZZ010242	22020		***=REPLACE_PART_CANCEL{出力テーブル名,入力テーブル名 　<新>
JA	ZZZZ010242	22030		***   ,データ列名,..}{キー列名,..}{出力条件}{入力条件}
JA	ZZZZ010242	22040		***=REPLACE_PART_CANCEL{出力テーブル名}{入力テーブル名} <旧>
JA	ZZZZ010242	22050		***   {キー列名,..}{データ列名,..}{出力条件}{入力条件}
JA	ZZZZ010242	22060		6.36)**-他の許可のユーザのオブジェクトの権限を解除します。
JA	ZZZZ010242	22070		***=REVOKE_PERMISSION{オブジェクト名,許可[,対象][,ユーザ]}<新
JA	ZZZZ010242	22080		***=REVOKE_PERMISSION{オブジェクト名{[対象]}{許可}{ユーザ}<旧
JA	ZZZZ010242	22090		　ユーザが空白が"I"と"O"と”D"を解除します、
JA	ZZZZ010242	22100		　ユーザが"L"は"L"のみを解除とします。(Lも同じVER8)
JA	ZZZZ010242	22110		　(LNKはVER3よりの機能、BETA06から仕様変更)
JA	ZZZZ010242	22120		　(VER4より仕様変更)
JA	ZZZZ010242	22130		6.37)**-コンピューターにメッセージを送信します。
JA	ZZZZ010242	22140		***=SEND{番号}{コンピュータ名１[;コンピュータ名２]}{内容}
JA	ZZZZ010242	22150		  相手が受信待ちでない場合もそのまま終了します。
JA	ZZZZ010242	22160		  番号は１から89までとします。（90から99まではツール用）
JA	ZZZZ010242	22170		  コンピュータ名が空白の場合は自分自身に送ります。
JA	ZZZZ010242	22180		  ポート番号は654+番号（２桁）とします。(Ve4で変更）
JA	ZZZZ010242	22190		  連続送信を避けるため処理後0.5秒待ちます(Ve11.1で変更）
JA	ZZZZ010242	22200		6.38.1)**-シリアルポートをオープンします。VER7.24)
JA	ZZZZ010242	22210		***=SERIALPORT1_OPEN{エンコード,定義} <新>
JA	ZZZZ010242	22220		***=SERIALPORT2_OPEN{エンコード,定義} <新>
JA	ZZZZ010242	22230		***=SERIALPORT1_OPEN{定義}{エンコード} <旧>
JA	ZZZZ010242	22240		***=SERIALPORT2_OPEN{定義}{エンコード} <旧>
JA	ZZZZ010242	22250		定義はポート名,ポーレート,パリティ,データビット,ストップです
JA	ZZZZ010242	22260		例:{COM1,9600,NONE,8,ONE}(ポーレート以降省略すると左記となる)
JA	ZZZZ010242	22270		6.38.2)**-シリアルポートより指定文字数分を読み込みます。
JA	ZZZZ010242	22280		***=SERIALPORT1_READ{データ名,文字数} <新>
JA	ZZZZ010242	22290		***=SERIALPORT2_READ{データ名,文字数} <新>
JA	ZZZZ010242	22300		***=SERIALPORT1_READ{データ名}{文字数} <旧>
JA	ZZZZ010242	22310		***=SERIALPORT2_READ{データ名}{文字数} <旧>
JA	ZZZZ010242	22320		6.38.3)**-シリアルポートより文字列を書き込みます。
JA	ZZZZ010242	22330		***=SERIALPORT1_WRITE{データ名}
JA	ZZZZ010242	22340		***=SERIALPORT2_WRITE{データ名}
JA	ZZZZ010242	22350		6.38.4)**-シリアルポートをクローズします。
JA	ZZZZ010242	22360		***=SERIALPORT1_CLOSE{}
JA	ZZZZ010242	22370		***=SERIALPORT2_CLOSE{}
JA	ZZZZ010242	22380		6.39.1)**-サーバーでバッチファイルを実行します。
JA	ZZZZ010242	22390		***=SERVER_BAT{サーバーバッチファイル名[,パラメータ]}  <新>
JA	ZZZZ010242	22400		***=SERVER_BAT{サーバーバッチファイル名}{[パラメータ]} <旧>
JA	ZZZZ010242	22410		  実行結果のエラーの判定を作業ディレクトリ上のファイル
JA	ZZZZ010242	22420		  ?_WORK?.EXITで判定するので正常終了時はバッチファイル
JA	ZZZZ010242	22430		  内で!!!と書き換えて下さい。　VER17
JA	ZZZZ010242	22440		   (WINDOWS=%SYSTEMDRIVE%\I\I.%4\TMP_%3\%5.EXIT)
JA	ZZZZ010242	22450		   (LINUX=/home/I/I.%4/TMP_%3/%5.EXIT)
JA	ZZZZ010242	22460		  文字列に"../"又は"..\"が有るとエラーになります。
JA	ZZZZ010242	22470		  パラメータは先頭に無条件で下記5個が付加されます。
JA	ZZZZ010242	22480		  ?_IV? ?_LANG_SYSTEM? ?_REAL? ?_SYSTEM? ?_WORK? (VER17)
JA	ZZZZ010242	22490		  ☆ファイル起動ジョブでは使えません。
JA	ZZZZ010242	22500		6.39.2)**-サーバーからファイルを受信します。
JA	ZZZZ010242	22510		***=SERVER_GET{ファイル名[,パス名]}    <新>
JA	ZZZZ010242	22520		***=SERVER_GET{[パス名]}{ファイル名}   <旧>
JA	ZZZZ010242	22530		  パス名空白時は'TMP'とみなします。
JA	ZZZZ010242	22540		  文字列に"../"又は"..\"が有るとエラーになります。
JA	ZZZZ010242	22550		  パス名TMPは"\I\I.システム名\TMP_REAL\"となります。
JA	ZZZZ010242	22560		  パス名がSHAREで始まっている時は"\I\SHARE\パス名"となります
JA	ZZZZ010242	22570		  (VER7.18)
JA	ZZZZ010242	22580		  パス名が上記以外は"\I\I.システム名\パス名_REAL"となります
JA	ZZZZ010242	22590		  ☆ファイル起動ジョブでは使えません。
JA	ZZZZ010242	22600		6.39.3)**-サーバーの作業ディレクトリにファイルを送信します。
JA	ZZZZ010242	22610		***=SERVER_PUT{ファイル名}.
JA	ZZZZ010242	22620		  文字列に"../"又は"..\"が有るとエラーになります。
JA	ZZZZ010242	22630		  ☆ファイル起動ジョブでは使えません。
JA	ZZZZ010242	22640		6.40.1)**-右辺データを左辺データに転送します。
JA	ZZZZ010242	22650		***=SET{左辺データ=右辺データ1[+右辺データ2..],..}
JA	ZZZZ010242	22660		  +を使って右辺を結合する事が出来ます。
JA	ZZZZ010242	22670		　数値（型1が+,-)の場合小数点以下が切られるとエラーです。
JA	ZZZZ010242	22680		　年月日(型1がd)の場合で日付が正しくないとエラーです。
JA	ZZZZ010242	22690		　数値、年月日以外の場合表示文字数が不足した時エラーです。
JA	ZZZZ010242	22700		　エラー発生時そのデータは転送し以降の処理も続行します。
JA	ZZZZ010242	22710		　数値（型1が+,-)の場合で数値でない時やオーバーフローした時は
JA	ZZZZ010242	22720		　,異常終了します。
JA	ZZZZ010242	22730		　上記以外の型1,2でのの文字種の判定はされません。
JA	ZZZZ010242	22740		6.40.2)**-左辺データの最後に追加します。
JA	ZZZZ010242	22750		***=SET{左辺データ+=右辺データ1[+右辺データ2..],..}
JA	ZZZZ010242	22760		  +を使って右辺を結合する事が出来ます。
JA	ZZZZ010242	22770		6.41)**-データの設定情報を設定します。
JA	ZZZZ010242	22780		***=SET_DICTIONARY{列名,...}
JA	ZZZZ010242	22790		（VER3以降複数指定可能）
JA	ZZZZ010242	22800		6.42)**-テーブル情報を「&[テーブル別名].名前」に設定します。
JA	ZZZZ010242	22810		***=SET_TABLE{&テーブル別名,テーブル名}   <新>
JA	ZZZZ010242	22820		***=SET_TABLE{&テーブル別名}{テーブル名}  <旧>
JA	ZZZZ010242	22830		　テーブル別名は先頭に必ず"&"を付けて下さい。
JA	ZZZZ010242	22840		6.43)**-指定秒の間処理を待ちます。
JA	ZZZZ010242	22850		***=SLEEP{秒}
JA	ZZZZ010242	22860		6.44)**-E-MAILを送信します。
JA	ZZZZ010242	22870		 現在停止中ですので使用できません]
JA	ZZZZ010242	22880		[停止中]***=SMTP{サーバー}{ポート}{宛先}[差出人}{件名}{本文}
JA	ZZZZ010242	22890		  (新仕様）
JA	ZZZZ010242	22900		[★注意★SmtpClientがウイルスと誤認されるVirus判定ソフトが
JA	ZZZZ010242	22910		 有るのでこの命令は停止中で動きません]
JA	ZZZZ010242	22920		　*注意*JAVA版は動きません。
JA	ZZZZ010242	22930		　宛先が複数の場合は";"で区切って下さい。
JA	ZZZZ010242	22940		  サーバー無は@ZZZZZZ_SMTP_SERVER（ただし未登録なので設定要）
JA	ZZZZ010242	22950		  ポート無は　@ZZZZZZ_SMTP_PORT　（ただし未登録なので設定要）
JA	ZZZZ010242	22960		  確認画面が表示されますが,CONTROL=SMTPとすると出ません。
JA	ZZZZ010242	22970		6.45.1)**-区切り文字で,作業名+連番の項目に文字列を分割します.
JA	ZZZZ010242	22980		***=SPLIT_CHAR{作業名}{データ名[,.]}{区切データ名[,.]}  VER23
JA	ZZZZ010242	22990		***=SPLIT_CHAR_VALUE{作業名}{文字列}{区切り文字} [廃止予定]
JA	ZZZZ010242	23000		   (SPLIT_CHAR_VALUEはVER22までのSPLIT_CHARです）[廃止予定]
JA	ZZZZ010242	23010		  区切り文字は複数文字指定が可能です。
JA	ZZZZ010242	23020		  【廃止】前後の空白は取ります。(VER17.1）
JA	ZZZZ010242	23030		 「'」で囲まれた部分の空白や区切り文字は
JA	ZZZZ010242	23040		　　　　　　　　　　　　　　そのままデータとします。
JA	ZZZZ010242	23050		 「'」は区切り文字に指定できません。
JA	ZZZZ010242	23060		  SPLIT_CHAR_VALUEの場合２、３項目目は文字列で  [廃止予定]
JA	ZZZZ010242	23070		       データ名は指定できないので注意して下さい.[廃止予定]
JA	ZZZZ010242	23080		 _SPLIT_COUNTに分割件数を設定します。 [廃止予定]
JA	ZZZZ010242	23090		   文字列が空の場合は何もしないで_SPLIT_COUNTが0。 [廃止予定]
JA	ZZZZ010242	23100		 _SPLIT_CHAR_COUNTに分割件数を設定します。 (VER22.1)
JA	ZZZZ010242	23110		   文字列が空の場合は何もしないで_SPLIT_CHAR_COUNTが0 (VER22)
JA	ZZZZ010242	23120		  ★注意:区切り文字にサロゲートペアや結合文字を使用すると、
JA	ZZZZ010242	23130		　　誤動作します、指定しないでください。
JA	ZZZZ010242	23140		4.45.2)**-表示文字長単位に、作業名＋連番の項目に分割します｡
JA	ZZZZ010242	23150		***=SPLIT_FORM{作業名}{データ名[,.]}{表示文字長データ名}
JA	ZZZZ010242	23160		***=SPLIT_FORM_VALUE{作業名}{文字列}{表示文字長} [廃止予定]
JA	ZZZZ010242	23170		   (SPLIT_FORM_VALUEはVER22までのSPLIT_FORMです）[廃止予定]
JA	ZZZZ010242	23180		　 サロゲートペア,結合文字は実際の桁数でも判定します。
JA	ZZZZ010242	23190		  SPLIT_FORM_VALUEの場合２項目目は文字列で     [廃止予定]
JA	ZZZZ010242	23200		     データ名は指定できないので注意して下さい. [廃止予定]
JA	ZZZZ010242	23210		　_SPLIT_COUNTに分割件数を設定します。[廃止予定]
JA	ZZZZ010242	23220		　_SPLIT_FORM_COUNTに分割件数を設定します。(VER22.1)
JA	ZZZZ010242	23230		  ★注意サロゲートペアや結合文字は2文字以上で構成されるので、
JA	ZZZZ010242	23240		　　表示文字長を超る文字がある時は分割をやめエラーとします。
JA	ZZZZ010242	23250		6.46)**-SQL文を実行します。
JA	ZZZZ010242	23260		***=SQL{SQL文}
JA	ZZZZ010242	23270		6.47)**-カーソルによるSQL処理を実行します。
JA	ZZZZ010242	23280		***=SQL_CURSOR{DECLARE定義[;DECLARE定義...]}   [*廃止予定*]
JA	ZZZZ010242	23290		***   {CURSOR SELECT文}{FETCH データ名[,データ名...]}
JA	ZZZZ010242	23300		***   {処理文;[処理文;...]}                        (VER8.10)
JA	ZZZZ010242	23310		  HとLは?_WORK_TABLE?__()プロシージャーを作成します。
JA	ZZZZ010242	23320		  Pは?_WORK_TABLE?__()ファンクションを作成します。
JA	ZZZZ010242	23330		  (DECLARE定義,CURSOR SELECT文,FETCH データ名,の最後には
JA	ZZZZ010242	23340		   セミコロンを付けないでください）
JA	ZZZZ010242	23350		  (処理文の最後には必ずセミコロンを付けてください）
JA	ZZZZ010242	23360		  ★注意★HはSQL{BEGIN TRANSACTION};内では使用出来ません。
JA	ZZZZ010242	23370		　 (操作系SQLの後で定義系SQLが実行できないため）
JA	ZZZZ010242	23380		   [*廃止予定*]CURSOR{}が新しい命令です。
JA	ZZZZ010242	23390		6.48)**-SQLの受信データをTXT,CSV形式でファイルに落とします。
JA	ZZZZ010242	23400		***=SQL_FILE{付加ファイル名[,OT,ADD]             <新>
JA	ZZZZ010242	23410		***   [,エンコード][,レコード区切り指定]}{SQL文}
JA	ZZZZ010242	23420		***=SQL_FILE2{ファイル名[,OT,ADD]                <新>
JA	ZZZZ010242	23430		***   [,エンコード][,レコード区切り指定]}{SQL文}
JA	ZZZZ010242	23440		***=SQL_FILE{付加ファイル名}{[OT,ADD]}             <旧>
JA	ZZZZ010242	23450		***   {[エンコード][,レコード区切り指定]}{SQL文}
JA	ZZZZ010242	23460		***=SQL_FILE2{ファイル名}{[OT,ADD]}                <旧>
JA	ZZZZ010242	23470		***   {[エンコード][,レコード区切り指定]}{SQL文}
JA	ZZZZ010242	23480		　(レコード区切り指定はU又はWでVER7.15以上）
JA	ZZZZ010242	23490		  SQL_FILEはファイル名は「_SQL_FILE+付加ファイル名」です。
JA	ZZZZ010242	23500		  SQL_FILE2はファイル名は「ファイル名」です。
JA	ZZZZ010242	23510		　ファイル名の拡張子が'CSV'の時はCSV形式で書き、
JA	ZZZZ010242	23520		　以外はTAB区切りで書きます。
JA	ZZZZ010242	23530		　データにTABがあっても何もしないでそのまま書きます。
JA	ZZZZ010242	23540		  ADDでファイルの最後に追加します。
JA	ZZZZ010242	23550		  OTの場合ファイルがあっても上書きします。
JA	ZZZZ010242	23560		　ADD,OTが無い場合はファイルが有るとエラーになります。
JA	ZZZZ010242	23570		  ☆SQL_FILE2は時間起動ジョブでは使えません。
JA	ZZZZ010242	23580		6.49)**-テストと本番データベースのテーブルでSQLを実行します。
JA	ZZZZ010242	23590		***=SQL_REAL_TEST{SQL文}
JA	ZZZZ010242	23600		6.50.1)**-SQLを実行し一件分のデータのみを受信します。
JA	ZZZZ010242	23610		***=SQL_SET{データ名,..}{SQL文}
JA	ZZZZ010242	23620		   _SQL_SET_COUNTに件数が設定されます。
JA	ZZZZ010242	23630		  ０件の場合はデータを転送しないで正常終了するので,
JA	ZZZZ010242	23640		  IF{_SQL_SET_COUNT=0}で陽に判定をして下さい。VER17
JA	ZZZZ010242	23650		  ２件目以降も使用する場合はSQL1かSQL2を使用します。
JA	ZZZZ010242	23660		[中止]　受信データがある場合;まで移動します。VER17
JA	ZZZZ010242	23670		[中止]　エラーのとき異常終了します。VER17
JA	ZZZZ010242	23680		6.50.2)**-SQLを実行し件数分データ名に枝番を付加して設定します
JA	ZZZZ010242	23690		***=SQL_REPEAT{データ名,..}{SQL文}                  (VER8.7)
JA	ZZZZ010242	23700		   _SQL_REPEAT_COUNTに件数が設定されます。
JA	ZZZZ010242	23710		6.51.1)**-SQLを実行し、データを受信します。
JA	ZZZZ010242	23720		***=SQL1{SQL文}
JA	ZZZZ010242	23730		***=SQL2{SQL文}
JA	ZZZZ010242	23740		6.51.2)**-受信したデータを一件ずつ転送します。
JA	ZZZZ010242	23750		***=SQL1_NEXT{データ名,..}..;..
JA	ZZZZ010242	23760		***=SQL2_NEXT{データ名,..}..;..
JA	ZZZZ010242	23770		  受信データが存在する場合は";"まで移動します。
JA	ZZZZ010242	23780		6.51.3)**-受信したデータの１件目に戻ります。
JA	ZZZZ010242	23790		***=SQL1_FIRST{}
JA	ZZZZ010242	23800		***=SQL2_FIRST{}
JA	ZZZZ010242	23810		6.52)**-指定秒後に「ENTER」を入力します。
JA	ZZZZ010242	23820		***=TIMER{秒}
JA	ZZZZ010242	23830		***=TIMER_BEEP{秒}
JA	ZZZZ010242	23840		  TIMER_BEEPの場合はBEEP音を同時に発生します。
JA	ZZZZ010242	23850		　☆時間起動ジョブでは使えません。
JA	ZZZZ010242	23860		6.53)**-複数テーブル使用のUPDATEをRDBMSに合わせ組立実行します
JA	ZZZZ010242	23870		***=UPDATE{更新テーブル名,更新先列名[,.]}{更新元列名[,...]}
JA	ZZZZ010242	23880		***   {他のテーブル名含む以降のSQL文}   <新>
JA	ZZZZ010242	23890		***=UPDATE{更新テーブル名}{更新先列名[,.]}{更新元列名[,...]}
JA	ZZZZ010242	23900		***   {他のテーブル名含む以降のSQL文}  (VER6.4) <旧>
JA	ZZZZ010242	23910		  更新テーブルの別名は'O'固定とします。
JA	ZZZZ010242	23920		  注意:Z_で始まるI言語用列は何も更新しないので,論理削除データ
JA	ZZZZ010242	23930		       には対応出来ません。
JA	ZZZZ010242	23940		6.54.1)**-URLからファイルを作業ディレクリに受信します。
JA	ZZZZ010242	23950		***=URL{[受信ファイル名],[プロキシIP:ポート],URL} VER24.1<新>
JA	ZZZZ010242	23960		***=URL{URL}{[プロキシサーバー:ポート]} VER13.1 <旧>
JA	ZZZZ010242	23970		  受信ファイル名無しはURLから判定します。
JA	ZZZZ010242	23980		  プロキシー使用時は「プロキシサーバー:ポート」を設定します。
JA	ZZZZ010242	23990		  _URLに受信したファイル名が設定されます。(VER18.1)
JA	ZZZZ010242	24000		  {}が３個の場合先頭に受信ファイル名が書けます(VER24.1)
JA	ZZZZ010242	24010		  文字コードはUTF-8のみを対象とします。(VER24.1)
JA	ZZZZ010242	24020		6.54.2)**-URLにPOST送信ファイルを作業ディレクリに受信します。
JA	ZZZZ010242	24030		***=URL_POST{[受信ファイル名],[プロキシ],パラメータ,URL}VER24
JA	ZZZZ010242	24040		  パラメータの日本語_URL_ENCODE(UTF-8)でエンコードして下さい.
JA	ZZZZ010242	24050		  文字コードはUTF-8のみを対象とします。(VER24.1)
JA	ZZZZ010242	24060		6.55.1)**-書き込みファイルを開きます。
JA	ZZZZ010242	24070		***=WRITE_OPEN{名前,ファイル名[,OT,ADD] [,エンコード] <新>
JA	ZZZZ010242	24080		***   [,レコード区切り指定]}
JA	ZZZZ010242	24090		***=WRITE1_OPEN{ファイル名}{[,OT,ADD]}                <旧>
JA	ZZZZ010242	24100		***   {[エンコード][,レコード区切り指定]}
JA	ZZZZ010242	24110		***=WRITE2_OPEN{ファイル名}{[,OT,ADD]}                <旧>
JA	ZZZZ010242	24120		***   {[エンコード][,レコード区切り指定]}
JA	ZZZZ010242	24130		  WRITE_OPENはジョブ単位以外はプログラム単位に使えます。
JA	ZZZZ010242	24140		  WRITE_OPENはOT以降順不同です。
JA	ZZZZ010242	24150		  レコード区切り指定はU又はW。　(VER7.15以上）
JA	ZZZZ010242	24160		  OTの場合ファイルがあっても上書きします。
JA	ZZZZ010242	24170		　ADDでファイルの最後に追加します。
JA	ZZZZ010242	24180		　ADD,OTが無い場合はファイルが有るとエラーになります。
JA	ZZZZ010242	24190		  ☆時間起動ジョブはファイル名に:、/、￥は書けません。
JA	ZZZZ010242	24200		　ファイル名の拡張子が'CSV'の時はCSV形式で書き、
JA	ZZZZ010242	24210		　以外はTAB区切りで書きます。
JA	ZZZZ010242	24220		　データにTABがあっても何もしないでそのまま書きます。
JA	ZZZZ010242	24230		　エンコードは次のように判断下さい。
JA	ZZZZ010242	24240		　(1)I言語で書き、I言語でのみで読む場合 ===========>空白
JA	ZZZZ010242	24250		    （BOM無しのUTF-8)
JA	ZZZZ010242	24260		　(2)OS依存のバッチやスクリプトファイル作成 ======>"/"
JA	ZZZZ010242	24270		     (WinsowsはSHIFT_JIS,UnixはBOM無しのUTF-8)
JA	ZZZZ010242	24280		  (3)上記以外で色々な使い方をする場合 ============>"UTF-8,W"
JA	ZZZZ010242	24290		     (BOM付きUTF-8でレコードの区切りをWindows用とする）
JA	ZZZZ010242	24300		     (Unix用レコードの区切りはWindowsで問題が出る場合有り）
JA	ZZZZ010242	24310		     (IPRINT?.EXEで使うファイルはこれを推奨します）
JA	ZZZZ010242	24320		6.55.2)**-書き込みファイルにデータを書きます。
JA	ZZZZ010242	24330		***=WRITE{名前,データ名,..} <新>
JA	ZZZZ010242	24340		***=WRITE1{データ名,..}     <旧>
JA	ZZZZ010242	24350		***=WRITE2{データ名,..}     <旧>
JA	ZZZZ010242	24360		6.55.3)**-書き込みファイルを閉じます。
JA	ZZZZ010242	24370		***=WRITE_CLOSE{名前}  <新>
JA	ZZZZ010242	24380		***=WRITE1_CLOSE{}     <旧>
JA	ZZZZ010242	24390		***=WRITE2_CLOSE{}     <旧>
JA	ZZZZ010242	24400		6.56)**-作業ディレクトリ上でZIP形式で圧縮又は解凍をします。
JA	ZZZZ010242	24410		***=ZIP{名前}                                    VER13.1
JA	ZZZZ010242	24420		  名前の最後が.zipの時は.zipを取ったディレクトリに解凍します.
JA	ZZZZ010242	24430		  ☆注意:同名のディレクトリが存在する時は事前に削除されます。
JA	ZZZZ010242	24440		[中止]☆注意:ディレクトリの最後が.Iと成る場合はI言語関連
JA	ZZZZ010242	24450		[中止]   とみなしエラーと成ります。 VER17
JA	ZZZZ010242	24460		  名前の最後が.zipでない時は.zipを付けた名前に圧縮します。
JA	ZZZZ010242	24470		  ☆注意:同名のファイルが存在する時は事前に削除されます。
JA	ZZZZ010242	24480		6.58)**-RDMSのログインを作成します。
JA	ZZZZ010242	24490		  (パスワードを設定しないでも作成出来る為の物です）
JA	ZZZZ010242	24500		***=ZZ_ADDLOGIN{[LINK,TEST,REAL]}{ログイン名}{その他};(VER24)
JA	ZZZZ010242	24510		   その他はLは空白かサーバー名、Mはデータベース名、
JA	ZZZZ010242	24520		   Oはテーブルスペース名、Iは不要,
JA	ZZZZ010242	24530		   PはCREATEDB等の付加属性を設定します。
JA	ZZZZ010242	24540		   (D,F,Hは動きません）
JA	ZZZZ010242	24550		6.59)**-SON又はXMLフォーマットから値を抜き出します。(VER24)
JA	ZZZZ010242	24560		***=JSON_BEGIN{元データ元データ,データ名1[,データ名2]}
JA	ZZZZ010242	24570		***=JSON_CONTINUE{元データ}
JA	ZZZZ010242	24580		***=JSON{}
JA	ZZZZ010242	24590		***=JSON_END{}
JA	ZZZZ010242	24600		***=XML_BEGIN{元データ元データ,データ名1[,データ名2]}
JA	ZZZZ010242	24610		***=XML_CONTINUE{元データ}
JA	ZZZZ010242	24620		***=XML{}
JA	ZZZZ010242	24630		***=XML_END{}
JA	ZZZZ010242	24640		    JSON_BEGINで元データをセットします。
JA	ZZZZ010242	24650		       データ名の最初のピリオッド以降をキー名とします。
JA	ZZZZ010242	24660		       JSON_END{}前に再度実行すると入れ子になります。
JA	ZZZZ010242	24670		    JSONで値を抜き出します。全部揃った場合は_JSONが'1'と成る
JA	ZZZZ010242	24680		      ので'1'の場合に処理をして再度JSON{}を実行します。
JA	ZZZZ010242	24690		    JSON_CONTINUE{元データ}で元データを追加して継続します。
JA	ZZZZ010242	24700		       _JSONが'1'以外の時はこの命令で元データを追加します。
JA	ZZZZ010242	24710		    JSON_END{}で抜き出しを終了します。
JA	ZZZZ010242	24720		    JSONの配列データはそのまま扱います。
JA	ZZZZ010242	24730		6.60)**-作業ディレクトリ上のファイルのなまえを変更します。
JA	ZZZZ010242	24740		***=RENAME_FILE{変更後のファイル名,変更前のファイル名};
JA	ZZZZ010242	24750		===========================================================
JA	ZZZZ010242	24760		7)**-データ辞書のチェックの説明
JA	ZZZZ010242	24770		◆チェックでチェック61からチェック66までの構成が変わります。
JA	ZZZZ010242	24780		①空白--何も構成しません。
JA	ZZZZ010242	24790		②CHECK[1]--チェック61からチェック66までをCHECK[1]とします。
JA	ZZZZ010242	24800		③CHECK2--チェック61からチェック66までをCHECK2とします。
JA	ZZZZ010242	24810		④SELECT1--CHECK2にSELECT文を列名1個(1)で作ります。
JA	ZZZZ010242	24820		 "SELECT DISTINCT ?CHECK62?  FROM ?CHECK61?
JA	ZZZZ010242	24830		    WHERE Z_CANCEL=' '
JA	ZZZZ010242	24840		    [AND(?CHECK63??CHECK64??CHECK65??CHECK66?)]
JA	ZZZZ010242	24850		    ORDER BY ソート順" /* ソート順はSELECT22が2で以外は1 */
JA	ZZZZ010242	24860		 ★注意：_X変数は使えません。
JA	ZZZZ010242	24870		⑤SELECT21,22--CHECK2にSELECT文を列名1個(2)で作ります。
JA	ZZZZ010242	24880		 "SELECT DISTINCT ?_Q?_X?_Q?.CHECK62,?_Q?_X?_Q?.?CHECK63?
JA	ZZZZ010242	24890		   FROM ?CHECK61? ?_Q?_X?_Q?
JA	ZZZZ010242	24900		    WHERE ?_Q?_X?_Q?.Z_CANCEL=' '
JA	ZZZZ010242	24910		    [AND(?CHECK64??CHECK65??CHECK66?)]
JA	ZZZZ010242	24920		    ORDER BY ソート順" /* ソート順はSELECT22が2で以外は1 */
JA	ZZZZ010242	24930		  ○SECTIONも作ります。
JA	ZZZZ010242	24940		   "SET{?_Q?_SET?_Q??_Q?_X?_Q?.?CHECK63?=_CHECK2};"
JA	ZZZZ010242	24950		⑥SECTION--チェック61からチェック66までをSECTIONとします。
JA	ZZZZ010242	24960		⑦SECTION1--SECTIONに命令文を作ります。
JA	ZZZZ010242	24970		3"SQL_SET{}{SELECT DISTINCT ' ' FROM ?CHECK61?
JA	ZZZZ010242	24980		   WHERE ?CHECK62?='?_Q?_DATA?_Q?'
JA	ZZZZ010242	24990		    [AND(?CHECK63?)?CHECK64??CHECK65??CHECK66?)]
JA	ZZZZ010242	25000		   AND Z_CANCEL=' '}ERROR{};"
JA	ZZZZ010242	25010		 ★注意：_X変数は使えません。
JA	ZZZZ010242	25020		⑧SECTION2--SECTIONに命令文を作ります。
JA	ZZZZ010242	25030		 "SQL_SET{?_Q?_SET?_Q??_Q?_X?_Q?.?CHECK63?}
JA	ZZZZ010242	25040		  {SELECT DISTINCT ?_Q?_X?_Q?.?CHECK63?
JA	ZZZZ010242	25050		   FROM ?CHECK61? ?_Q?_X?_Q?
JA	ZZZZ010242	25060		   WHERE ?_Q?_X?_Q?.?CHECK62?='?_Q?_DATA?_Q?'
JA	ZZZZ010242	25070		   [AND(?CHECK64??CHECK65??CHECK66?)]
JA	ZZZZ010242	25080		   AND ?_Q?_X?_Q?.Z_CANCEL=' '}ERROR{};"
JA	ZZZZ010242	25090		===========================================================
JA	ZZZZ010242	25100		8)**-ＣＧＩの文法
JA	ZZZZ010242	25110		◆HTMLの文字コードはすべてUTF-8と見なします。
JA	ZZZZ010242	25120		◆?_IV?TIMEW.EXEでコマンドラインパラメータが３個以下は
JA	ZZZZ010242	25130		 CGIプログラムと判定します。  (VER20.1)
JA	ZZZZ010242	25140		 IISはパラメータ不要です。  (VER20.1)
JA	ZZZZ010242	25150		 Apacheはパラメータにシステム名と%0(Uは$0)を付けます(VER20.1)
JA	ZZZZ010242	25160		[中止]IISの場合プログラムの拡張子が大文字のEXEはエラー
JA	ZZZZ010242	25170		[中止]となるので、小文字のexeに変更下さい）
JA	ZZZZ010242	25180		◆PATH_INFOの設定
JA	ZZZZ010242	25190		　_CGI_INFOにPATH_INFOの内容を設定します。
JA	ZZZZ010242	25200		　最後のスラッシュの次が'real'か'test'のみ有効とします。
JA	ZZZZ010242	25210		（test_はテストデータベース,real_本番データベースを使用）
JA	ZZZZ010242	25220		　続く１文字は'_'固定とします。
JA	ZZZZ010242	25230		　続く2文字を言語とします。(ja,en)
JA	ZZZZ010242	25240		　続く１文字は'_'固定とします。
JA	ZZZZ010242	25250		　_CGI_INFO_BEGINにここまでを設定します。
JA	ZZZZ010242	25260		　続く10文字をジョブ名と見なします。
JA	ZZZZ010242	25270		　_CGI_INFO_JOBに設定します。　(_JOBに設定)
JA	ZZZZ010242	25280		　最後が拡張子で先頭に'.'が付いています。
JA	ZZZZ010242	25290		　_CGI_INFO_ENDに設定されます。
JA	ZZZZ010242	25300		　例）'.../real_ja_zzzz800101.i1'
JA	ZZZZ010242	25310		　(formのaction=またはaのhref=で設定します）
JA	ZZZZ010242	25320		◆受け取ったデータはname=を'#名前'としvalue=を内容とする変数
JA	ZZZZ010242	25330		　としますが、name=内に=がある場合はvalue=を無視しname=内で
JA	ZZZZ010242	25340		  name=valueとします、なお','で複数指定する事も可能です。
JA	ZZZZ010242	25350		　名前自体はすべて大文字に変換されます。
JA	ZZZZ010242	25360		　特別にname=が"_JOB"の場合は内容をジョブ名に設定します。
JA	ZZZZ010242	25370		　（複数ある場合は最後が有効となります）
JA	ZZZZ010242	25380		　メニューの認証が'X'以外はname=が"_PERSON"と"_PASSWORD"
JA	ZZZZ010242	25390		　から社員とパスワードを入力し認証を行い認証されない場合は
JA	ZZZZ010242	25400		　BODY{}を実行しません。　VER20.1
JA	ZZZZ010242	25410		◆ジョブ名は10文字で5,6文字目が80のみ有効とします。
JA	ZZZZ010242	25420		◆命令
JA	ZZZZ010242	25430		8.1)**-HTMLのHEADに書き出します。
JA	ZZZZ010242	25440		***=HEAD{内容}
JA	ZZZZ010242	25450		8.2)**-HTMLのBODYに書き出します。
JA	ZZZZ010242	25460		***=BODY{内容}
JA	ZZZZ010242	25470		***=BODY_FORM{内容}
JA	ZZZZ010242	25480		    BODY_FORMはFORMをHTMLに書きだします。
JA	ZZZZ010242	25490		    メニューの認証でパスワードが必要な場合は最後に
JA	ZZZZ010242	25500		      PERSONとPASSWORDを付加してHTMLに書きだします。
JA	ZZZZ010242	25510		      尚、BODY_FORMが無い場合はBODY_FORMを最後に書きます。
JA	ZZZZ010242	25520		    ★注意：HTTPの場合はパスワードがネットワークにそのまま流
JA	ZZZZ010242	25530		      れるのでHTTPS等で暗号化する必要があります。
JA	ZZZZ010242	25540		8.3)**-HEAD,BODY共通の説明。
JA	ZZZZ010242	25550		　HEAD{}でヘッダー部続いてBODY{}でボデー部を出力します。
JA	ZZZZ010242	25560		　この内容は小文字に変換しますので、大文字を使用する場合は
JA	ZZZZ010242	25570		　?データ名?で与えて下さい。
JA	ZZZZ010242	25580		◆標準出力の方法
JA	ZZZZ010242	25590		　処理前に<head>までを出力します。
JA	ZZZZ010242	25600		　HEAD{}でヘッダー部の出力をし、続いて最初のBODY{}で
JA	ZZZZ010242	25610		　</head><body>を付加して出力します。
JA	ZZZZ010242	25620		　最後に</body></html>が自動的に付加されます。
JA	ZZZZ010242	25630		===========================================================
JA	ZZZZ010242	25640		9)**-特殊処理用。
JA	ZZZZ010242	25650		  (ZZZZ01,ZZZZ99が先頭のジョブとファイル起動ジョブのみ可能）
JA	ZZZZ010242	25660		  (VER1は全SQL対象でしたが、VER2はSQL=のみで非互換です）
JA	ZZZZ010242	25670		　(VER3以降メニューのパーミッションがZZZZでも可能）
JA	ZZZZ010242	25680		*** JOB_PART=許可区分--許可区分を変更します。
JA	ZZZZ010242	25690		メニューの許可がZZZZでメニュー認証がX以外のみ設定可能です。
JA	ZZZZ010242	25700		*** JOB_PERMISSION=許可--許可を変更します。
JA	ZZZZ010242	25710		メニューの許可がZZZZでメニュー認証がX以外のみ設定可能です。
JA	ZZZZ010242	25720		 利用者の許可がZZZZ以外は利用者許可のみ可能です。(VER8.3)
JA	ZZZZ010242	25730		◆_PASSWORD--SET{_PASSWORD=使用者+パスワード}で暗号化。
JA	ZZZZ010242	25740		　(ZZZZ010121とZZZZ010124とインストールプログラムのみ可能)
JA	ZZZZ010242	25750		◆_HEAD--=SET{_HEAD='文字'}でタイトルバーに文字を表示します。
JA	ZZZZ010242	25760		◆_TITLE--SET{_TITLE1='文字'}で１行目に文字を表示します。
JA	ZZZZ010242	25770		◆=SET{_REAL_TEST='ALTER'}='REAL'='TEST'--本番,テストを変更。
JA	ZZZZ010242	25780		◆サーバーで実行しジョブ名がZZZZ010540の時に
JA	ZZZZ010242	25790		  (VER3でジョブ名変更）
JA	ZZZZ010242	25800		　SQL{},COMMAND{}内の*TEST*又は*REAL*又は*LINK*の文字
JA	ZZZZ010242	25810		　は設定済みパスワードで置き換えます。
JA	ZZZZ010242	25820		9.1)**-メニューデータを_JOBを元に受信します。
JA	ZZZZ010242	25830		***=SQL1_MENU{メニュー数};
JA	ZZZZ010242	25840		◆プログラム起動時パラメータを２個VERSIONとするとI\TMP上に
JA	ZZZZ010242	25850		　VERSION_MENU.TXTまたはVERSION_TIME.TXTにバージョンを
JA	ZZZZ010242	25860		　出力します。
JA	ZZZZ010242	25870		◆起動パラメータにZZZZZZ_ABORT=NOを記入するとWindowsVista等で
JA	ZZZZ010242	25880		  サービスから?_IV?MENU?.EXEを起動する場合を想定し,異常終了し
JA	ZZZZ010242	25890		  ても画面を表示してプログラムが停止しないようにし、エラーを
JA	ZZZZ010242	25900		  \I\TMP\ZZZZZZ_ABORT.TXTに書いて終了します。
JA	ZZZZ010242	25910		===========================================================
JA	ZZZZ010242	25920		10)**-ファイル起動ジョブの場合のみ有効なコマンド
JA	ZZZZ010242	25930		***=MAKE_DIR{ディレクトリ}
JA	ZZZZ010242	25940		◎ディレクトリーを作ります。
JA	ZZZZ010242	25950		===========================================================
JA	ZZZZ010242	25960		11)**-インストール時のみ使用可能な機能。
JA	ZZZZ010242	25970		◆_PASSWORD_LINK--リンクパスワードを暗号化します。
JA	ZZZZ010242	25980		◆_PASSWORD_REAL--本番パスワードを暗号化します。
JA	ZZZZ010242	25990		◆_PASSWORD_TEST--テストパスワードを暗号化します。
JA	ZZZZ010242	26000		<削除>◆_REGISTRY--SET{..=KEY+SUBKEY}でLOCALMACHINEから読む。
JA	ZZZZ010242	26010		<削除>   インストール以外でも動きます。(VER24.1)
JA	ZZZZ010242	26020		<削除>  *注意*JAVA版は動きません。
JA	ZZZZ010242	26030		◆_REGISTRY_WRITE-SET{..=SUBKEY+データ}でLOCALMACHINEに書く。
JA	ZZZZ010242	26040		  *注意*JAVA版は動きません。
JA	ZZZZ010242	26050		***=WRITE_SYSTEM{}--システムのオプションファイルを書き出す。
JA	ZZZZ010242	26060		===========================================================
JA	ZZZZ010242	26070		12)**-その他の提供ツール。
JA	ZZZZ010242	26080		12-1)**-FUNCTION(★注意:Firebirdは使えないので_DAY_CHAR()等の
JA	ZZZZ010242	26090		   システム変数による機能を新しく用意しました）(VER18.1)
JA	ZZZZ010242	26100		【廃止】VER22で４個のファンクションを廃止しました。
JA	ZZZZ010242	26110		【廃止】[◆?_MP_ZZZZ?ZZ_DAY_CHAR_FUNC(日付CHAR(8)、日数INT)
JA	ZZZZ010242	26120		【廃止】◇日付CHAR(8)を日数分加算した日付CHAR(8)を返します。
JA	ZZZZ010242	26130		【廃止】◆?_MP_ZZZZ?ZZ_DAY_DATE_FUNC(日付DATETIME、日数INT)
JA	ZZZZ010242	26140		【廃止】◇日付DATETIMEを日数分加算した日付CHAR(8)を返します。
JA	ZZZZ010242	26150		【廃止】◆?_MP_ZZZZ?ZZ_WEEK_CHAR_FUNC(日付CHAR(8))
JA	ZZZZ010242	26160		【廃止】◇日付CHAR(8)の曜日INTを返します。(1=日曜日,7=土曜日)
JA	ZZZZ010242	26170		【廃止】◆?_MP_ZZZZ?ZZ_WEEK_DATE_FUNC(日付DATETIME)
JA	ZZZZ010242	26180		【廃止】◇日付DATETIMEの曜日INTを返します。(1=日曜日,7=土曜日
JA	ZZZZ010242	26190		12-2)**-VIEW
JA	ZZZZ010242	26200		◆?_MP_ZZZZ?ZZ_M_許可_COLUMN_VIEW
JA	ZZZZ010242	26210		◇マスタデータベース内の列情報です。（許可単位）
JA	ZZZZ010242	26220		◆?_MP_ZZZZ?ZZ_M_許可_GRANT_VIEW
JA	ZZZZ010242	26230		◇マスタデータベースの権限情報です。（許可単位）
JA	ZZZZ010242	26240		◆?_MP_ZZZZ?ZZ_M_許可_INDEX_VIEW
JA	ZZZZ010242	26250		◇マスタデータベースのインデックス情報です。（許可単位）
JA	ZZZZ010242	26260		◆?_MP_ZZZZ?ZZ_M_許可_OBJECT_VIEW
JA	ZZZZ010242	26270		◇マスタデータベースのオブジェクト情報です。（許可単位）
JA	ZZZZ010242	26280		◆?_MP_ZZZZ?ZZ_W_許可_COLUMN_VIEW
JA	ZZZZ010242	26290		◇ワークデータベース内の列情報です。（許可単位）
JA	ZZZZ010242	26300		◆?_MP_ZZZZ?ZZ_W_許可_GRANT_VIEW
JA	ZZZZ010242	26310		◇ワークデータベースの権限情報です。（許可単位）
JA	ZZZZ010242	26320		◆?_MP_ZZZZ?ZZ_W_許可_INDEX_VIEW
JA	ZZZZ010242	26330		◇ワークデータベースのインデックス情報です。（許可単位）
JA	ZZZZ010242	26340		◆?_MP_ZZZZ?ZZ_W_許可_OBJECT_VIEW
JA	ZZZZ010242	26350		◇ワークデータベースのオブジェクト情報です。（許可単位）
JA	ZZZZ010242	26360		12-3)**-クライアント用ファイルの説明。(\I\BIN?_IV?内）
JA	ZZZZ010242	26370		◆ICHARTW4.EXE
JA	ZZZZ010242	26380		◇汎用グラフ表示プログラムです。
JA	ZZZZ010242	26390		◆IPRINTW4.EXE
JA	ZZZZ010242	26400		◇汎用印刷プログラムです。
JA	ZZZZ010242	26410		◆サーバ―名_システム名.I
JA	ZZZZ010242	26420		◇サーバー別、システム別の起動用パラメータファイルです。
JA	ZZZZ010242	26430		◆I_MENU.TXT
JA	ZZZZ010242	26440		◇メニュー表示用I言語プログラムです。
JA	ZZZZ010242	26450		◆?_IV?LANG言語W.TXT
JA	ZZZZ010242	26460		◇言語別メッセージ用ファイルです。
JA	ZZZZ010242	26470		◆?_IV?MENUW4.EXE
JA	ZZZZ010242	26480		◇クライアント用I言語実行プログラムです。(画面使用）
JA	ZZZZ010242	26490		◆?_IV?ROOTW4.EXE
JA	ZZZZ010242	26500		◇管理者権限で実行させるプログラムです。
JA	ZZZZ010242	26510		12-4)**-サーバー用ファイルの説明1。\I\I.システム名\BIN内
JA	ZZZZ010242	26520		◆サーバ―名_システム名.CFG
JA	ZZZZ010242	26530		◇インストール情報ファイルです。
JA	ZZZZ010242	26540		◆サーバ―名_システム名.I
JA	ZZZZ010242	26550		◇時間起動用のパラメータファイルです。
JA	ZZZZ010242	26560		◆?_IV?TIMEW4.EXE
JA	ZZZZ010242	26570		◇サーバー用I言語実行プログラムです。（画面未使用、バッチ用）
JA	ZZZZ010242	26580		12-5)**-サーバー用ファイルの説明2。\I\I.システム名\BAT内
JA	ZZZZ010242	26590		◆ZZZZZZBACKUP(.BAT)    VER17
JA	ZZZZ010242	26600		◇データベースとシステムのバックアップ用バッチファイルです。
JA	ZZZZ010242	26610		◆ZZZZZZCPTR(.BAT)
JA	ZZZZ010242	26620		◇テストから本番にファイルを移行するバッチファイルです。
JA	ZZZZ010242	26630		◆ZZZZZZETC(.BAT)
JA	ZZZZ010242	26640		◇色々の作業をするバッチファイルです。
JA	ZZZZ010242	26650		◆ZZZZZZTIME(.BAT)
JA	ZZZZ010242	26660		◇時間起動（バッチ処理）用バッチファイルです。
JA	ZZZZ010242	26670		12-6)**-サーバー用ファイルの説明3。\I\SERVICE内
JA	ZZZZ010242	26680		◆?_IV?ADD.BAT
JA	ZZZZ010242	26690		◇サービス登録用バッチファイルです。
JA	ZZZZ010242	26700		◆?_IV?REMOVE.BAT
JA	ZZZZ010242	26710		◇サービス削除用バッチファイルです。
JA	ZZZZ010242	26720		◆?_IV?SRVCW4.EXE
JA	ZZZZ010242	26730		◇SERVER_BAT,_GET,_PUT実行用サービスプログラムです。
JA	ZZZZ010242	26740		12-7)**-サーバー用ファイルの説明4。\I内
JA	ZZZZ010242	26750		◆?_IV?RESCUE.BAT/.TXT
JA	ZZZZ010242	26760		◇データーベース復元用ファイルです。
JA	ZZZZ010242	26770		◆?_IV?UNINSTALL.BAT/.TXT
JA	ZZZZ010242	26780		◇システムアンインストール用ファイルです。
JA	ZZZZ010242	26790		13)エラーメッセージの主な意味。
JA	ZZZZ010242	26800		◆bad (対象) "内容"--対象の内容が正しくない。
JA	ZZZZ010242	26810		◆find (対象) "内容"--対象に内容が有る。
JA	ZZZZ010242	26820		◆equal (対象1,対象2) (内容=値)--対象の内容が同じ。
JA	ZZZZ010242	26830		◆not after (命令)--その命令の後で無い。
JA	ZZZZ010242	26840		◆not equal (対象1,対象2) (内容!=値)--対象の内容が不一致。
JA	ZZZZ010242	26850		◆not found (対象) "内容"--対象の内容が見つからない。
JA	ZZZZ010242	26860		◆not use (環境) "内容"--その環境下では使えない。
JA	ZZZZ010242	26870		◆not 種類 (対象) "内容"--対象の内容がその種類では無い。
JA	ZZZZ010242	26880		◆over (対象) (内容>値)--内容が値より大きい。
JA	ZZZZ010242	26890		◆same (対象) "内容"--対象の内容が既に同じ物が有る。
JA	ZZZZ010242	26900		◆under (対象) (内容<値)--内容が値より小さい。
JA	ZZZZ010242	26910		◆(対象) is null--対象に値が無い。
JA	ZZZZ010242	26920		◆"内容" not in(値,...) (対象)-内容が値の中に無い。
JA	ZZZZ010242	26930		◆その他のエラー--上記に該当しないエラー。
JA	ZZZZ010242	26940		===========================================================
JA	ZZZZ010242	26950		以上
JA	ZZZZ010242	26960		ALL RIGHTS RESERVED,COPYRIGHT(C)2002-2015 NOBUMICHI HARASAWA
JA	ZZZZ010300	100	ZZZZ010301	?MENU?
JA	ZZZZ010300	200		 一般的な検索プログラムのサンプルです。
JA	ZZZZ010300	300	ZZZZ010202	?MENU?
JA	ZZZZ010300	400		 分類された物を、選択して検索するサンプルです。
JA	ZZZZ010300	500	ZZZZ010204	?MENU?
JA	ZZZZ010300	600		 簡易的な棒グラフを表示するサンプルです。
JA	ZZZZ010300	700	ZZZZ010206	?MENU?
JA	ZZZZ010300	800		 IPRINT?.EXEを使った印刷のサンプルです。
JA	ZZZZ010300	900	ZZZZ010208	?MENU?
JA	ZZZZ010300	1000		 背景色の色表示のサンプルです。
JA	ZZZZ010300	1100	ZZZZ010210	?MENU?
JA	ZZZZ010300	1200		 PROGRAM=OUTPUTの各種画面設定のサンプルです。
JA	ZZZZ010300	1300	ZZZZ010212	?MENU?
JA	ZZZZ010300	1400		 "_"から始まるシステム提供データの内容を表示します。
JA	ZZZZ010300	1500	ZZZZ010213	?MENU?
JA	ZZZZ010300	1600		 "TABLE=&X1,?_MM?_SAMPLE_TABLE"で設定されるデータの内容です。
JA	ZZZZ010300	1700	ZZZZ010321	?MENU?
JA	ZZZZ010300	1800		 一般的な更新プログラムのサンプルです。
JA	ZZZZ010300	1900	ZZZZ010222	?MENU?
JA	ZZZZ010300	2000		 分類された物を、選択して更新するサンプルです。
JA	ZZZZ010300	2100	ZZZZ010224	?MENU?
JA	ZZZZ010300	2200	ZZZZ010225	?MENU?
JA	ZZZZ010300	2300		 全てをプログラムする場合のサンプルです。
JA	ZZZZ010300	2400	ZZZZ010231	?MENU?
JA	ZZZZ010300	2500	ZZZZ010232	?MENU?
JA	ZZZZ010300	2600		和暦と西暦の変換が出来るサンプルです。
JA	ZZZZ010300	2700	ZZZZ010234	?MENU?
JA	ZZZZ010300	2800	ZZZZ010235	?MENU?
JA	ZZZZ010300	2900	ZZZZ010236	?MENU?
JA	ZZZZ010300	3000	ZZZZ010237	?MENU?
JA	ZZZZ010300	3100	ZZZZ010238	?MENU?
JA	ZZZZ010300	3200	ZZZZ010239	?MENU?
JA	ZZZZ010300	3300	ZZZZ010240	?MENU?
JA	ZZZZ010300	3400		麻雀の点数計算をする事を想定したサンプルです。
JA	ZZZZ010421	100	ZZZZ010221	HELPが左記にあります。
JA	ZZZZ010421	200	ZZZZ010241	I言語文法書が左記HELPにあります。
JA	ZZZZ010421	300	ZZZZ010212	SQLの文法書が左記HELPにあります。
JA	ZZZZ010422	100	ZZZZ010222	左記に説明文が有ります。
JA	ZZZZ010423	100		関連する各種システム系TABLE情報を全て変更します。
JA	ZZZZ010425	100	ZZZZ010225	HELPは左記にあります。
JA	ZZZZ010426	100	ZZZZ010226	HELPは左記にあります。
JA	ZZZZ010427	100	ZZZZ010227	HELPは左記にあります。
JA	ZZZZ010429	100	ZZZZ010229	ZZZZ010229にヘルプがあります。
JA	ZZZZ010433	100		テスト完了した各種データファイルを本番に移行します。
JA	ZZZZ010433	200		(1)データファイルのドライブについて。
JA	ZZZZ010433	300		   データファイル用のドライブはサーバーシのシステム
JA	ZZZZ010433	400		   ドライブ上の
JA	ZZZZ010433	500		   \I言語\?_SYSTEM?.SRV\SERVER\I言語.CFG
JA	ZZZZ010433	600		   の最初の１文字です。
JA	ZZZZ010433	700		(2)ディレクトリーについて。
JA	ZZZZ010433	800		   転送元テスト用ディレクトリーは該当ドライブの
JA	ZZZZ010433	900		   \I言語\?_SYSTEM?.SRV\TEST\DATAです。
JA	ZZZZ010433	1000		   転送先本番用ディレクトリーは該当ドライブの
JA	ZZZZ010433	1100		   \I言語\?_SYSTEM?.SRV\REAL\DATAです。
JA	ZZZZ010433	1200		(3)旧ファイルのバックアップについて。
JA	ZZZZ010433	1300		   本番データディレクトリー上のOLD1からOLD9までに
JA	ZZZZ010433	1400		   ９世代分旧ファイルを順次移動します。
JA	ZZZZ010433	1500		(4)同一更新日時のファイルについて。
JA	ZZZZ010433	1600		   更新日時の同じファイルは表示しません。
JA	ZZZZ010433	1700		 （注:一分以内の更新は更新されてないと判断されます）
JA	ZZZZ010433	1800		(5)ファイル名の長さについて。
JA	ZZZZ010433	1900		   ファイル名は８０文字以内とします。
JA	ZZZZ010500	100		運用管理者用メニューです
JA	ZZZZ010500	200	ZZZZ010501	01---?MENU?
JA	ZZZZ010500	300		時間起動の最新状態を表示します。（スタートアップで起動）
JA	ZZZZ010500	400		サーバーで最初に起動した物のみRECIVEで情報を受けとります。
JA	ZZZZ010500	500		リンクサーバーを設定するとそのサーバー情報も一緒に見られます.
JA	ZZZZ010500	600	ZZZZ010502	02---?MENU?
JA	ZZZZ010500	700		システムの起動状況を確認します。（スタートアップで起動）
JA	ZZZZ010500	800		正常であれば画面が消え、異常時は画面が表示されたままです。
JA	ZZZZ010500	900	ZZZZ010503	03---?MENU?
JA	ZZZZ010500	1000		時間起動された過去の履歴を見られます。
JA	ZZZZ010500	1100	ZZZZ010505	05---?MENU?
JA	ZZZZ010500	1200		部分を検索します。
JA	ZZZZ010500	1300	ZZZZ010508	08---?MENU?
JA	ZZZZ010500	1400		テストテーブルをファイルに出力します。
JA	ZZZZ010500	1500	ZZZZ010511	11---?MENU?
JA	ZZZZ010500	1600		クライアントをバージョンアップする時使います。
JA	ZZZZ010500	1700		(バージョンアップが必要な時はこのプログラムが起動されます）
JA	ZZZZ010500	1800	ZZZZ010512	12---?MENU?
JA	ZZZZ010500	1900		IPRINT?.EXEをバージョンアップする時使います。
JA	ZZZZ010500	2000	ZZZZ010514	14---?MENU?
JA	ZZZZ010500	2100		プログラムをファイルに出力します。
JA	ZZZZ010500	2200	ZZZZ010515	15---?MENU?
JA	ZZZZ010500	2300		本番テーブルをファイルに出力します。
JA	ZZZZ010500	2400	ZZZZ010516	16---?MENU?
JA	ZZZZ010500	2500		オブジェクトをファイルに出力します。
JA	ZZZZ010500	2600	ZZZZ010519	19---?MENU?                      P
JA	ZZZZ010500	2700		データベースのエラーログを見られます。
JA	ZZZZ010500	2800		注意：Microsoft　SQL　Server専用です。
JA	ZZZZ010500	2900	ZZZZ010520	20---?MENU?
JA	ZZZZ010500	3000		サービスの出力しているファイルの内容を表示します。
JA	ZZZZ010500	3100	ZZZZ010521	21---?MENU?
JA	ZZZZ010500	3200		時間起動の予約または中止を実行します。
JA	ZZZZ010500	3300	ZZZZ010523	23---?MENU?
JA	ZZZZ010500	3400		時間起動予約状況を表示します。
JA	ZZZZ010500	3500	ZZZZ010525	25---?MENU?
JA	ZZZZ010500	3600		部分を更新します。
JA	ZZZZ010500	3700	ZZZZ010527	27---?MENU?
JA	ZZZZ010500	3800		テストプログラムをファイルから入力します。
JA	ZZZZ010500	3900	ZZZZ010528	28---?MENU?
JA	ZZZZ010500	4000		テストテーブルをファイルから入力します。
JA	ZZZZ010500	4100	ZZZZ010529	29---?MENU?
JA	ZZZZ010500	4200		テストオブジェクトをファイルから入力します。
JA	ZZZZ010500	4300	ZZZZ010531	31---?MENU?
JA	ZZZZ010500	4400		新バージョンの情報を設定しクライアントで使えるようにします。
JA	ZZZZ010500	4500		サーバーの?_IV?MENU?.EXEと?_IV?TIME?.EXEを
JA	ZZZZ010500	4600		   最新にしてから実行します。
JA	ZZZZ010500	4700		(通常は再インストールで設定されます）
JA	ZZZZ010500	4800	ZZZZ010532	32---?MENU?
JA	ZZZZ010500	4900		IPRINT?.EXEのバージョンを設定します。
JA	ZZZZ010500	5000		(通常は再インストールで設定されます）
JA	ZZZZ010500	5100	ZZZZ010534	34---?MENU?
JA	ZZZZ010500	5200		本番プログラムをファイルから入力します。
JA	ZZZZ010500	5300	ZZZZ010535	35---?MENU?
JA	ZZZZ010500	5400		本番テーブルをファイルから入力します。
JA	ZZZZ010500	5500	ZZZZ010536	36---?MENU?
JA	ZZZZ010500	5600		本番オブジェクトをファイルから入力します。
JA	ZZZZ010500	5700	ZZZZ010538	38---?MENU?
JA	ZZZZ010500	5800		ZZZZ以外のメニューを構築する時に使用します。
JA	ZZZZ010500	5900	ZZZZ010539	39---?MENU?
JA	ZZZZ010500	6000		リンクサーバーを設定します。
JA	ZZZZ010500	6100		注意：Microsoft　SQL　Server専用です。
JA	ZZZZ010500	6200	ZZZZ010540	40---?MENU?
JA	ZZZZ010500	6300		許可の更新が出来ます。
JA	ZZZZ010500	6400		パスワードの確認が出来ます。
JA	ZZZZ010500	6500		注意：自サーバーでのみ実行可能です。
JA	ZZZZ010501	100		サーバーではこの画面は１個しか表示出来ません。
JA	ZZZZ010501	200		複数システムをインストールした場合は、必ずリンクサーバーを
JA	ZZZZ010501	300		設定し同じ画面上に表示してください。
JA	ZZZZ010539	100		注意：PostgreSQLとIBM DB2はODBCを使うのでODBCの
JA	ZZZZ010539	200		      システムDSNを設定して下さい。
JA	ZZZZ010539	300		
JA	ZZZZ010539	400		PostgreSQL の設定値
JA	ZZZZ010539	500		       ドライバー:PostgreSQL Unicode
JA	ZZZZ010539	600		   データソース名:I_自システム名_リンク名
JA	ZZZZ010539	700		  　　 サーバー名:相手サーバー名
JA	ZZZZ010539	800		   データベース名:i_相手システム名 (注意：英小文字で設定）
JA	ZZZZ010539	900		
JA	ZZZZ010539	1000		IBM DB2    の設定値
JA	ZZZZ010539	1100		       ドライバー:IBM DB2 ODBC DRIVER - DB2COPY1
JA	ZZZZ010539	1200		 データ・ソース名:I_自システム名_リンク名
JA	ZZZZ010539	1300		 データベース別名:相手システム名
JA	ZZZZ010540	100		許可は通常ZAAAからZZZYまでを使用します。
JA	ZZZZ010540	120		許可GがAAAAからVZZZまではパッケージソフト用です。
JA	ZZZZ010542	100		許可は通常ZZZAからZZZYまでを使用します。
JA	ZZZZ010542	200		許可GがAAAからVZZZまではパッケージソフト用です。
JA	ZZZZ010700	100		注意:当メニューは再インストールで初期状態に戻ってしまうので、
JA	ZZZZ010700	200		     必ず別メニューにコピーして構築して下さい。
JA	ZZZZ010700	300	ZZZZ010740	?MENU?
JA	ZZZZ010700	400		注意:初期はテーブルが無いので,実行して見たい時は,必ずここで,
JA	ZZZZ010700	500		     テーブルを作ってから実行して下さい。
JA	ZZZZ010700	600	ZZZZ010701	?MENU?
JA	ZZZZ010700	700	ZZZZ010721	?MENU?
JA	ZZZZ010700	800		電話帳等,大量の情報を分類し,更新や検索をする場合に使えます。
JA	ZZZZ010700	900		データ名は分類の対象に合わせて、変更して下さい。
JA	ZZZZ010700	1000	ZZZZ010703	?MENU?
JA	ZZZZ010700	1100	ZZZZ010723	?MENU?
JA	ZZZZ010700	1200		会議室等の予約をする場合に使えます。
JA	ZZZZ010700	1300		データ名は分類の対象に合わせて、変更して下さい。
JA	ZZZZ010700	1400	ZZZZ010705	?MENU?
JA	ZZZZ010700	1500	ZZZZ010706	?MENU?
JA	ZZZZ010700	1600	ZZZZ010725	?MENU?
JA	ZZZZ010700	1700	ZZZZ010726	?MENU?
JA	ZZZZ010700	1800		郵便番号をインターネットからダウンロードし検索出来ます。
JA	ZZZZ010700	1900		応用例として年賀状発行をWORKの差込印刷を使って出来ます。
JA	ZZZZ010700	2000	ZZZZ010710	?MENU?
JA	ZZZZ010700	2100	ZZZZ010711	?MENU?
JA	ZZZZ010700	2200	ZZZZ010712	?MENU?
JA	ZZZZ010700	2300	ZZZZ010713	?MENU?
JA	ZZZZ010700	2400	ZZZZ010714	?MENU?
JA	ZZZZ010700	2500	ZZZZ010731	?MENU?
JA	ZZZZ010700	2600	ZZZZ010732	?MENU?
JA	ZZZZ010700	2700	ZZZZ010733	?MENU?
JA	ZZZZ010700	2800	ZZZZ010734	?MENU?
JA	ZZZZ010700	2900		給与システム開発に参考となりそうなプログラムを作って見ました,
JA	ZZZZ010700	3000		ただし、内容が正しいかは検証してないので,検証して下さい。
JA	ZZZZ400000	100		(1)最初にZZZZ404040でシステムをCOPYするか、この場でメニューを
JA	ZZZZ400000	200		  復元するUSEのどちらかを実行する事で使用出来ます。
JA	ZZZZ400000	300		(2)ZZZZ404021,22,23(USEの時)でテーブルを作成します。
JA	ZZZZ400000	400		(3)ZZZZ402138,39(USEの時)で場所,倉庫マスターを更新します。
JA	ZZZZ400000	500		(4)ZZZZ402121,22,23,24,25(USEの時)で各マスターを更新します。
JA	ZZZZ400000	600		(5)ZZZZ999961から67(USEの時)の時間起動で歴を作成します。
JA	ZZZZ400000	700		  (USEの時は稼働日の立ち上げ処理で毎回実行されます)
JA	ZZZZ400000	800		  (62以降は無駄ですが実行して下さい,61でMRP処理中となる為)
JA	ZZZZ400000	900		(6)ZZZZ4021335(USEの時)で歴マスターを更新します。
JA	ZZZZ400000	1000		(7)ZZZZ400121(USEの時)で生産計画を更新します。
JA	ZZZZ400000	1100		(8)ZZZZ999961から67(USEの時)の時間起動で発注量を計算します。
JA	ZZZZ400000	1200		(9)ZZZZ400103(USEの時)で伝票を発行します。
JA	ZZZZ400000	1300		(10)ZZZZ400123(USEの時)で伝票の受け入れ処理をします。
JA	ZZZZ400000	1400	ZZZZ400100	?MENU?
JA	ZZZZ400000	1500		日常業務で使用するメニューです
JA	ZZZZ400000	1600	ZZZZ402000	?MENU?
JA	ZZZZ400000	1700		システムの不具合が発生した場合ここで対応します。
JA	ZZZZ400000	1800	ZZZZ402100	?MENU?
JA	ZZZZ400000	1900		基本情報を更新するメニューです。
JA	ZZZZ400000	2000	ZZZZ404000	?MENU?
JA	ZZZZ400000	2100		当システムの初期構築をここで行います。
JA	ZZZZ400100	100		(1)各種マスターが設定され、時間起動で歴マスターが作られる事で
JA	ZZZZ400100	200		   生産計画が更新出来るようになるので作成します。
JA	ZZZZ400100	300		(2)生産計画が出来た後に、時間起動処理が流れる事で、
JA	ZZZZ400100	400		   納品伝票が発行出来るようになるので、
JA	ZZZZ400100	410		  ZZZZ400103[発注 納品伝票発行]で発行します。
JA	ZZZZ400100	500		   ●生産計画に対し伝票発行された物は、以後生産計画ではなく
JA	ZZZZ400100	600		     発行された発注計画が生産計画として利用されます。
JA	ZZZZ400100	700		   　この判定は 混在マスターのWW_PRODUCTION_DATE（生産計画日)
JA	ZZZZ400100	800		     で行っています。
JA	ZZZZ400100	900		(3)伝票が入ってきた時に、ZZZZ400123[発注 伝票受入]
JA	ZZZZ400100	1000		   で受け入れ処理をします。
JA	ZZZZ402000	100		★当メニューはシステム上のトラブルが発生した場合使用するもの
JA	ZZZZ402000	200		  で、通常は使用しません。
JA	ZZZZ402100	100		(1)各種マスターを作成します。
JA	ZZZZ402100	200		(2)最初は倉庫マスターと場所マスターを作成して下さい。
JA	ZZZZ402100	300		   ●混在マスターは既に作られているので作成は不要です。
JA	ZZZZ402100	400		(3)歴マスターは場所マスター構築後時間起動処理のZZZZ999961
JA	ZZZZ402100	500		   の[MRP 暦 設定]が動く事で作られます。
JA	ZZZZ402100	600		   ●休日はシステムのカレンダーと同じ内容で設定されるので、
JA	ZZZZ402100	700		     設定された後ZZZZ402135[発注 暦マスター 更新]
JA	ZZZZ402100	800		     で変更して下さい。
JA	ZZZZ402100	900		(4)次に物、工程、構成マスターを順番に作ります。
JA	ZZZZ402100	1000		(5)実際単価を変更する時はZZZZ402125を使用します。
JA	ZZZZ402100	1100		   ●実際単価の初期値は工程マスター更新で作成します。
JA	ZZZZ404000	100		★注意：実際使用する時はZZZZ404040で必ず別の場所にコピーして
JA	ZZZZ404000	200		  から使って下さい。(再インストールで初期化されてしまいます）
JA	ZZZZ404000	300		サンプル発注システムの初期構築をここでします。
JA	ZZZZ404000	400		21,22,23を順番に実行します。
JA	ZZZZ404000	500	ZZZZ404021	?MENU?
JA	ZZZZ404000	600		  ここで基本項目の属性を設定します。
JA	ZZZZ404000	700	ZZZZ404022	?MENU?
JA	ZZZZ404000	800		  ここで基本項目の属性を基にディクショナリを設定します。
JA	ZZZZ404000	900	ZZZZ404023	?MENU?
JA	ZZZZ404000	1000		  ここで実際のテーブルを作成します。
JA	ZZZZ404000	1100	ZZZZ404040	?MENU?
JA	ZZZZ404000	1200		  システムを別の場所にコピーします。
JA	ZZZZ404021	100		YESデクショナリ初期定義情報を作成後、更新します。
JA	ZZZZ404021	200		更新後ENDで次の作業に行きます。
JA	ZZZZ404021	300	ZZZZ010225	デクショナリ定義方法は左記にあります。
JA	ZZZZ404021	400		●補足説明
JA	ZZZZ404021	500		  ほとんどのパッケージソフトは事前にテーブルが作られており、
JA	ZZZZ404021	600		JOINする場合は無意味な連番を使って結合します。
JA	ZZZZ404021	700		  理由は、基本情報の属性が企業によって異なるため、
JA	ZZZZ404021	800		基本情報によるJOINがしにくい為と考えます。
JA	ZZZZ404021	900		  結果余分な情報を持ち、システムが難しくなる危険があるので、
JA	ZZZZ404021	1000		当システムでは、基本情報の属性を決定後にテーブルを作る事で、
JA	ZZZZ404021	1100		無意味な連番を無くし、簡単にしています。
JA	ZZZZ404022	100		最初の画面で'YES'[Enter]をします。
JA	ZZZZ404022	200		★注意:再実行すると、全ての情報が初期化されるので注意下さい。
JA	ZZZZ404022	300		次の画面はディクショナリの更新画面です。
JA	ZZZZ404022	400		通常は変更する必要はないので「Esc]で終了します。
JA	ZZZZ404022	500		処画面に戻るので'END'[Enter]で終了します。
JA	ZZZZ404023	100		★注意:許可ZZZYの管理者（ZZZZZZZY等）でないと実行出来ません。
JA	ZZZZ404023	200		'ALL'[Enter]で以下の全てのテーブルが再構築されます。
JA	ZZZZ404023	300		★注意:再実行するとテーブルが初期化されるので注意下さい。
JA	ZZZZ404023	400		'YES','NO'で再構築するテーブルを選択出来ます。
JA	ZZZZ404023	500		★注意:'ALL','YES'[Enter]で即実行されます。
JA	ZZZZ404023	600		最後に'END'[Enter]で終了します。
